{"version":3,"sources":["webpack:///./src/components/common/Routing.css?d9a1","webpack:///./src/index.css?7522","webpack:///./src/components/common/ErrorBoundary.jsx","webpack:///./src/components/common/Routing.jsx","webpack:///./src/components/routes.js","webpack:///./src/components/App.jsx","webpack:///./src/index.js"],"names":["reloadPage","window","location","reload","ErrorBoundary","props","state","hasError","componentDidCatch","setState","render","children","React","Component","WrapLazy","Children","Routing","routes","style","map","route","path","active","name","component","ROUTES","lazy","App","document","querySelector","stats","Stats","body","appendChild","dom","requestAnimationFrame","loop","update"],"mappings":"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","file":"app.96f5e4cc.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"routes\":\"Routing__routes__1Ylcn\",\"active\":\"Routing__active__2g7D7\"};","// extracted by mini-css-extract-plugin","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction reloadPage () {\n  window.location.reload()\n}\n\nexport default class ErrorBoundary extends React.Component {\n  static propTypes = {\n    children: PropTypes.element.isRequired,\n  }\n\n  constructor (props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  componentDidCatch () {\n    this.setState({ hasError: true })\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return [\n        <h1>{'I\\'m sorry. Something went wrong.'}</h1>,\n        <button onClick={reloadPage} type=\"button\">Reload</button>,\n      ]\n    }\n    return this.props.children\n  }\n}\n","import React, { Suspense } from 'react'\nimport PropTypes from 'prop-types'\nimport { BrowserRouter, NavLink, Redirect, Route, Switch } from 'react-router-dom'\nimport style from './Routing.css'\n\nconst WrapLazy = (Children) => () => (\n  <Suspense fallback={<div>Loading...</div>}>\n    <Children />\n  </Suspense>\n)\n\nconst Routing = ({ routes }) => (\n  <BrowserRouter>\n    <div className=\"app\">\n      <ul className={style.routes}>\n        {routes.map((route) => (\n          <li key={route.path}>\n            <NavLink to={route.path} activeClassName={style.active}>{route.name}</NavLink>\n          </li>\n        ))}\n      </ul>\n      <Switch>\n        {routes.map((route) => (\n          <Route\n            key={route.path}\n            path={route.path}\n            component={WrapLazy(route.component)}\n          />\n        ))}\n        <Redirect exact from=\"/\" to={routes[0].path} />\n      </Switch>\n    </div>\n  </BrowserRouter>\n)\n\nRouting.propTypes = {\n  routes: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    path: PropTypes.string,\n    component: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  })).isRequired,\n}\n\nexport default Routing\n","import { lazy } from 'react'\n\nexport const ROUTES = [\n  {\n    name: 'Optimized',\n    path: '/optimized',\n    component: lazy(() => import('./optimized/GriffeathMachine')),\n  },\n  {\n    name: 'Original',\n    path: '/original',\n    component: lazy(() => import('./original/GriffeathMachine')),\n  },\n  {\n    name: 'GPU Accelerated',\n    path: '/gpu',\n    component: lazy(() => import('./gpu/GriffeathMachine')),\n  },\n]\n","import React from 'react'\nimport ErrorBoundary from './common/ErrorBoundary'\nimport Routing from './common/Routing'\nimport { ROUTES } from './routes'\n\nconst App = () => <ErrorBoundary><Routing routes={ROUTES} /></ErrorBoundary>\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\n\nimport './index.css'\nimport App from './components/App'\n\nrender(<App />, document.querySelector('#app'))\n\n// eslint-disable-next-line no-undef, comment: it's global\nconst stats = new Stats()\ndocument.body.appendChild(stats.dom)\nrequestAnimationFrame(function loop () {\n  stats.update()\n  requestAnimationFrame(loop)\n})\n"],"sourceRoot":""}