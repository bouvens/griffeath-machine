{"version":3,"sources":["webpack:///./src/components/GriffeathMachine.css","webpack:///./src/utils.js","webpack:///./src/components/constants.js","webpack:///./src/components/GriffeathMachine.jsx","webpack:///./src/index.js","webpack:///./src/components/CanvasField.jsx"],"names":["module","exports","field","bigButton","_ref","width","height","states","x","y","Math","floor","random","h","h2rgb","initT","t","mod","r","g","b","round","number","limit","getUpdatedField","_ref2","map","line","element","plusOne","IDS","status","DEFAULT","_DEFAULT","STATUSES","play","pause","SPACE_CODE","__WEBPACK_IMPORTED_MODULE_0_react___default","a","createElement","GriffeathMachine","state","_this","props","__WEBPACK_IMPORTED_MODULE_3__constants__","getActionName","randomizeField","Object","__WEBPACK_IMPORTED_MODULE_4__utils__","processKey","e","keyCode","preventDefault","handlePlay","nextStep","setState","canvas","paint","requestAnimationFrame","handleNew","handleNext","changeHandler","name","value","_this$setState","selectAll","control","setSelectionRange","length","componentWillMount","this","document","addEventListener","render","_this2","__WEBPACK_IMPORTED_MODULE_2_state_control__","onChange","onFocus","id","label","defaultNum","onClick","onKeyDown","className","__WEBPACK_IMPORTED_MODULE_6__GriffeathMachine_css___default","role","title","__WEBPACK_IMPORTED_MODULE_5__CanvasField__","ref","__WEBPACK_IMPORTED_MODULE_0_react__","defaultProps","__WEBPACK_IMPORTED_MODULE_1_react_dom__","__WEBPACK_IMPORTED_MODULE_3__components_GriffeathMachine__","querySelector","CanvasField","drawPixel","index","_hueToRgb","__WEBPACK_IMPORTED_MODULE_2__utils__","canvasData","data","arguments","undefined","canvasContext","getImageData","putImageData","refCanvas","elem","getContext","componentDidMount","componentDidUpdate","PureComponent"],"mappings":"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","file":"app.30e9e13a.js","sourcesContent":["// removed by extract-text-webpack-plugin\nmodule.exports = {\"field\":\"GriffeathMachine__field__rXP46\",\"bigButton\":\"GriffeathMachine__bigButton__1sICS\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/GriffeathMachine.css\n// module id = BLn6\n// module chunks = 1","export function getRandomField ({ width, height, states }) {\n    const field = []\n\n    for (let x = 0; x < width; x += 1) {\n        field[x] = []\n        for (let y = 0; y < height; y += 1) {\n            field[x][y] = Math.floor(Math.random() * states)\n        }\n    }\n\n    return field\n}\n\nconst mod = (number, limit) => (number < 0 ? number + limit : number % limit)\n\nexport const getUpdatedField = ({ field, width, height, states }) => field.map((line, x) =>\n    line.map((element, y) => {\n        const plusOne = mod(element + 1, states)\n\n        if (\n            field[x][mod(y - 1, height)] === plusOne\n            || field[x][mod(y + 1, height)] === plusOne\n            || field[mod(x - 1, width)][y] === plusOne\n            || field[mod(x + 1, width)][y] === plusOne\n        ) {\n            return plusOne\n        }\n\n        return element\n    }))\n\nexport function hueToRgb (h) {\n    const h2rgb = (initT) => {\n        const t = mod(initT, 1)\n\n        if (t < 1 / 6) {\n            return 6 * t\n        }\n        if (t < 1 / 2) {\n            return 1\n        }\n        if (t < 2 / 3) {\n            return ((2 / 3) - t) * 6\n        }\n\n        return 0\n    }\n\n    const r = h2rgb(h + (1 / 3))\n    const g = h2rgb(h)\n    const b = h2rgb(h - (1 / 3))\n\n    return {\n        r: Math.round(r * 255),\n        g: Math.round(g * 255),\n        b: Math.round(b * 255),\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","export const IDS = {\n    width: 'width',\n    height: 'height',\n    states: 'states',\n    status: 'status',\n}\n\nexport const DEFAULT = {\n    [IDS.width]: 500,\n    [IDS.height]: 500,\n    [IDS.states]: 16,\n}\n\nexport const STATUSES = {\n    play: 'Play',\n    pause: 'Pause',\n}\n\nexport const SPACE_CODE = 32\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/constants.js","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Connector, Input } from 'state-control'\nimport { DEFAULT, IDS, STATUSES, SPACE_CODE } from './constants'\nimport { getRandomField, getUpdatedField } from '../utils'\nimport CanvasField from './CanvasField'\nimport style from './GriffeathMachine.css'\n\nexport default class GriffeathMachine extends PureComponent {\n    static propTypes = {\n        width: PropTypes.number.isRequired,\n        height: PropTypes.number.isRequired,\n        states: PropTypes.number.isRequired,\n    }\n\n    static defaultProps = { ...DEFAULT }\n\n    state = {\n        width: this.props.width,\n        height: this.props.height,\n        states: this.props.states,\n        status: STATUSES.pause,\n    }\n\n    componentWillMount () {\n        this.randomizeField()\n        this.handlePlay()\n        document.addEventListener('keydown', this.processKey)\n    }\n\n    getActionName = () => (this.state.status === STATUSES.play ? STATUSES.pause : STATUSES.play)\n\n    field = null\n\n    randomizeField = () => {\n        this.field = getRandomField(this.state)\n    }\n\n    processKey = (e) => {\n        if (e.keyCode === SPACE_CODE) {\n            e.preventDefault()\n            this.handlePlay()\n        }\n    }\n\n    nextStep = () => {\n        try {\n            this.field = getUpdatedField({ ...this.state, field: this.field })\n        } catch (e) {\n            this.field = getRandomField(this.state)\n            this.setState({\n                status: STATUSES.pause,\n            })\n        }\n        this.canvas.paint(this.field)\n\n        if (this.state.status === STATUSES.play) {\n            requestAnimationFrame(this.nextStep)\n        }\n    }\n\n    handleNew = () => {\n        this.randomizeField()\n        this.canvas.paint(this.field)\n    }\n\n    handleNext = () => {\n        this.field = getUpdatedField({ ...this.state, field: this.field })\n        this.canvas.paint(this.field)\n    }\n\n    handlePlay = () => {\n        switch (this.state.status) {\n            case STATUSES.play:\n                this.setState({ status: STATUSES.pause })\n                break\n            case STATUSES.pause:\n                this.setState({ status: STATUSES.play }, this.nextStep)\n                break\n            default:\n        }\n    }\n\n    changeHandler = (name, value) => {\n        this.setState({ [name]: value })\n    }\n\n    selectAll = (control) => control.setSelectionRange(0, control.value.length)\n\n    render () {\n        return (\n            <div>\n                <Connector\n                    state={this.state}\n                    onChange={this.changeHandler}\n                    onFocus={this.selectAll}\n                >\n                    <Input\n                        id={IDS.width}\n                        label=\"Field width\"\n                        defaultNum={1}\n                    />\n                    <Input\n                        id={IDS.height}\n                        label=\"Field height\"\n                        defaultNum={1}\n                    />\n                    <Input\n                        id={IDS.states}\n                        label=\"Number of states\"\n                        defaultNum={1}\n                    />\n                </Connector>\n                <div\n                    onClick={this.handlePlay}\n                    onKeyDown={this.processKey}\n                    className={style.field}\n                    role=\"presentation\"\n                    title={this.getActionName()}\n                >\n                    <CanvasField\n                        width={this.state.width}\n                        height={this.state.height}\n                        field={this.field}\n                        states={this.state.states}\n                        ref={(e) => { this.canvas = e }}\n                    />\n                </div>\n                <p><em>Press Space or click field for play/pause</em></p>\n                <button className={style.bigButton} onClick={this.handleNew}>\n                    New\n                </button>\n                <button className={style.bigButton} onClick={this.handlePlay}>\n                    {this.getActionName()}\n                </button>\n                {this.state.status === STATUSES.pause &&\n                <button className={style.bigButton} onClick={this.handleNext}>\n                    Next step\n                </button>\n                }\n            </div>\n        )\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/GriffeathMachine.jsx","import React from 'react'\nimport { render } from 'react-dom'\n\nimport './index.css'\nimport GriffeathMachine from './components/GriffeathMachine'\n\nrender(<GriffeathMachine />, document.querySelector('#app'))\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { hueToRgb } from '../utils'\n\nexport default class CanvasField extends React.PureComponent {\n    static propTypes = {\n        width: PropTypes.number.isRequired,\n        height: PropTypes.number.isRequired,\n        field: PropTypes.arrayOf(PropTypes.array).isRequired,\n        states: PropTypes.number.isRequired,\n    }\n\n    componentDidMount () {\n        this.paint()\n    }\n\n    componentDidUpdate () {\n        this.paint()\n    }\n\n    canvasContext\n    canvasData\n\n    drawPixel = (x, y, h) => {\n        const index = (x + (y * this.props.width)) * 4\n        const { r, g, b } = hueToRgb(h)\n\n        this.canvasData.data[index] = r\n        this.canvasData.data[index + 1] = g\n        this.canvasData.data[index + 2] = b\n        this.canvasData.data[index + 3] = 255\n    }\n\n    paint = (field = this.props.field) => {\n        this.canvasData = this.canvasContext.getImageData(0, 0, this.props.width, this.props.height)\n\n        for (let x = 0; x < this.props.width; x += 1) {\n            for (let y = 0; y < this.props.height; y += 1) {\n                this.drawPixel(x, y, field[x][y] / this.props.states)\n            }\n        }\n\n        this.canvasContext.putImageData(this.canvasData, 0, 0)\n    }\n\n    refCanvas = (elem) => {\n        this.canvasContext = elem.getContext('2d')\n    }\n\n    render () {\n        return (\n            <canvas\n                ref={this.refCanvas}\n                width={this.props.width}\n                height={this.props.height}\n            >\n                {'You are using an outdated browser without support of canvas elements.'}\n            </canvas>\n        )\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/CanvasField.jsx"],"sourceRoot":""}