{"version":3,"sources":["components/optimized/GriffeathMachine.jsx"],"names":["DEFAULT","GriffeathMachine","state","width","props","height","states","status","STATUSES","pause","field","canvas","React","createRef","getActionName","play","randomizeField","processKey","e","keyCode","SPACE_CODE","preventDefault","handlePlay","nextStep","requestID","requestAnimationFrame","cancelAnimationFrame","setState","current","paint","handleNew","handleNext","changeHandler","name","value","document","addEventListener","IDS","style","bigButton","PureComponent","propTypes","PropTypes","number","isRequired","defaultProps"],"mappings":"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","file":"GriffeathMachine.bbdf080e.js","sourceRoot":"..\\src","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Connector, Input } from 'state-control'\nimport { DEFAULT, IDS, SPACE_CODE, STATUSES } from '../constants'\nimport style from '../common/GriffeathMachine.css'\nimport CanvasField from '../common/CanvasField'\nimport { getRandomField, getUpdatedField } from '../common/utils'\n\nexport default class GriffeathMachine extends PureComponent {\n  static propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    states: PropTypes.number.isRequired,\n  }\n\n  static defaultProps = { ...DEFAULT }\n\n  state = {\n    width: this.props.width,\n    height: this.props.height,\n    states: this.props.states,\n    status: STATUSES.pause,\n  }\n\n  field = null\n\n  canvas = React.createRef()\n\n  componentWillMount () {\n    this.randomizeField()\n    this.handlePlay()\n    document.addEventListener('keydown', this.processKey)\n  }\n\n  componentWillUnmount () {\n    cancelAnimationFrame(this.requestID)\n  }\n\n  getActionName = () => (this.state.status === STATUSES.play ? STATUSES.pause : STATUSES.play)\n\n  randomizeField = () => {\n    this.field = getRandomField(this.state)\n  }\n\n  processKey = (e) => {\n    if (e.keyCode === SPACE_CODE) {\n      e.preventDefault()\n      this.handlePlay()\n    }\n  }\n\n  nextStep = () => {\n    try {\n      this.field = getUpdatedField({ ...this.state, field: this.field })\n\n      if (this.state.status === STATUSES.play) {\n        this.requestID = requestAnimationFrame(this.nextStep)\n      }\n    } catch (e) {\n      cancelAnimationFrame(this.requestID)\n      this.field = getRandomField(this.state)\n      this.setState({\n        status: STATUSES.pause,\n      })\n    }\n    this.canvas.current.paint(this.field)\n  }\n\n  handleNew = () => {\n    this.randomizeField()\n    this.canvas.current.paint(this.field)\n  }\n\n  handleNext = () => {\n    this.field = getUpdatedField({ ...this.state, field: this.field })\n    this.canvas.current.paint(this.field)\n  }\n\n  handlePlay = () => {\n    switch (this.state.status) {\n      case STATUSES.play:\n        this.setState({ status: STATUSES.pause })\n        break\n      case STATUSES.pause:\n        this.setState({ status: STATUSES.play }, this.nextStep)\n        break\n      default:\n    }\n  }\n\n  changeHandler = (name, value) => {\n    this.setState({ [name]: value })\n  }\n\n  render () {\n    return (\n      <div>\n        <Connector\n          state={this.state}\n          onChange={this.changeHandler}\n        >\n          <Input\n            id={IDS.width}\n            label=\"Field width\"\n            defaultNum={1}\n          />\n          <Input\n            id={IDS.height}\n            label=\"Field height\"\n            defaultNum={1}\n          />\n          <Input\n            id={IDS.states}\n            label=\"Number of states\"\n            defaultNum={1}\n          />\n        </Connector>\n        <div\n          onClick={this.handlePlay}\n          onKeyDown={this.processKey}\n          className={style.field}\n          role=\"presentation\"\n          title={this.getActionName()}\n        >\n          <CanvasField\n            width={this.state.width}\n            height={this.state.height}\n            states={this.state.states}\n            ref={this.canvas}\n          />\n        </div>\n        <p><em>Press Space or click field for play / pause</em></p>\n        <button type=\"button\" className={style.bigButton} onClick={this.handleNew}>\n          New\n        </button>\n        <button type=\"button\" className={style.bigButton} onClick={this.handlePlay}>\n          {this.getActionName()}\n        </button>\n        {this.state.status === STATUSES.pause && (\n          <button type=\"button\" className={style.bigButton} onClick={this.handleNext}>\n            Next step\n          </button>\n        )}\n      </div>\n    )\n  }\n}\n"]}