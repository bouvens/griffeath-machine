{"version":3,"sources":["webpack:///./src/components/constants.js","webpack:///./src/components/common/GriffeathMachine.css?dfff","webpack:///./src/components/original/utils.js","webpack:///./src/components/original/CanvasField.jsx","webpack:///./src/components/original/GriffeathMachine.jsx"],"names":["IDS","width","height","states","status","DEFAULT","_DEFAULT","STATUSES","play","pause","SPACE_CODE","module","exports","field","bigButton","getRandomField","_ref","x","y","Math","floor","random","mod","number","limit","getUpdatedField","_ref2","map","line","element","plusOne","CanvasField","drawPixel","h","index","_this","props","_hueToRgb","h2rgb","initT","t","r","g","b","round","hueToRgb","canvasData","data","paint","canvasContext","getImageData","putImageData","refCanvas","elem","getContext","render","react_default","a","createElement","ref","this","React","PureComponent","GriffeathMachine","state","canvas","createRef","getActionName","randomizeField","processKey","e","keyCode","preventDefault","handlePlay","nextStep","requestID","requestAnimationFrame","cancelAnimationFrame","setState","current","handleNew","handleNext","changeHandler","name","value","_this$setState","componentWillMount","document","addEventListener","componentWillUnmount","es","onChange","id","label","defaultNum","onClick","onKeyDown","className","style","role","title","CanvasField_CanvasField","type","defaultProps"],"mappings":"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","file":"3.e0a7f3d6.js","sourcesContent":["export const IDS = {\n  width: 'width',\n  height: 'height',\n  states: 'states',\n  status: 'status',\n}\n\nexport const DEFAULT = {\n  [IDS.width]: 700,\n  [IDS.height]: 700,\n  [IDS.states]: 16,\n}\n\nexport const STATUSES = {\n  play: 'Play',\n  pause: 'Pause',\n}\n\nexport const SPACE_CODE = 32\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"GriffeathMachine__field__2ugWL\",\"bigButton\":\"GriffeathMachine__bigButton__1GY-9\"};","export function getRandomField ({ width, height, states }) {\n  const field = []\n\n  for (let x = 0; x < width; x += 1) {\n    field[x] = []\n    for (let y = 0; y < height; y += 1) {\n      field[x][y] = Math.floor(Math.random() * states)\n    }\n  }\n\n  return field\n}\n\nconst mod = (number, limit) => (number < 0 ? number + limit : number % limit)\n\nexport const getUpdatedField = ({ field, width, height, states }) => field.map((line, x) => line.map((element, y) => {\n  const plusOne = mod(element + 1, states)\n\n  if (field[x][mod(y - 1, height)] === plusOne\n    || field[x][mod(y + 1, height)] === plusOne\n    || field[mod(x - 1, width)][y] === plusOne\n    || field[mod(x + 1, width)][y] === plusOne) {\n    return plusOne\n  }\n\n  return element\n}))\n\nexport function hueToRgb (h) {\n  const h2rgb = (initT) => {\n    const t = mod(initT, 1)\n\n    if (t < 1 / 6) {\n      return 6 * t\n    }\n    if (t < 1 / 2) {\n      return 1\n    }\n    if (t < 2 / 3) {\n      return ((2 / 3) - t) * 6\n    }\n\n    return 0\n  }\n\n  const r = h2rgb(h + (1 / 3))\n  const g = h2rgb(h)\n  const b = h2rgb(h - (1 / 3))\n\n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255),\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { hueToRgb } from './utils'\n\nexport default class CanvasField extends React.PureComponent {\n  static propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    states: PropTypes.number.isRequired,\n  }\n\n  drawPixel = (x, y, h) => {\n    const index = (x + (y * this.props.width)) * 4\n    const { r, g, b } = hueToRgb(h)\n\n    this.canvasData.data[index] = r\n    this.canvasData.data[index + 1] = g\n    this.canvasData.data[index + 2] = b\n    this.canvasData.data[index + 3] = 255\n  }\n\n  paint = (field) => {\n    this.canvasData = this.canvasContext.getImageData(0, 0, this.props.width, this.props.height)\n\n    for (let x = 0; x < this.props.width; x += 1) {\n      for (let y = 0; y < this.props.height; y += 1) {\n        if (field[x]) {\n          this.drawPixel(x, y, field[x][y] / this.props.states)\n        }\n      }\n    }\n\n    this.canvasContext.putImageData(this.canvasData, 0, 0)\n  }\n\n  refCanvas = (elem) => {\n    this.canvasContext = elem && elem.getContext('2d')\n  }\n\n  canvasContext\n\n  canvasData\n\n  render () {\n    return (\n      <canvas\n        ref={this.refCanvas}\n        width={this.props.width}\n        height={this.props.height}\n      >\n        {'You are using an outdated browser without support of canvas elements.'}\n      </canvas>\n    )\n  }\n}\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Connector, Input } from 'state-control'\nimport { DEFAULT, IDS, SPACE_CODE, STATUSES } from '../constants'\nimport style from '../common/GriffeathMachine.css'\nimport { getRandomField, getUpdatedField } from './utils'\nimport CanvasField from './CanvasField'\n\nexport default class GriffeathMachine extends PureComponent {\n  static propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    states: PropTypes.number.isRequired,\n  }\n\n  static defaultProps = { ...DEFAULT }\n\n  state = {\n    width: this.props.width,\n    height: this.props.height,\n    states: this.props.states,\n    status: STATUSES.pause,\n  }\n\n  field = null\n\n  canvas = React.createRef()\n\n  componentWillMount () {\n    this.randomizeField()\n    this.handlePlay()\n    document.addEventListener('keydown', this.processKey)\n  }\n\n  componentWillUnmount () {\n    cancelAnimationFrame(this.requestID)\n  }\n\n  getActionName = () => (this.state.status === STATUSES.play ? STATUSES.pause : STATUSES.play)\n\n  randomizeField = () => {\n    this.field = getRandomField(this.state)\n  }\n\n  processKey = (e) => {\n    if (e.keyCode === SPACE_CODE) {\n      e.preventDefault()\n      this.handlePlay()\n    }\n  }\n\n  nextStep = () => {\n    try {\n      this.field = getUpdatedField({ ...this.state, field: this.field })\n\n      if (this.state.status === STATUSES.play) {\n        this.requestID = requestAnimationFrame(this.nextStep)\n      }\n    } catch (e) {\n      cancelAnimationFrame(this.requestID)\n      this.field = getRandomField(this.state)\n      this.setState({\n        status: STATUSES.pause,\n      })\n    }\n    this.canvas.current.paint(this.field)\n  }\n\n  handleNew = () => {\n    this.randomizeField()\n    this.canvas.current.paint(this.field)\n  }\n\n  handleNext = () => {\n    this.field = getUpdatedField({ ...this.state, field: this.field })\n    this.canvas.current.paint(this.field)\n  }\n\n  handlePlay = () => {\n    switch (this.state.status) {\n      case STATUSES.play:\n        this.setState({ status: STATUSES.pause })\n        break\n      case STATUSES.pause:\n        this.setState({ status: STATUSES.play }, this.nextStep)\n        break\n      default:\n    }\n  }\n\n  changeHandler = (name, value) => {\n    this.setState({ [name]: value })\n  }\n\n  render () {\n    return (\n      <div>\n        <Connector\n          state={this.state}\n          onChange={this.changeHandler}\n        >\n          <Input\n            id={IDS.width}\n            label=\"Field width\"\n            defaultNum={1}\n          />\n          <Input\n            id={IDS.height}\n            label=\"Field height\"\n            defaultNum={1}\n          />\n          <Input\n            id={IDS.states}\n            label=\"Number of states\"\n            defaultNum={1}\n          />\n        </Connector>\n        <div\n          onClick={this.handlePlay}\n          onKeyDown={this.processKey}\n          className={style.field}\n          role=\"presentation\"\n          title={this.getActionName()}\n        >\n          <CanvasField\n            width={this.state.width}\n            height={this.state.height}\n            field={this.field}\n            states={this.state.states}\n            ref={this.canvas}\n          />\n        </div>\n        <p><em>Press Space or click field for play / pause</em></p>\n        <button type=\"button\" className={style.bigButton} onClick={this.handleNew}>\n          New\n        </button>\n        <button type=\"button\" className={style.bigButton} onClick={this.handlePlay}>\n          {this.getActionName()}\n        </button>\n        {this.state.status === STATUSES.pause && (\n          <button type=\"button\" className={style.bigButton} onClick={this.handleNext}>\n            Next step\n          </button>\n        )}\n      </div>\n    )\n  }\n}\n"],"sourceRoot":""}