{"version":3,"sources":["webpack:///./src/components/constants.js","webpack:///./src/components/common/GriffeathMachine.css?dfff","webpack:///./src/components/optimized/utils.js","webpack:///./src/components/optimized/CanvasField.jsx","webpack:///./src/components/optimized/GriffeathMachine.jsx"],"names":["IDS","width","height","states","status","DEFAULT","STATUSES","play","pause","SPACE_CODE","getRandomField","field","x","y","Math","floor","random","mod","number","limit","getUpdatedField","map","line","element","plusOne","mapNumToRGB","h","h2rgb","initT","t","r","g","b","round","colorMapping","DEFAULT_COLOR","getColor","length","i","CanvasField","drawPixel","index","props","uInt32Array","paint","Uint32Array","canvasData","ImageData","Uint8ClampedArray","buffer","canvasContext","putImageData","refCanvas","elem","getContext","render","React","PureComponent","GriffeathMachine","state","canvas","createRef","getActionName","randomizeField","processKey","e","keyCode","preventDefault","handlePlay","nextStep","requestID","requestAnimationFrame","cancelAnimationFrame","setState","current","handleNew","handleNext","changeHandler","name","value","componentWillMount","document","addEventListener","componentWillUnmount","style","bigButton","defaultProps"],"mappings":"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","file":"2.d207d8eb.js","sourcesContent":["export const IDS = {\n  width: 'width',\n  height: 'height',\n  states: 'states',\n  status: 'status',\n}\n\nexport const DEFAULT = {\n  [IDS.width]: 700,\n  [IDS.height]: 700,\n  [IDS.states]: 16,\n}\n\nexport const STATUSES = {\n  play: 'Play',\n  pause: 'Pause',\n}\n\nexport const SPACE_CODE = 32\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"GriffeathMachine__field__2ugWL\",\"bigButton\":\"GriffeathMachine__bigButton__1GY-9\"};","export function getRandomField ({ width, height, states }) {\n  const field = []\n\n  for (let x = 0; x < width; x += 1) {\n    field[x] = []\n    for (let y = 0; y < height; y += 1) {\n      field[x][y] = Math.floor(Math.random() * states)\n    }\n  }\n\n  return field\n}\n\nconst mod = (number, limit) => (number < 0 ? number + limit : number % limit)\n\nexport const getUpdatedField = ({ field, width, height, states }) => field.map((line, x) => line.map((element, y) => {\n  const plusOne = mod(element + 1, states)\n\n  if (field[x][mod(y - 1, height)] === plusOne\n    || field[x][mod(y + 1, height)] === plusOne\n    || field[mod(x - 1, width)][y] === plusOne\n    || field[mod(x + 1, width)][y] === plusOne) {\n    return plusOne\n  }\n\n  return element\n}))\n\nexport function mapNumToRGB (h) {\n  const h2rgb = (initT) => {\n    const t = initT < 0 ? initT + 1 : initT % 1\n\n    if (t < 1 / 6) {\n      return 6 * t\n    }\n    if (t < 1 / 2) {\n      return 1\n    }\n    if (t < 2 / 3) {\n      return ((2 / 3) - t) * 6\n    }\n\n    return 0\n  }\n\n  const r = h2rgb(h + (1 / 3))\n  const g = h2rgb(h)\n  const b = h2rgb(h - (1 / 3))\n\n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255),\n  }\n}\n\nconst colorMapping = []\nconst DEFAULT_COLOR = { r: 0, g: 0, b: 0 }\n\nexport function getColor (h, states) {\n  if (colorMapping.length !== states) {\n    colorMapping.length = states\n    for (let i = 0; i < states; i += 1) {\n      colorMapping[i] = mapNumToRGB(i / states)\n    }\n  }\n  return colorMapping[h] || DEFAULT_COLOR\n}\n","/* eslint-disable no-bitwise */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { getColor } from './utils'\n\nexport default class CanvasField extends React.PureComponent {\n  static propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    states: PropTypes.number.isRequired,\n  }\n\n  drawPixel = (x, y, h, states) => {\n    const index = x + (y * this.props.width)\n    const { r, g, b } = getColor(h, states)\n\n    this.uInt32Array[index] = (255 << 24) | (b << 16) | (g << 8) | r\n  }\n\n  paint = (field) => {\n    const { width, height, states } = this.props\n\n    this.uInt32Array = new Uint32Array(width * height)\n\n    for (let x = 0; x < width; x += 1) {\n      for (let y = 0; y < height; y += 1) {\n        if (field[x]) {\n          this.drawPixel(x, y, field[x][y], states)\n        }\n      }\n    }\n\n    const canvasData = new ImageData(new Uint8ClampedArray(this.uInt32Array.buffer), width, height)\n    this.canvasContext.putImageData(canvasData, 0, 0)\n  }\n\n  refCanvas = (elem) => {\n    // on unmount\n    if (!elem) {\n      return\n    }\n    this.canvasContext = elem.getContext('2d')\n  }\n\n  canvasContext\n\n  uInt32Array\n\n  render () {\n    return (\n      <canvas\n        ref={this.refCanvas}\n        width={this.props.width}\n        height={this.props.height}\n      >\n        {'You are using an outdated browser without support of canvas elements.'}\n      </canvas>\n    )\n  }\n}\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Connector, Input } from 'state-control'\nimport { DEFAULT, IDS, SPACE_CODE, STATUSES } from '../constants'\nimport style from '../common/GriffeathMachine.css'\nimport { getRandomField, getUpdatedField } from './utils'\nimport CanvasField from './CanvasField'\n\nexport default class GriffeathMachine extends PureComponent {\n  static propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    states: PropTypes.number.isRequired,\n  }\n\n  static defaultProps = { ...DEFAULT }\n\n  state = {\n    width: this.props.width,\n    height: this.props.height,\n    states: this.props.states,\n    status: STATUSES.pause,\n  }\n\n  field = null\n\n  canvas = React.createRef()\n\n  componentWillMount () {\n    this.randomizeField()\n    this.handlePlay()\n    document.addEventListener('keydown', this.processKey)\n  }\n\n  componentWillUnmount () {\n    cancelAnimationFrame(this.requestID)\n  }\n\n  getActionName = () => (this.state.status === STATUSES.play ? STATUSES.pause : STATUSES.play)\n\n  randomizeField = () => {\n    this.field = getRandomField(this.state)\n  }\n\n  processKey = (e) => {\n    if (e.keyCode === SPACE_CODE) {\n      e.preventDefault()\n      this.handlePlay()\n    }\n  }\n\n  nextStep = () => {\n    try {\n      this.field = getUpdatedField({ ...this.state, field: this.field })\n\n      if (this.state.status === STATUSES.play) {\n        this.requestID = requestAnimationFrame(this.nextStep)\n      }\n    } catch (e) {\n      cancelAnimationFrame(this.requestID)\n      this.field = getRandomField(this.state)\n      this.setState({\n        status: STATUSES.pause,\n      })\n    }\n    this.canvas.current.paint(this.field)\n  }\n\n  handleNew = () => {\n    this.randomizeField()\n    this.canvas.current.paint(this.field)\n  }\n\n  handleNext = () => {\n    this.field = getUpdatedField({ ...this.state, field: this.field })\n    this.canvas.current.paint(this.field)\n  }\n\n  handlePlay = () => {\n    switch (this.state.status) {\n      case STATUSES.play:\n        this.setState({ status: STATUSES.pause })\n        break\n      case STATUSES.pause:\n        this.setState({ status: STATUSES.play }, this.nextStep)\n        break\n      default:\n    }\n  }\n\n  changeHandler = (name, value) => {\n    this.setState({ [name]: value })\n  }\n\n  render () {\n    return (\n      <div>\n        <Connector\n          state={this.state}\n          onChange={this.changeHandler}\n        >\n          <Input\n            id={IDS.width}\n            label=\"Field width\"\n            defaultNum={1}\n          />\n          <Input\n            id={IDS.height}\n            label=\"Field height\"\n            defaultNum={1}\n          />\n          <Input\n            id={IDS.states}\n            label=\"Number of states\"\n            defaultNum={1}\n          />\n        </Connector>\n        <div\n          onClick={this.handlePlay}\n          onKeyDown={this.processKey}\n          className={style.field}\n          role=\"presentation\"\n          title={this.getActionName()}\n        >\n          <CanvasField\n            width={this.state.width}\n            height={this.state.height}\n            states={this.state.states}\n            ref={this.canvas}\n          />\n        </div>\n        <p><em>Press Space or click field for play / pause</em></p>\n        <button type=\"button\" className={style.bigButton} onClick={this.handleNew}>\n          New\n        </button>\n        <button type=\"button\" className={style.bigButton} onClick={this.handlePlay}>\n          {this.getActionName()}\n        </button>\n        {this.state.status === STATUSES.pause && (\n          <button type=\"button\" className={style.bigButton} onClick={this.handleNext}>\n            Next step\n          </button>\n        )}\n      </div>\n    )\n  }\n}\n"],"sourceRoot":""}