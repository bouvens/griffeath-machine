{"version":3,"sources":["../node_modules/gpu.js/dist/core/utils-core.js","../node_modules/gpu.js/dist/core/input.js","../node_modules/gpu.js/dist/core/texture.js","../node_modules/gpu.js/dist/core/utils.js","../node_modules/gpu.js/dist/backend/kernel-run-shortcut.js","../node_modules/gpu.js/dist/backend/runner-base.js","../node_modules/gpu.js/dist/backend/kernel-base.js","../node_modules/gpu.js/dist/backend/web-gl/shader-frag.js","../node_modules/gpu.js/dist/backend/web-gl/shader-vert.js","../node_modules/gpu.js/dist/backend/web-gl/kernel-string.js","../node_modules/gpu.js/dist/backend/web-gl/kernel.js","../node_modules/gpu.js/dist/backend/function-builder-base.js","../node_modules/acorn/dist/acorn.es.js","../node_modules/gpu.js/dist/backend/function-node-base.js","../node_modules/gpu.js/dist/backend/web-gl/function-node.js","../node_modules/gpu.js/dist/backend/web-gl/function-builder.js","../node_modules/gpu.js/dist/backend/web-gl/runner.js","../node_modules/gpu.js/dist/backend/web-gl2/function-node.js","../node_modules/gpu.js/dist/backend/web-gl2/function-builder.js","../node_modules/gpu.js/dist/backend/web-gl2/shader-frag.js","../node_modules/gpu.js/dist/backend/web-gl2/shader-vert.js","../node_modules/gpu.js/dist/backend/web-gl2/kernel.js","../node_modules/gpu.js/dist/backend/web-gl2/runner.js","../node_modules/gpu.js/dist/backend/cpu/kernel-string.js","../node_modules/gpu.js/dist/backend/cpu/kernel.js","../node_modules/gpu.js/dist/backend/cpu/function-node.js","../node_modules/gpu.js/dist/backend/cpu/function-builder.js","../node_modules/gpu.js/dist/backend/cpu/runner.js","../node_modules/gpu.js/dist/backend/web-gl/validator-kernel.js","../node_modules/gpu.js/dist/backend/web-gl2/validator-kernel.js","../node_modules/gpu.js/dist/core/gpu-core.js","../node_modules/gpu.js/dist/core/gpu.js","../node_modules/gpu.js/dist/core/alias.js","../node_modules/gpu.js/dist/index.js","components/gpu/gpu-utils.js","components/gpu/GriffeathMachine.jsx"],"names":["reservedWords","strict","strictBind","ecma5AndLessKeywords","keywords","keywordRelationalOperator","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","code","set","pos","i","length","isIdentifierStart","astral","test","String","fromCharCode","isIdentifierChar","TokenType","label","conf","keyword","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","binop","updateContext","name","prec","keywords$1","kw","options","types","num","regexp","string","eof","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","dot","question","arrow","template","invalidTemplate","ellipsis","backQuote","dollarBraceL","eq","assign","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","starstar","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","source","isNewLine","ecma2019String","nonASCIIwhitespace","skipWhiteSpace","ref","Object","prototype","hasOwnProperty","toString","has","obj","propName","call","isArray","Array","Position","line","col","column","offset","n","SourceLocation","p","start","end","sourceFile","getLineInfo","input","cur","lastIndex","match","exec","index","defaultOptions","ecmaVersion","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","allowImportExportEverywhere","allowAwaitOutsideFunction","allowHashBang","locations","onToken","onComment","ranges","program","directSourceFile","preserveParens","plugins","getOptions","opts","opt","tokens","token","push","pushComment","array","block","text","startLoc","endLoc","comment","type","value","loc","range","keywordRegexp","words","replace","Parser","startPos","reserved","v","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","loadPlugins","lineStart","lastIndexOf","curLine","slice","split","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","context","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","inFunction","inGenerator","inAsync","yieldPos","awaitPos","labels","skipLineComment","scopeStack","enterFunctionScope","regexpState","isKeyword","word","isReservedWord","extend","f","pluginConfigs","plugin","Error","parse","node","startNode","nextToken","parseTopLevel","pp","literal","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","eat","next","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","insertSemicolon","semicolon","afterTrailingComma","tokType","notNext","expect","raise","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","expression","pp$1","this$1","exports","body","stmt","parseStatement","adaptDirectivePrologue","finishNode","loopLabel","kind","switchLabel","isLet","skip","nextCh","charCodeAt","ident","isAsyncFunction","charAt","declaration","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseImport","parseExport","maybeName","parseExpression","parseLabeledStatement","parseExpressionStatement","isBreak","parseIdent","lab","pop","parseParenExpression","awaitAt","enterLexicalScope","parseFor","init$1","parseVar","declarations","init","await","parseForIn","toAssignable","checkLVal","isAsync","parseFunction","consequent","alternate","argument","discriminant","cases","sawDefault","isCase","exitLexicalScope","empty","handler","clause","param","parseBindingAtom","finalizer","object","i$1","list","label$1","statementStart","generator","async","createNewLexicalScope","update","id","left","right","parseMaybeAssign","isFor","decl","parseVarId","isStatement","allowExpressionBody","initFunction","oldInGen","oldInAsync","oldYieldPos","oldAwaitPos","oldInFunc","parseFunctionParams","parseFunctionBody","params","parseBindingList","parseClassId","parseClassSuper","classBody","hadConstructor","member","parseClassMember","method","tryContextual","k","noLineBreak","key","computed","startNodeAt","static","isGenerator","parsePropertyName","parseClassMethod","parseMethod","superClass","parseExprSubscripts","parseExprAtom","checkExport","fNode","cNode","shouldParseExportStatement","checkVariableExport","specifiers","parseExportSpecifiers","spec","checkUnreserved","local","checkPatternExport","pat","properties","prop","list$1","elements","elt","decls","nodes","first","exported","parseImportSpecifiers","node$1","node$2","imported","statements","isDirectiveCandidate","directive","raw","statement","pp$2","isBinding","toAssignableList","operator","exprList","last","parseSpread","parseRestBinding","parseObj","close","allowEmpty","allowTrailingComma","elts","rest","parseBindingListItem","elem","parseMaybeDefault","bindingType","checkClashes","canDeclareVarName","canDeclareLexicalName","declareVarName","declareLexicalName","pp$3","checkPropClash","propHash","shorthand","proto","other","get","noIn","expressions","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","op","buildBinary","sawUnary","parseAwait","skipArrowSubscripts","result","parseSubscripts","base","noCalls","maybeAsyncArrow","property","parseExprList","parseArrowExpression","callee","arguments","tag","quasi","parseTemplate","isTagged","canBeArrow","parseLiteral","regex","pattern","flags","parseParenAndDistinguishExpression","parseNew","val","innerStartPos","spreadStart","innerStartLoc","lastIsComma","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","par","item","empty$1","meta","parseTemplateElement","cooked","tail","curElt","quasis","isAsyncProp","isPattern","parseProperty","parsePropertyValue","paramCount","isArrowFunction","isExpression","oldStrict","useStrict","checkParams","nonSimple","isSimpleParamList","oldLabels","exitFunctionScope","allowDuplicates","nameHash","indexOf","liberal","delegate","pp$4","message","err","SyntaxError","raisedAt","pp$5","target","len","sources","var","lexical","childVar","parentLexical","parentScope","childScope","currentScope","Node","parser","pp$6","TokContext","isExpr","preserveSpace","override","types$1","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","pp$7","braceIsBlock","prevType","parent","curContext","inGeneratorContext","out","statementParens","allowed","data","apply","$LONE","General_Category","gc","sc","Script_Extensions","scx","Script","pp$9","RegExpValidationState","validFlags","switchU","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","codePointToString$1","ch","isSyntaxCharacter","isRegExpIdentifierStart","isRegExpIdentifierPart","isControlLetter","isValidUnicode","isCharacterClassEscape","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","isDecimalDigit","isHexDigit","hexToInt","isOctalDigit","reset","unicode","at","s","l","c","nextIndex","current","lookahead","advance","validateRegExpFlags","state","flag","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","min","max","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","regexp_eatRegExpUnicodeEscapeSequence","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","regexp_classRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","regexp_eatClassControlLetter","regexp_eatOctalDigit","n1","n2","Token","pp$8","codePointToString","getToken","Symbol","iterator","done","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","loop","readToken_dot","readNumber","next2","readToken_slash","readRegexp","finishOp","readToken_mult_modulo_exp","size","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readRadixNumber","readString","str","escaped","inClass","flagsStart","readWord1","e","readInt","radix","total","Infinity","startsWithDot","octal","parseInt","parseFloat","readCodePoint","codePos","readHexChar","invalidStringToken","quote","chunkStart","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","position","inTemplate","octalStr","substr","escStart","esc","parse_dammit","LooseParser","pluginsLoose","version","parseExpressionAt","tokenizer","addLooseExports","Parser$$1","plugins$$1","myMod","number","limit","myKernel","field","width","height","states","ver","thread","x","hor","y","element","plusOne","gpu","GPU","makeGetUpdatedField","fieldWidth","fieldHeight","createKernel","setOutput","setFunctions","DEFAULT","GriffeathMachine","props","status","STATUSES","pause","canvas","React","createRef","getActionName","play","randomizeField","processKey","keyCode","SPACE_CODE","preventDefault","handlePlay","updateFieldSize","fieldUpdater","getUpdatedField","nextStep","requestID","requestAnimationFrame","cancelAnimationFrame","setState","paint","handleNew","handleNext","changeHandler","IDS","document","addEventListener","style","bigButton","PureComponent","propTypes","PropTypes","isRequired","defaultProps"],"mappings":";AAAA,aAcA,IAAA,EAAA,WAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,OAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAEA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAEA,IAAA,EAAA,WACA,SAAA,IACA,EAAA,KAAA,GAoTA,OAjTA,EAAA,EAAA,KAAA,CAAA,CACA,IAAA,WAiCA,MAAA,SAAA,GACA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,YAAA,WAAA,EAAA,SAAA,eAAA,oBAAA,iBAAA,aAAA,mBAeA,CACA,IAAA,oBACA,MAAA,WACA,OAAA,IAgBA,CACA,IAAA,aACA,MAAA,WAEA,IAAA,EACA,OAAA,KAIA,IAAA,EAAA,oBAAA,SAAA,SAAA,cAAA,UAAA,IAAA,gBAAA,EAAA,GAOA,OAJA,EAAA,MAAA,EACA,EAAA,OAAA,EAGA,IA2BA,CACA,IAAA,UACA,MAAA,SAAA,GACA,OAAA,GAAA,mBAAA,EAAA,eAoBA,CACA,IAAA,WACA,MAAA,SAAA,GACA,OAAA,GAAA,oBAAA,wBAAA,aAAA,yBAeA,CACA,IAAA,mBACA,MAAA,WACA,OAAA,IAeA,CACA,IAAA,oBACA,MAAA,WACA,OAAA,IAEA,CACA,IAAA,8BACA,MAAA,WACA,OAAA,IAKA,CACA,IAAA,0BACA,MAAA,WACA,MAAA,CACA,OAAA,EACA,OAAA,EACA,WAAA,KAmBA,CACA,IAAA,YACA,MAAA,SAAA,GAGA,SAAA,IAAA,GAAA,OAAA,KACA,EACA,OAAA,KAKA,IAAA,EAAA,SAAA,GACA,MAAA,IAAA,MAAA,2BAAA,GAIA,IAAA,EAAA,KACA,EAAA,EAAA,0BACA,IACA,EAAA,EAAA,WAAA,qBAAA,GACA,MAAA,IAiBA,OAZA,OAAA,IACA,EAAA,EAAA,WAAA,SAAA,IAAA,EAAA,WAAA,QAAA,IAGA,IAEA,EAAA,kBAAA,EAAA,aAAA,qBACA,EAAA,yBAAA,EAAA,aAAA,4BACA,EAAA,uBAAA,EAAA,aAAA,2BAIA,IAkBA,CACA,IAAA,aACA,MAAA,SAAA,GAGA,SAAA,IAAA,GAAA,OAAA,KACA,EACA,OAAA,KAKA,IAAA,EAAA,SAAA,GACA,MAAA,IAAA,MAAA,2BAAA,GAIA,OAAA,EAAA,WAAA,SAAA,EAAA,6BAWA,CACA,IAAA,cACA,MAAA,SAAA,GACA,IAAA,IAAA,MAAA,QAAA,GAAA,MAAA,IAAA,MAAA,8BACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,GAAA,MAAA,EAAA,KAAA,EAAA,GAAA,EACA,MAAA,IAAA,MAAA,iBAAA,EAAA,6BAAA,EAAA,GAAA,kDAMA,EAtTA,GA+TA,EAAA,oBAAA,SAAA,EAAA,SAAA,SAAA,cAAA,WAAA,oBAAA,gBACA,EAAA,EAAA,UAAA,EAAA,cACA,EAAA,EAAA,WAAA,EAAA,cACA,EAAA,EAAA,QAAA,GACA,EAAA,EAAA,SAAA,GACA,EAAA,GAAA,QAAA,EAAA,aAAA,uBAEA,GACA,EAAA,kBAAA,EAAA,kBACA,EAAA,yBAAA,EAAA,yBACA,EAAA,uBAAA,EAAA,yBAEA,EAAA,mBAAA,EACA,EAAA,0BAAA,EACA,EAAA,wBAAA,GAGA,OAAA,QAAA;;AClWA,aAEA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAEA,OAAA,QAAA,SAAA,EAAA,EAAA,GAIA,GAHA,EAAA,KAAA,GAEA,KAAA,MAAA,EACA,MAAA,QAAA,GAAA,CACA,KAAA,KAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,KAAA,KAAA,GAAA,EAAA,GAEA,KAAA,KAAA,KAAA,OAAA,GACA,KAAA,KAAA,KAAA,QAGA,EAAA,EACA,KAAA,KAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,EACA,KAAA,KAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GAEA,KAAA,KAAA,CAAA,EAAA,EAAA,EAAA;;ACtBA,aAEA,IAAA,EAAA,WAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,OAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAEA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAEA,OAAA,QAAA,WAYA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,gBAEA,EAAA,KAAA,GAEA,KAAA,QAAA,EACA,KAAA,KAAA,EACA,KAAA,WAAA,EACA,KAAA,OAAA,EACA,KAAA,MAAA,EACA,KAAA,OAAA,KACA,KAAA,KAAA,EA4CA,OA7BA,EAAA,EAAA,CAAA,CACA,IAAA,UACA,MAAA,SAAA,GACA,IAAA,EAAA,MAAA,IAAA,MAAA,wDACA,OAAA,KAAA,OAAA,KAAA,OAAA,OAEA,KAAA,OAAA,EAAA,aAAA,SAAA,GACA,OAAA,EAAA,KAAA,OAAA,GAAA,KAAA,OAAA,GAAA,KAAA,OAAA,KACA,UAAA,KAAA,QAEA,KAAA,OAAA,SAYA,CACA,IAAA,SACA,MAAA,WACA,OAAA,KAAA,MAAA,cAAA,KAAA,aAIA,EAnEA;;ACNA,aAcA,IAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,GAEA,EAAA,WAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,OAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAEA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAEA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,EAAA,EAEA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,kEAAA,GAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cAAA,KAAA,IAAA,OAAA,eAAA,OAAA,eAAA,EAAA,GAAA,EAAA,UAAA,GAEA,IAAA,EAAA,QAAA,gBACA,EAAA,QAAA,WACA,EAAA,QAAA,aAEA,EAAA,mBAGA,EAAA,mCAGA,EAAA,aAEA,EAAA,WACA,IAAA,EAAA,IAAA,YAAA,GACA,EAAA,IAAA,YAAA,GACA,EAAA,IAAA,WAAA,GAEA,GADA,EAAA,GAAA,WACA,MAAA,EAAA,GAAA,MAAA,KACA,GAAA,MAAA,EAAA,GAAA,MAAA,KACA,MAAA,IAAA,MAAA,sBAPA,GAUA,EAAA,KACA,EAAA,KAEA,EAAA,WACA,IAEA,OADA,IAAA,SAAA,0BAAA,IACA,EACA,MAAA,GACA,OAAA,GALA,GASA,EAAA,KAOA,EAAA,SAAA,GAGA,SAAA,IAGA,OAFA,EAAA,KAAA,GAEA,EAAA,MAAA,EAAA,WAAA,OAAA,eAAA,IAAA,MAAA,KAAA,YAonBA,OAznBA,EAAA,EA0nBA,GAlnBA,EAAA,EAAA,KAAA,CAAA,CACA,IAAA,mBAqBA,MAAA,WACA,OAAA,IAuBA,CACA,IAAA,aACA,MAAA,SAAA,GACA,MAAA,mBAAA,IAmBA,CACA,IAAA,mBACA,MAAA,SAAA,GACA,OAAA,OAAA,GACA,aAAA,EAAA,WAAA,MAAA,EAAA,WAAA,QAAA,gBAmBA,CACA,IAAA,4BACA,MAAA,SAAA,GACA,OAAA,EAAA,KAAA,GAAA,KAEA,CACA,IAAA,4BACA,MAAA,SAAA,GACA,OAAA,EAAA,UAAA,EAAA,QAAA,KAAA,EAAA,EAAA,YAAA,QAiBA,CACA,IAAA,0BACA,MAAA,SAAA,GACA,IAAA,EAAA,EAAA,WAAA,QAAA,EAAA,IACA,EAAA,EAAA,MAAA,EAAA,QAAA,KAAA,EAAA,EAAA,QAAA,MAAA,MAAA,GAEA,OADA,OAAA,IAAA,EAAA,IACA,IAuBA,CACA,IAAA,QACA,MAAA,SAAA,GACA,GAAA,OAAA,GAAA,iBAAA,IAAA,EAAA,YAAA,EAAA,KAAA,EAAA,eAAA,iBAAA,OAAA,EAEA,IAAA,EAAA,EAAA,cAEA,IAAA,IAAA,KAAA,EACA,OAAA,UAAA,eAAA,KAAA,EAAA,KACA,EAAA,cAAA,KACA,EAAA,GAAA,EAAA,MAAA,EAAA,WACA,EAAA,eAIA,OAAA,IAiBA,CACA,IAAA,aACA,MAAA,SAAA,GACA,IAAA,EAAA,SAAA,cACA,GAAA,OAAA,EACA,MAAA,UAAA,wFAEA,OAAA,IAAA,EAAA,KAkBA,CACA,IAAA,iBACA,MAAA,SAAA,EAAA,GACA,OAAA,EAAA,KACA,EAAA,KAAA,GAGA,WACA,IAAA,EAAA,IAAA,UAAA,OAAA,CAAA,UAAA,IAAA,MAAA,MAAA,KAAA,WACA,OAAA,EAAA,MAAA,EAAA,MAkBA,CACA,IAAA,UACA,MAAA,SAAA,GACA,OAAA,MAAA,EAAA,UAqBA,CACA,IAAA,kBACA,MAAA,SAAA,GACA,OAAA,EAAA,QAAA,GACA,QAAA,EAAA,GAAA,SACA,iBAEA,QACA,iBAAA,EACA,OAAA,UAAA,GACA,UAEA,QACA,aAAA,EACA,EAAA,KACA,aAAA,EACA,QACA,QAAA,EAAA,SACA,YAEA,YAmBA,CACA,IAAA,6BACA,MAAA,WACA,GAAA,OAAA,EACA,OAAA,EAGA,IACA,EAAA,IADA,QAAA,YACA,CAAA,CACA,KAAA,oBAEA,EAAA,EAAA,aAAA,WACA,OAAA,GACA,CACA,OAAA,CAAA,GACA,eAAA,EACA,aAAA,EACA,kBAAA,GANA,GAWA,OAFA,EAAA,IAAA,EAAA,GACA,EAAA,UACA,IAeA,CACA,IAAA,mCACA,MAAA,WACA,GAAA,OAAA,EACA,OAAA,EAGA,IACA,EAAA,IADA,QAAA,YACA,CAAA,CACA,KAAA,qBAEA,EAAA,EAAA,aAAA,WACA,OAAA,GACA,CACA,OAAA,CAAA,GACA,eAAA,EACA,aAAA,EACA,kBAAA,GANA,GAWA,OAFA,EAAA,IAAA,EAAA,GACA,EAAA,UACA,IAeA,CACA,IAAA,gCACA,MAAA,WACA,GAAA,OAAA,EACA,OAAA,EAGA,IACA,EAAA,IADA,QAAA,YACA,CAAA,CACA,KAAA,oBAEA,EAAA,EAAA,aAAA,SAAA,EAAA,GACA,OAAA,EAAA,KAAA,OAAA,GAAA,EAAA,KAAA,OAAA,IACA,CACA,OAAA,CAAA,IAHA,CAIA,CAAA,EAAA,SAAA,CAAA,EAAA,OAMA,OAFA,EAAA,IAAA,EAAA,IAAA,OAAA,EAAA,GACA,EAAA,UACA,IAEA,CACA,IAAA,8BACA,MAAA,WACA,OAAA,IAEA,CACA,IAAA,eACA,MAAA,SAAA,EAAA,EAAA,GAIA,IAHA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,GAAA,EAAA,GAOA,IAJA,EAAA,eAAA,IAAA,EAAA,cACA,EAAA,EAAA,KAAA,KAAA,EAAA,IAGA,EAAA,GAAA,EAAA,IAAA,EACA,MAAA,CAAA,EAAA,GAMA,IAHA,IAAA,EAAA,KAAA,KAAA,GACA,EAAA,KAAA,KAAA,GACA,EAAA,KAAA,MAAA,GACA,EAAA,EAAA,GACA,IACA,EAAA,KAAA,KAAA,EAAA,GAIA,MAAA,CAFA,EAAA,EACA,EAAA,KAAA,KAAA,EAAA,MAmBA,CACA,IAAA,gBACA,MAAA,SAAA,EAAA,GACA,IAAA,OAAA,EACA,GAAA,EAAA,QAAA,GAAA,CAGA,IAFA,IAAA,EAAA,GACA,EAAA,EACA,EAAA,QAAA,IACA,EAAA,KAAA,EAAA,QACA,EAAA,EAAA,GAEA,EAAA,EAAA,eACA,GAAA,aAAA,EACA,EAAA,EAAA,WACA,CAAA,KAAA,aAAA,GAGA,KAAA,yBAAA,EAFA,EAAA,EAAA,KAKA,GAAA,EAEA,IADA,EAAA,EAAA,MAAA,GACA,EAAA,OAAA,GACA,EAAA,KAAA,GAIA,OAAA,IAAA,WAAA,KAkBA,CACA,IAAA,MACA,MAAA,SAAA,EAAA,GACA,SAAA,EAAA,GACA,OAAA,MAAA,MAAA,KAAA,IAAA,MAAA,IAAA,IAAA,OAAA,UAAA,QAAA,GASA,IANA,IAAA,EAAA,EAAA,OAAA,EAAA,EAEA,EAAA,EAAA,IAAA,SAAA,GACA,MAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,MAGA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,GAAA,OAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,KAGA,OAAA,IAcA,CACA,IAAA,mBACA,MAAA,SAAA,EAAA,GAEA,IADA,IAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,EAAA,IAAA,EAAA,GAAA,GACA,GAAA,EAAA,GAAA,SAeA,CACA,IAAA,mBACA,MAAA,SAAA,EAAA,GAEA,IADA,IAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IACA,EAAA,IAAA,EAAA,GAAA,GAAA,GACA,GAAA,EAAA,GAAA,GAAA,SAgBA,CACA,IAAA,YACA,MAAA,SAAA,EAAA,GACA,EAAA,QAAA,EAAA,IACA,EAAA,QAAA,EAAA,GAAA,IACA,EAAA,iBAAA,EAAA,GAEA,EAAA,iBAAA,EAAA,GAGA,EAAA,IAAA,KAoBA,CACA,IAAA,aACA,MAAA,SAAA,EAAA,GAEA,IADA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EACA,EAAA,KAAA,IAAA,EAAA,YAAA,EAAA,OAAA,EAAA,EAAA,EAAA,WAAA,IAEA,OAAA,IAEA,CACA,IAAA,eACA,MAAA,SAAA,EAAA,GACA,IAAA,EAAA,MAAA,QAAA,GAAA,EAAA,EAAA,MAAA,UACA,EAAA,EAAA,IAAA,MACA,EAAA,EAAA,IAAA,IACA,EAAA,GACA,EAAA,KAAA,EAAA,EAAA,KAAA,GAAA,MAAA,EAAA,SACA,IAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,IACA,EAAA,KAAA,EAAA,IAGA,OADA,EAAA,KAAA,EAAA,EAAA,KAAA,GAAA,MAAA,EAAA,EAAA,SACA,EAAA,KAAA,QAEA,CACA,IAAA,kBACA,MAAA,SAAA,GACA,IAAA,EAAA,GAEA,GACA,EAAA,KAAA,MAAA,EAAA,OAAA,oBAAA,UACA,EAAA,OAAA,eAAA,IAEA,OAAA,MAIA,EA1nBA,GAioBA,OAAA,OAAA,EAAA,GAEA,OAAA,QAAA;;ACpsBA,aAEA,IAAA,EAAA,QAAA,iBAEA,OAAA,QAAA,SAAA,GACA,IAAA,EAAA,WACA,OAAA,EAAA,IAAA,MAAA,EAAA,YA0BA,OAvBA,EAAA,gBAAA,GAAA,QAAA,SAAA,GACA,MAAA,EAAA,IAAA,MAAA,EAAA,KACA,mBAAA,EAAA,GAEA,EAAA,GADA,QAAA,EAAA,UAAA,EAAA,IAAA,QAAA,EAAA,UAAA,EAAA,GACA,WAEA,OADA,EAAA,GAAA,MAAA,EAAA,WACA,GAGA,EAAA,GAAA,KAAA,IAGA,EAAA,iBAAA,EAAA,WACA,OAAA,EAAA,KAEA,EAAA,iBAAA,EAAA,SAAA,GACA,EAAA,GAAA,QAKA,EAAA,OAAA,EAEA;;AChCA,aAEA,IAAA,EAAA,WAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,OAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAEA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAEA,IAAA,EAAA,QAAA,iBACA,EAAA,QAAA,yBAEA,OAAA,QAAA,WAyBA,SAAA,EAAA,EAAA,GACA,EAAA,KAAA,GAEA,EAAA,GAAA,GACA,KAAA,OAAA,EAAA,OACA,KAAA,OAAA,EAAA,OACA,KAAA,MAAA,EAAA,MACA,KAAA,GAAA,KACA,KAAA,gBAAA,EACA,KAAA,SAAA,KACA,KAAA,WAAA,EAAA,mBAiGA,OAlFA,EAAA,EAAA,CAAA,CACA,IAAA,iBACA,MAAA,SAAA,GAKA,OAJA,KAAA,aAAA,SAAA,GACA,OAAA,EAAA,KAAA,OAAA,GAAA,KAAA,OAAA,GAAA,KAAA,OAAA,IAGA,CAAA,KAcA,CACA,IAAA,gBACA,MAAA,SAAA,GACA,KAAA,MAAA,cAAA,EAAA,WAeA,CACA,IAAA,qBACA,MAAA,WACA,MAAA,IAAA,MAAA,yBAEA,CACA,IAAA,UACA,MAAA,WACA,MAAA,IAAA,MAAA,0CAcA,CACA,IAAA,cACA,MAAA,SAAA,EAAA,GACA,EAAA,OAAA,OAAA,GAAA,GAAA,IACA,IAAA,EAAA,EAAA,WAaA,OAZA,EAAA,kBACA,EAAA,gBAAA,KAAA,iBAGA,EAAA,SACA,EAAA,OAAA,KAAA,QAGA,EAAA,QACA,EAAA,MAAA,KAAA,OAGA,EAAA,IAAA,KAAA,OAAA,EAAA,QAIA,EApIA;;ACTA,aAEA,IAAA,EAAA,WAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,OAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAEA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAEA,IAAA,EAAA,QAAA,iBACA,EAAA,QAAA,iBAEA,OAAA,QAAA,WAwBA,SAAA,EAAA,EAAA,GAkCA,IAAA,IAAA,KAjCA,EAAA,KAAA,GAEA,KAAA,WAAA,EAAA,wBAAA,GACA,KAAA,SAAA,EACA,KAAA,OAAA,KACA,KAAA,OAAA,EACA,KAAA,WAAA,EACA,KAAA,kBAAA,EACA,KAAA,UAAA,KACA,KAAA,WAAA,KACA,KAAA,kBAAA,KACA,KAAA,gBAAA,KACA,KAAA,gBAAA,KACA,KAAA,QAAA,KACA,KAAA,QAAA,KACA,KAAA,OAAA,KACA,KAAA,UAAA,KACA,KAAA,cAAA,KACA,KAAA,YAAA,KACA,KAAA,iBAAA,KACA,KAAA,YAAA,KACA,KAAA,UAAA,KACA,KAAA,gBAAA,KACA,KAAA,WAAA,KACA,KAAA,oBAAA,KACA,KAAA,eAAA,KACA,KAAA,6BAAA,KACA,KAAA,gBAAA,KACA,KAAA,WAAA,KACA,KAAA,WAAA,KACA,KAAA,cAAA,KACA,KAAA,2BAAA,KAEA,EACA,EAAA,eAAA,IAAA,KAAA,eAAA,KACA,KAAA,GAAA,EAAA,IAEA,EAAA,eAAA,YACA,KAAA,QAAA,EAAA,QAEA,EAAA,eAAA,WACA,KAAA,OAAA,EAAA,OAEA,EAAA,eAAA,WACA,KAAA,UAAA,EAAA,QAGA,KAAA,UAAA,KAAA,QAAA,EAAA,cAuZA,OApZA,EAAA,EAAA,CAAA,CACA,IAAA,QACA,MAAA,WACA,MAAA,IAAA,MAAA,iCAeA,CACA,IAAA,cACA,MAAA,SAAA,GACA,KAAA,WAAA,GACA,KAAA,WAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CACA,IAAA,EAAA,EAAA,GAEA,KAAA,WAAA,KAAA,EAAA,gBAAA,IACA,KAAA,WAAA,KAAA,EAAA,cAAA,EAAA,EAAA,KAAA,SAGA,CACA,IAAA,iBACA,MAAA,WAEA,GADA,KAAA,cAAA,GACA,KAAA,UACA,IAAA,IAAA,KAAA,KAAA,UACA,KAAA,cAAA,GAAA,EAAA,gBAAA,KAAA,UAAA,MAIA,CACA,IAAA,eACA,MAAA,SAAA,GAEA,OADA,KAAA,UAAA,EACA,OAcA,CACA,IAAA,YACA,MAAA,SAAA,GAcA,OAbA,EAAA,eAAA,KACA,EAAA,eAAA,KACA,EAAA,eAAA,KACA,KAAA,OAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAEA,KAAA,OAAA,CAAA,EAAA,EAAA,EAAA,GAGA,KAAA,OAAA,CAAA,EAAA,GAGA,KAAA,OAAA,EAEA,OAcA,CACA,IAAA,WACA,MAAA,SAAA,GAEA,OADA,KAAA,MAAA,EACA,OAcA,CACA,IAAA,eACA,MAAA,SAAA,GAEA,OADA,KAAA,UAAA,EACA,OAcA,CACA,IAAA,uBACA,MAAA,SAAA,GAEA,OADA,KAAA,kBAAA,EACA,OAcA,CACA,IAAA,gCACA,MAAA,SAAA,GAEA,OADA,KAAA,2BAAA,EACA,OAUA,CACA,IAAA,eACA,MAAA,SAAA,GAEA,OADA,KAAA,UAAA,EACA,OAEA,CACA,IAAA,gBACA,MAAA,SAAA,GAGA,OAFA,QAAA,KAAA,sDACA,KAAA,WAAA,EACA,OAEA,CACA,IAAA,uBACA,MAAA,SAAA,GAEA,OADA,KAAA,kBAAA,EACA,OAEA,CACA,IAAA,qBACA,MAAA,SAAA,GAEA,OADA,KAAA,gBAAA,EACA,OAEA,CACA,IAAA,qBACA,MAAA,SAAA,GAEA,OADA,KAAA,gBAAA,EACA,OAcA,CACA,IAAA,mBACA,MAAA,SAAA,GAEA,OADA,KAAA,cAAA,EACA,OAcA,CACA,IAAA,iBACA,MAAA,SAAA,GAEA,OADA,KAAA,YAAA,EACA,OAEA,CACA,IAAA,sBACA,MAAA,SAAA,GAEA,OADA,KAAA,iBAAA,EACA,OAcA,CACA,IAAA,YACA,MAAA,SAAA,GAEA,OADA,KAAA,QAAA,EACA,OAcA,CACA,IAAA,WACA,MAAA,SAAA,GAEA,OADA,KAAA,OAAA,EACA,OAYA,CACA,IAAA,YACA,MAAA,WACA,OAAA,KAAA,UAYA,CACA,IAAA,WACA,MAAA,WACA,OAAA,KAAA,SAEA,CACA,IAAA,kBACA,MAAA,WACA,MAAA,IAAA,MAAA,iCAEA,CACA,IAAA,OACA,MAAA,WACA,OAAA,KAAA,QAAA,MAAA,KAAA,aAEA,CACA,IAAA,UACA,MAAA,WACA,IAAA,EAAA,KAKA,EAAA,IAAA,UAAA,OAAA,CAAA,UAAA,IAAA,MAAA,MAAA,KAAA,WAKA,OAAA,EAAA,WAAA,SAAA,EAAA,GACA,IACA,EAAA,EAAA,IAAA,MAAA,EAAA,IACA,MAAA,GAIA,EAAA,QAiBA,CACA,IAAA,eACA,MAAA,SAAA,GAOA,OANA,OAAA,KAAA,aACA,KAAA,WAAA,GACA,KAAA,eAAA,IAEA,KAAA,WAAA,KAAA,GACA,KAAA,eAAA,KAAA,EAAA,0BAAA,IACA,OAgBA,CACA,IAAA,uBACA,MAAA,SAAA,EAAA,GAKA,GAJA,OAAA,KAAA,sBACA,KAAA,oBAAA,GACA,KAAA,eAAA,IAEA,KAAA,oBAAA,eAAA,GACA,MAAA,IAAA,MAAA,yBAAA,EAAA,qBAIA,OAFA,KAAA,oBAAA,GAAA,EACA,KAAA,eAAA,KAAA,EAAA,0BAAA,IACA,OAEA,CACA,IAAA,oBACA,MAAA,SAAA,EAAA,GACA,KAAA,gBAAA,kBAAA,EAAA,KAeA,CACA,IAAA,UACA,MAAA,gBAGA,EA/dA;;ACTA,aAEA,OAAA,QAAA;;ACFA,aAEA,OAAA,QAAA;;ACFA,aAEA,IAAA,EAAA,QAAA,oBACA,EAAA,QAAA,0BACA,EAAA,QAAA,oBACA,EAAA,QAAA,sBAEA,SAAA,EAAA,GAIA,MAHA,aAAA,KAAA,KACA,EAAA,EAAA,UAAA,IAEA,EAAA,QAAA,aAAA,UAGA,SAAA,EAAA,GACA,OAAA,EAAA,QAAA,aAAA,UAGA,OAAA,QAAA,SAAA,EAAA,GACA,MAAA,gBAAA,EAAA,WAAA,kDAAA,EAAA,EAAA,gBAAA,YAAA,mBAAA,EAAA,EAAA,MAAA,YAAA,wBAAA,EAAA,EAAA,WAAA,YAAA,6BAAA,EAAA,EAAA,gBAAA,YAAA,2BAAA,EAAA,EAAA,cAAA,YAAA,0BAAA,EAAA,EAAA,aAAA,YAAA,uBAAA,EAAA,EAAA,UAAA,YAAA,8BAAA,EAAA,EAAA,iBAAA,YAAA,8BAAA,EAAA,EAAA,iBAAA,YAAA,+BAAA,EAAA,EAAA,oBAAA,wBAAA,EAAA,EAAA,UAAA,YAAA,qBAAA,EAAA,EAAA,QAAA,YAAA,yBAAA,EAAA,EAAA,YAAA,YAAA,4KAAA,GAAA,UAAA,8PAAA,EAAA,gBAAA,OAAA,SAAA,gCAAA,KAAA,UAAA,EAAA,YAAA,gCAAA,KAAA,UAAA,EAAA,YAAA,6BAAA,KAAA,UAAA,EAAA,SAAA,4BAAA,KAAA,UAAA,EAAA,QAAA,+CAAA,EAAA,yBAAA,gDAAA,EAAA,yBAAA,k3BAAA,EAAA,EAAA,mBAAA,YAAA,WAAA,EAAA,EAAA,MAAA,YAAA,WAAA,EAAA,EAAA,IAAA,YAAA,WAAA,EAAA,EAAA,aAAA,YAAA,WAAA,EAAA,EAAA,qBAAA,YAAA,WAAA,EAAA,EAAA,mBAAA,YAAA,WAAA,EAAA,EAAA,gBAAA,YAAA,WAAA,EAAA,EAAA,iBAAA,YAAA,WAAA,EAAA,EAAA,aAAA,YAAA,WAAA,EAAA,EAAA,iBAAA,YAAA,WAAA,EAAA,EAAA,oBAAA,YAAA,WAAA,EAAA,EAAA,mBAAA,YAAA,WAAA,EAAA,EAAA,aAAA,YAAA,WAAA,EAAA,EAAA,aAAA,YAAA,WAAA,EAAA,EAAA,aAAA,YAAA,WAAA,EAAA,EAAA,cAAA,YAAA,WAAA,EAAA,EAAA,cAAA,YAAA,WAAA,EAAA,EAAA,cAAA,YAAA,WAAA,EAAA,EAAA,cAAA,YAAA;;ACnBA,aAEA,IAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,SAAA,WAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,QAAA,IAAA,EAAA,CAAA,IAAA,EAAA,OAAA,eAAA,GAAA,OAAA,OAAA,OAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,UAAA,EAAA,OAAA,EAAA,MAAA,IAAA,EAAA,EAAA,IAAA,YAAA,IAAA,EAAA,EAAA,KAAA,QAAA,GAEA,EAAA,WAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,OAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAEA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAEA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,EAAA,EAEA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,kEAAA,GAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cAAA,KAAA,IAAA,OAAA,eAAA,OAAA,eAAA,EAAA,GAAA,EAAA,UAAA,GAEA,IAAA,EAAA,QAAA,kBACA,EAAA,QAAA,oBACA,EAAA,QAAA,sBACA,EAAA,QAAA,iBACA,EAAA,QAAA,iBACA,EAAA,QAAA,mBACA,EAAA,GACA,EAAA,GAEA,OAAA,QAAA,SAAA,GAuCA,SAAA,EAAA,EAAA,GACA,EAAA,KAAA,GAEA,IAAA,EAAA,EAAA,MAAA,EAAA,WAAA,OAAA,eAAA,IAAA,KAAA,KAAA,EAAA,IA8BA,OA5BA,EAAA,aAAA,GACA,EAAA,UAAA,GACA,EAAA,4BAAA,GACA,EAAA,YAAA,KAEA,EAAA,OAAA,KACA,EAAA,QAAA,KACA,EAAA,gBAAA,EAAA,gBACA,EAAA,WAAA,EAAA,mBACA,EAAA,wBAAA,KACA,EAAA,6BAAA,KACA,EAAA,gBAAA,EACA,EAAA,gBAAA,EACA,EAAA,yBAAA,KACA,EAAA,yBAAA,KACA,EAAA,WAAA,KACA,EAAA,WAAA,KACA,EAAA,eAAA,KACA,EAAA,cAAA,KACA,EAAA,WAAA,KACA,EAAA,eAAA,GACA,EAAA,eAAA,GACA,EAAA,eAAA,GACA,EAAA,gBAAA,GACA,EAAA,gBAAA,GACA,EAAA,gBAAA,GACA,EAAA,gBAAA,GACA,EAAA,SAAA,EAAA,OAAA,EAAA,aACA,EAsjDA,OA7nDA,EAAA,EA8nDA,GA5nDA,EAAA,EAAA,KAAA,CAAA,CACA,IAAA,mBACA,IAAA,WACA,OAAA,IAEA,CACA,IAAA,mBACA,IAAA,WACA,OAAA,MAgEA,EAAA,EAAA,CAAA,CACA,IAAA,YACA,MAAA,WACA,OAAA,EAAA,UAAA,KAAA,eAcA,CACA,IAAA,kBACA,MAAA,WACA,IAAA,EAAA,EAAA,6BACA,IAAA,IAAA,KAAA,gBAAA,EAAA,kBACA,MAAA,IAAA,MAAA,oDACA,IAAA,IAAA,KAAA,cAAA,IAAA,KAAA,mBAAA,EACA,MAAA,IAAA,MAAA,gEACA,IAAA,KAAA,eAAA,EAAA,oBACA,KAAA,eAAA,EACA,KAAA,YAAA,GAGA,IAAA,EAAA,EAAA,gCASA,GARA,OAAA,KAAA,2BACA,KAAA,2BAAA,EACA,KAAA,6BAAA,IACA,KAAA,4BAAA,GAGA,EAAA,YAAA,KAAA,SAEA,KAAA,QAAA,IAAA,KAAA,OAAA,OAAA,CACA,GAAA,IAAA,UAAA,OACA,MAAA,IAAA,MAAA,8DAGA,IAAA,EAAA,EAAA,gBAAA,UAAA,IACA,GAAA,UAAA,EACA,KAAA,OAAA,EAAA,cAAA,OACA,CAAA,GAAA,kBAAA,GAAA,oBAAA,EAGA,MAAA,IAAA,MAAA,6CAAA,GAFA,KAAA,OAAA,UAAA,GAAA,QAWA,GALA,KAAA,QAAA,EAAA,aAAA,CACA,cAAA,KAAA,cACA,YAAA,KAAA,aACA,KAAA,QAAA,GAEA,KAAA,UAAA,CACA,GAAA,IAAA,KAAA,OAAA,OACA,MAAA,IAAA,MAAA,mDAGA,KAAA,cACA,KAAA,aAAA,EACA,QAAA,KAAA,gEAGA,KAAA,QAAA,EAAA,MAAA,KAAA,kBACA,IAAA,KAAA,aAAA,EAAA,oBACA,KAAA,aAAA,KAGA,CACA,IAAA,mBACA,MAAA,WACA,IAAA,EAAA,KAAA,QACA,EAAA,KAAA,QACA,GAAA,OAAA,KAAA,WAAA,CACA,IAAA,EAAA,EAAA,QAAA,IACA,IAAA,IACA,EAAA,EAAA,OACA,EAAA,KAAA,GACA,EAAA,GAAA,CAAA,EAAA,GAAA,EAAA,KAEA,KAAA,WAAA,EAAA,GAEA,KAAA,WAAA,GAAA,EAAA,KACA,KAAA,WAAA,GAAA,EAAA,IAEA,KAAA,WAAA,GAAA,EAAA,KACA,KAAA,WAAA,GAAA,EAAA,MAcA,CACA,IAAA,QACA,MAAA,WACA,KAAA,kBACA,KAAA,iBACA,KAAA,YAAA,WACA,KAAA,mBACA,IAAA,EAAA,KAAA,QACA,EAAA,KAAA,OACA,EAAA,KAAA,QACA,EAAA,OAAA,EAAA,cACA,EAAA,SAAA,EAAA,EAAA,KAAA,WAAA,GAAA,KAAA,WAAA,IACA,EAAA,MAAA,KAAA,WAAA,GACA,EAAA,OAAA,KAAA,WAAA,GAEA,IADA,IAAA,EAAA,KAAA,UAAA,EAAA,MAAA,KAAA,QACA,EAAA,OAAA,GACA,EAAA,KAAA,GAGA,KAAA,iBAAA,KAAA,cAEA,IAAA,EAAA,KAAA,qBAAA,WACA,EAAA,EAAA,aAAA,EAAA,eACA,EAAA,aAAA,EAAA,GACA,EAAA,cAAA,GACA,KAAA,WAAA,EAEA,IAAA,EAAA,KAAA,qBAAA,WACA,EAAA,EAAA,aAAA,EAAA,iBAKA,GAJA,EAAA,aAAA,EAAA,GACA,EAAA,cAAA,GACA,KAAA,WAAA,GAEA,EAAA,mBAAA,EAAA,EAAA,gBAGA,MAFA,QAAA,IAAA,GACA,QAAA,MAAA,4CAAA,EAAA,iBAAA,IACA,IAAA,MAAA,iCAEA,IAAA,EAAA,mBAAA,EAAA,EAAA,gBAGA,MAFA,QAAA,IAAA,GACA,QAAA,MAAA,4CAAA,EAAA,iBAAA,IACA,IAAA,MAAA,mCAGA,KAAA,QACA,QAAA,IAAA,YACA,QAAA,IAAA,MACA,QAAA,IAAA,uBACA,QAAA,IAAA,IAGA,IAAA,EAAA,KAAA,QAAA,EAAA,gBACA,EAAA,aAAA,EAAA,GACA,EAAA,aAAA,EAAA,GACA,EAAA,YAAA,GACA,KAAA,YAAA,EAAA,oBACA,KAAA,YAAA,MAAA,EAAA,GACA,KAAA,YAAA,OAAA,EAAA,GAEA,IAAA,EAAA,IAAA,aAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,IACA,EAAA,IAAA,aAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAEA,EAAA,EAAA,WAEA,EAAA,KAAA,OACA,EAKA,EAAA,WAAA,EAAA,aAAA,IAJA,EAAA,KAAA,OAAA,EAAA,eACA,EAAA,WAAA,EAAA,aAAA,GACA,EAAA,WAAA,EAAA,aAAA,EAAA,WAAA,EAAA,WAAA,EAAA,cAKA,EAAA,cAAA,EAAA,aAAA,EAAA,GACA,EAAA,cAAA,EAAA,aAAA,EAAA,GAEA,IAAA,EAAA,EAAA,kBAAA,KAAA,QAAA,QACA,EAAA,wBAAA,GACA,EAAA,oBAAA,EAAA,EAAA,EAAA,MAAA,EAAA,MAAA,EAAA,GACA,IAAA,EAAA,EAAA,kBAAA,KAAA,QAAA,aAKA,IAAA,IAAA,KAJA,EAAA,wBAAA,GACA,EAAA,oBAAA,EAAA,EAAA,EAAA,MAAA,EAAA,MAAA,EAAA,GACA,EAAA,gBAAA,EAAA,YAAA,KAAA,aAEA,KAAA,UAAA,CACA,IAAA,EAAA,KAAA,UAAA,GACA,EAAA,EAAA,gBAAA,GACA,UAAA,GAAA,YAAA,IAGA,EAAA,WAAA,KAAA,SACA,KAAA,aAAA,KAAA,UAAA,GAAA,EAAA,GACA,KAAA,mBAGA,KAAA,kBACA,KAAA,sBACA,OAAA,KAAA,8BAAA,KAAA,6BAAA,OAAA,GACA,KAAA,wBAAA,KAAA,6BAAA,WAmBA,CACA,IAAA,MACA,MAAA,WACA,OAAA,KAAA,SACA,KAAA,MAAA,MAAA,KAAA,WAEA,IAAA,EAAA,KAAA,WACA,EAAA,KAAA,WACA,EAAA,KAAA,QACA,EAAA,KAAA,OAEA,EAAA,WAAA,KAAA,SACA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAEA,KAAA,oBACA,KAAA,cAAA,aAAA,KAAA,WACA,KAAA,cAAA,WAAA,IAGA,KAAA,aAAA,QAAA,EAAA,GAAA,KAAA,WAAA,GAAA,EAAA,GAAA,KAAA,WAAA,IAEA,KAAA,gBAAA,EACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,KAAA,aAAA,UAAA,GAAA,EAAA,GAAA,EAAA,IAGA,GAAA,KAAA,UACA,OAAA,KAAA,iBACA,EAAA,iBAAA,EAAA,aAAA,MACA,EAAA,gBAAA,EAAA,YAAA,KAAA,aACA,KAAA,gBAAA,KAAA,iBACA,KAAA,sBAEA,EAAA,WAAA,EAAA,eAAA,EAAA,GACA,IAAA,EAAA,KAAA,cAAA,EAAA,KAAA,UAAA,KAAA,OAAA,KAAA,OAAA,qBAEA,EAAA,iBAAA,EAAA,aAAA,MACA,EAAA,gBAAA,EAAA,YAAA,WACA,EAAA,WAAA,EAAA,eAAA,EAAA,IAIA,EAAA,gBAAA,EAAA,YAAA,KAAA,aACA,KAAA,iBACA,KAAA,sBAEA,IAAA,EAAA,KAAA,cAYA,GAVA,OAAA,KAAA,+BACA,KAAA,kBACA,KAAA,wBAAA,GACA,KAAA,wBAAA,KAAA,6BAAA,SAEA,KAAA,YAAA,iBAAA,KAAA,iBAGA,EAAA,WAAA,EAAA,eAAA,EAAA,GAEA,OAAA,KAAA,wBAAA,CACA,GAAA,OAAA,KAAA,WAAA,CACA,IAAA,EAAA,GACA,EAAA,OAAA,KAAA,aAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,IACA,EAAA,KAAA,IAAA,EAAA,KAAA,wBAAA,GAAA,EAAA,KAAA,UAAA,KAAA,OAAA,KAAA,SAEA,OAAA,EACA,GAAA,OAAA,KAAA,oBAAA,CACA,IAAA,EAAA,CACA,OAAA,KAAA,aAAA,IAEA,EAAA,EACA,IAAA,IAAA,KAAA,KAAA,oBACA,KAAA,oBAAA,eAAA,KACA,EAAA,GAAA,IAAA,EAAA,KAAA,wBAAA,GAAA,EAAA,KAAA,UAAA,KAAA,OAAA,KAAA,QACA,KAEA,OAAA,GAIA,OAAA,KAAA,aAAA,KAsBA,CACA,IAAA,eACA,MAAA,SAAA,GACA,IAAA,EAAA,KAAA,QACA,EAAA,KAAA,OACA,EAAA,KAAA,UACA,EAAA,KAAA,OACA,GAAA,KAAA,gBACA,OAAA,IAAA,EAAA,EAAA,EAAA,KAAA,UAAA,EAAA,KAAA,QAEA,IAAA,OAAA,EACA,GAAA,KAAA,YAAA,CACA,IAAA,EAAA,EAAA,GACA,EAAA,KAAA,KAAA,EAAA,GAAA,GACA,EAAA,IAAA,aAAA,EAAA,EAAA,GACA,EAAA,WAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,MAAA,OACA,CACA,IAAA,EAAA,IAAA,WAAA,EAAA,GAAA,EAAA,GAAA,GACA,EAAA,WAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,cAAA,GACA,EAAA,IAAA,aAAA,EAAA,QAKA,OAFA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAEA,IAAA,EAAA,OACA,EACA,IAAA,EAAA,OACA,EAAA,WAAA,EAAA,EAAA,IACA,IAAA,EAAA,OACA,EAAA,WAAA,EAAA,EAAA,GAAA,EAAA,IACA,IAAA,SAAA,GACA,OAAA,EAAA,WAAA,EAAA,EAAA,WAHA,IAoBA,CACA,IAAA,mBACA,MAAA,WACA,OAAA,KAAA,gBAYA,CACA,IAAA,sBACA,MAAA,WACA,IAAA,EAAA,KAAA,OACA,EAAA,KAAA,QACA,EAAA,KAAA,cAAA,KAAA,OAAA,gBACA,EAAA,cAAA,EAAA,SAAA,KAAA,gBAAA,KAAA,WAAA,QACA,EAAA,YAAA,EAAA,WAAA,GACA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,eACA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,eACA,EAAA,cAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,SACA,EAAA,cAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,SACA,KAAA,YACA,EAAA,WAAA,EAAA,WAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,MAAA,MAEA,EAAA,WAAA,EAAA,WAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,cAAA,MAEA,EAAA,qBAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,WAAA,EAAA,KAWA,CACA,IAAA,0BACA,MAAA,SAAA,GAKA,IAJA,IAAA,EAAA,KAAA,OACA,EAAA,KAAA,QACA,EAAA,KAAA,eAAA,CAAA,EAAA,mBACA,EAAA,KAAA,wBAAA,GACA,EAAA,EAAA,EAAA,EAAA,IAAA,CACA,IAAA,EAAA,KAAA,OAAA,gBACA,EAAA,KAAA,GACA,EAAA,KAAA,EAAA,kBAAA,EAAA,GACA,EAAA,cAAA,EAAA,SAAA,KAAA,gBAAA,KAAA,WAAA,OAAA,GACA,EAAA,YAAA,EAAA,WAAA,GACA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,eACA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,eACA,EAAA,cAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,SACA,EAAA,cAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,SACA,KAAA,YACA,EAAA,WAAA,EAAA,WAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,MAAA,MAEA,EAAA,WAAA,EAAA,WAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,cAAA,MAEA,EAAA,qBAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,EAAA,EAAA,WAAA,EAAA,MAiBA,CACA,IAAA,qBACA,MAAA,SAAA,GACA,OAAA,KAAA,gBAAA,YAAA,KAgBA,CACA,IAAA,kBACA,MAAA,SAAA,GACA,OAAA,KAAA,aAAA,eAAA,GACA,KAAA,aAAA,GAEA,KAAA,aAAA,GAAA,KAAA,OAAA,kBAWA,CACA,IAAA,qBACA,MAAA,SAAA,UACA,KAAA,aAAA,KAEA,CACA,IAAA,eACA,MAAA,SAAA,EAAA,GACA,GAAA,KAAA,eAAA,eAAA,IAEA,IADA,KAAA,eAAA,GAEA,OAGA,KAAA,eAAA,GAAA,EACA,IAAA,EAAA,KAAA,mBAAA,GACA,KAAA,OAAA,UAAA,EAAA,KAEA,CACA,IAAA,eACA,MAAA,SAAA,EAAA,GACA,GAAA,KAAA,eAAA,eAAA,IAEA,IADA,KAAA,eAAA,GAEA,OAGA,KAAA,eAAA,GAAA,EACA,IAAA,EAAA,KAAA,mBAAA,GACA,KAAA,OAAA,UAAA,EAAA,KAEA,CACA,IAAA,eACA,MAAA,SAAA,EAAA,EAAA,GACA,GAAA,KAAA,eAAA,eAAA,GAAA,CACA,IAAA,EAAA,KAAA,eAAA,GACA,GAAA,IAAA,EAAA,IAAA,IAAA,EAAA,GACA,OAGA,KAAA,eAAA,GAAA,CAAA,EAAA,GACA,IAAA,EAAA,KAAA,mBAAA,GACA,KAAA,OAAA,UAAA,EAAA,EAAA,KAEA,CACA,IAAA,gBACA,MAAA,SAAA,EAAA,GACA,GAAA,KAAA,gBAAA,eAAA,GAAA,CACA,IAAA,EAAA,KAAA,gBAAA,GACA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,GACA,OAGA,KAAA,gBAAA,GAAA,EACA,IAAA,EAAA,KAAA,mBAAA,GACA,KAAA,OAAA,WAAA,EAAA,KAEA,CACA,IAAA,gBACA,MAAA,SAAA,EAAA,GACA,GAAA,KAAA,gBAAA,eAAA,GAAA,CACA,IAAA,EAAA,KAAA,gBAAA,GACA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,GACA,OAGA,KAAA,gBAAA,GAAA,EACA,IAAA,EAAA,KAAA,mBAAA,GACA,KAAA,OAAA,WAAA,EAAA,KAEA,CACA,IAAA,gBACA,MAAA,SAAA,EAAA,GACA,GAAA,KAAA,gBAAA,eAAA,GAAA,CACA,IAAA,EAAA,KAAA,gBAAA,GACA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,GACA,OAGA,KAAA,gBAAA,GAAA,EACA,IAAA,EAAA,KAAA,mBAAA,GACA,KAAA,OAAA,WAAA,EAAA,KAEA,CACA,IAAA,gBACA,MAAA,SAAA,EAAA,GACA,GAAA,KAAA,gBAAA,eAAA,GAAA,CACA,IAAA,EAAA,KAAA,gBAAA,GACA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,GACA,OAGA,KAAA,gBAAA,GAAA,EACA,IAAA,EAAA,KAAA,mBAAA,GACA,KAAA,OAAA,WAAA,EAAA,KAcA,CACA,IAAA,qBACA,MAAA,SAAA,GACA,OAAA,KAAA,4BAAA,eAAA,GACA,KAAA,4BAAA,GAEA,KAAA,4BAAA,GAAA,KAAA,OAAA,mBAAA,KAAA,QAAA,KAiBA,CACA,IAAA,4BACA,MAAA,SAAA,GACA,MAAA,CACA,OAAA,KAAA,mBACA,SAAA,KAAA,oBACA,UAAA,KAAA,sBACA,oBAAA,KAAA,+BACA,oBAAA,KAAA,+BACA,0BAAA,KAAA,mCACA,eAAA,KAAA,0BACA,oBAAA,KAAA,8BACA,kBAAA,KAAA,4BACA,WAAA,KAAA,sBACA,YAAA,KAAA,qBAAA,GACA,eAAA,KAAA,0BACA,OAAA,KAAA,mBACA,YAAA,KAAA,0BAkBA,CACA,IAAA,eACA,MAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,KAAA,OACA,EAAA,KAAA,mBAAA,GAIA,OAHA,aAAA,IACA,EAAA,EAAA,MAEA,GACA,IAAA,QACA,IAAA,WACA,IAAA,WACA,IAAA,WACA,IAAA,UACA,IAAA,UAEA,IAAA,EAAA,EAAA,cAAA,GAAA,GACA,EAAA,EAAA,aAAA,CACA,cAAA,KAAA,cACA,YAAA,KAAA,aACA,GACA,EAAA,cAAA,EAAA,SAAA,KAAA,gBAAA,KAAA,iBACA,EAAA,YAAA,EAAA,WAAA,GACA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,eACA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,eACA,EAAA,cAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,SACA,EAAA,cAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,SAEA,IAAA,EAAA,EAAA,GAAA,EAAA,GAEA,EAAA,KAAA,qBAAA,EAAA,GACA,EAAA,EAAA,WACA,EAAA,EAAA,SAEA,OAAA,EACA,KAAA,cACA,EAAA,WAAA,EAAA,WAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,MAAA,IAEA,EAAA,IAAA,WAAA,EAAA,QACA,EAAA,WAAA,EAAA,WAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,cAAA,IAGA,KAAA,oBACA,KAAA,cAAA,QAAA,EAAA,MAAA,GACA,KAAA,cAAA,QAAA,EAAA,OAAA,IAEA,KAAA,aAAA,QAAA,EAAA,WAAA,GACA,KAAA,aAAA,QAAA,EAAA,KAAA,iBACA,MAEA,IAAA,UACA,IAAA,QACA,IAAA,SAEA,KAAA,aAAA,QAAA,EAAA,GACA,MAEA,IAAA,QAEA,IACA,EADA,EACA,KACA,EAAA,EAAA,aAAA,CACA,cAAA,KAAA,cACA,YAAA,KAAA,aACA,GACA,EAAA,cAAA,EAAA,SAAA,KAAA,gBAAA,KAAA,iBACA,EAAA,YAAA,EAAA,WAAA,GACA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,eACA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,eACA,EAAA,cAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,SACA,EAAA,cAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,SAEA,IAAA,EAAA,EAAA,GAAA,EAAA,GAEA,EAAA,KAAA,qBAAA,EAAA,MAAA,GACA,EAAA,EAAA,WACA,EAAA,EAAA,SAEA,GAAA,KAAA,cACA,EAAA,WAAA,EAAA,WAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,MAAA,gBACA,CACA,IAAA,EAAA,IAAA,WAAA,EAAA,QACA,EAAA,WAAA,EAAA,WAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,cAAA,GAGA,KAAA,oBACA,KAAA,cAAA,QAAA,EAAA,MAAA,GACA,KAAA,cAAA,QAAA,EAAA,OAAA,IAEA,KAAA,aAAA,QAAA,EAAA,WAAA,GACA,KAAA,aAAA,QAAA,EAAA,KAAA,iBACA,MAEA,IAAA,YAEA,IAAA,EAAA,EACA,EAAA,CAAA,EAAA,MAAA,EAAA,OAAA,GACA,EAAA,CAAA,EAAA,MAAA,EAAA,QAEA,EAAA,cAAA,EAAA,SAAA,KAAA,gBAAA,KAAA,iBACA,EAAA,YAAA,EAAA,WAAA,GACA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,eACA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,eACA,EAAA,cAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,SACA,EAAA,cAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,SACA,EAAA,YAAA,EAAA,qBAAA,GAEA,IACA,EAAA,EAAA,KACA,EAAA,EAAA,KACA,EAAA,EAAA,cACA,EAAA,WAAA,EAAA,WAJA,EAIA,EAAA,EAAA,EAAA,GACA,KAAA,cAAA,QAAA,EAAA,MAAA,GACA,KAAA,cAAA,QAAA,EAAA,OAAA,GACA,KAAA,aAAA,QAAA,EAAA,KAAA,iBACA,MAEA,IAAA,kBACA,IAAA,gBAEA,IAAA,EAAA,EACA,EAAA,EAAA,WACA,EAAA,EAAA,KAEA,EAAA,cAAA,EAAA,SAAA,KAAA,gBAAA,KAAA,iBACA,EAAA,YAAA,EAAA,WAAA,EAAA,SAEA,KAAA,cAAA,QAAA,EAAA,MAAA,GACA,KAAA,cAAA,QAAA,EAAA,OAAA,GACA,KAAA,aAAA,QAAA,EAAA,WAAA,GACA,KAAA,aAAA,QAAA,EAAA,KAAA,iBACA,MAEA,QACA,MAAA,IAAA,MAAA,qCAAA,GAEA,KAAA,oBAiBA,CACA,IAAA,eACA,MAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,KAAA,OACA,EAAA,KAAA,mBAAA,GAIA,OAHA,aAAA,IACA,EAAA,EAAA,MAEA,GACA,IAAA,QAEA,IAAA,EAAA,EAAA,cAAA,GAAA,GACA,EAAA,EAAA,aAAA,CACA,cAAA,KAAA,cACA,YAAA,KAAA,aACA,GACA,EAAA,cAAA,EAAA,SAAA,KAAA,iBACA,EAAA,YAAA,EAAA,WAAA,GACA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,eACA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,eACA,EAAA,cAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,SACA,EAAA,cAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,SAEA,IAAA,EAAA,EAAA,GAAA,EAAA,GAEA,EAAA,KAAA,qBAAA,EAAA,GACA,EAAA,EAAA,WACA,EAAA,EAAA,SAEA,OAAA,EACA,KAAA,cACA,EAAA,WAAA,EAAA,WAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,MAAA,IAEA,EAAA,IAAA,WAAA,EAAA,QACA,EAAA,WAAA,EAAA,WAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,cAAA,IAGA,KAAA,oBACA,KAAA,cAAA,aAAA,EAAA,MAAA,GACA,KAAA,cAAA,aAAA,EAAA,OAAA,IAEA,KAAA,aAAA,aAAA,EAAA,WAAA,GACA,KAAA,aAAA,aAAA,EAAA,KAAA,iBACA,MAEA,IAAA,QAEA,IACA,EADA,EACA,KACA,EAAA,EAAA,aAAA,CACA,cAAA,KAAA,cACA,YAAA,KAAA,aACA,GACA,EAAA,cAAA,EAAA,SAAA,KAAA,iBACA,EAAA,YAAA,EAAA,WAAA,GACA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,eACA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,eACA,EAAA,cAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,SACA,EAAA,cAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,SAEA,IAAA,EAAA,EAAA,GAAA,EAAA,GAEA,EAAA,KAAA,qBAAA,EAAA,MAAA,GACA,EAAA,EAAA,WACA,EAAA,EAAA,SAEA,GAAA,KAAA,cACA,EAAA,WAAA,EAAA,WAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,MAAA,gBACA,CACA,IAAA,EAAA,IAAA,WAAA,EAAA,QACA,EAAA,WAAA,EAAA,WAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,cAAA,GAGA,KAAA,oBACA,KAAA,cAAA,aAAA,EAAA,MAAA,GACA,KAAA,cAAA,aAAA,EAAA,OAAA,IAEA,KAAA,aAAA,aAAA,EAAA,WAAA,GACA,KAAA,aAAA,aAAA,EAAA,KAAA,iBACA,MAEA,IAAA,YAEA,IAAA,EAAA,EACA,EAAA,CAAA,EAAA,MAAA,EAAA,OAAA,GACA,EAAA,CAAA,EAAA,MAAA,EAAA,QAEA,EAAA,cAAA,EAAA,SAAA,KAAA,iBACA,EAAA,YAAA,EAAA,WAAA,GACA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,eACA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,eACA,EAAA,cAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,SACA,EAAA,cAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,SACA,EAAA,YAAA,EAAA,qBAAA,GAEA,IACA,EAAA,EAAA,KACA,EAAA,EAAA,KACA,EAAA,EAAA,cACA,EAAA,WAAA,EAAA,WAJA,EAIA,EAAA,EAAA,EAAA,GACA,KAAA,cAAA,aAAA,EAAA,MAAA,GACA,KAAA,cAAA,aAAA,EAAA,OAAA,GACA,KAAA,aAAA,aAAA,EAAA,KAAA,iBACA,MAEA,IAAA,kBACA,IAAA,gBAEA,IAAA,EAAA,EACA,EAAA,EAAA,WACA,EAAA,EAAA,KAEA,EAAA,cAAA,EAAA,SAAA,KAAA,iBACA,EAAA,YAAA,EAAA,WAAA,EAAA,SAEA,KAAA,cAAA,aAAA,EAAA,MAAA,GACA,KAAA,cAAA,aAAA,EAAA,OAAA,GACA,KAAA,aAAA,aAAA,EAAA,WAAA,GACA,KAAA,aAAA,aAAA,EAAA,KAAA,iBACA,MAEA,IAAA,UACA,IAAA,QACA,QACA,MAAA,IAAA,MAAA,qCAAA,MAmBA,CACA,IAAA,uBACA,MAAA,SAAA,EAAA,GACA,IAAA,EAAA,EACA,EAAA,EACA,GAAA,EAAA,QAAA,EAAA,KAAA,KAAA,cAEA,EAAA,IAAA,aAAA,GACA,EAAA,UAAA,EAAA,QAGA,OAAA,EAAA,aACA,KAAA,WACA,KAAA,UACA,EAAA,EACA,MACA,KAAA,YACA,KAAA,WACA,EAAA,EACA,KAAA,aACA,KAAA,WACA,MAEA,QACA,EAAA,IAAA,aAAA,GACA,EAAA,UAAA,EAAA,GAGA,MAAA,CACA,SAAA,EACA,WAAA,KAgBA,CACA,IAAA,mBACA,MAAA,WACA,OAAA,OAAA,KAAA,YAAA,OAAA,KAAA,oBAEA,6CAAA,KAcA,CACA,IAAA,oBACA,MAAA,WACA,OAAA,KAAA,kBAAA,IAAA,SAAA,KAAA,mBAAA,QAAA,eAgBA,CACA,IAAA,sBACA,MAAA,WACA,IAAA,EAAA,GACA,EAAA,KAAA,UACA,EAAA,KAAA,QAOA,OANA,KAAA,kBACA,EAAA,KAAA,4BAAA,EAAA,GAAA,IAAA,EAAA,GAAA,KAAA,EAAA,GAAA,IAAA,0BAAA,EAAA,GAAA,KAAA,EAAA,GAAA,KAEA,EAAA,KAAA,2BAAA,0BAGA,KAAA,eAAA,KAcA,CACA,IAAA,wBACA,MAAA,WACA,IAAA,EAAA,KAAA,6BACA,OAAA,OAAA,GAAA,EAAA,OAAA,EACA,4BAEA,0BAeA,CACA,IAAA,+BACA,MAAA,WACA,MAAA,OAAA,KAAA,WAAA,GAAA,+BAcA,CACA,IAAA,+BACA,MAAA,WACA,MAAA,OAAA,KAAA,WAAA,GAAA,+BAcA,CACA,IAAA,mCACA,MAAA,WACA,OAAA,KAAA,2BAAA,8NAAA,KAWA,CACA,IAAA,0BACA,MAAA,WACA,OAAA,KAAA,WAAA,8BAAA,KAUA,CACA,IAAA,8BACA,MAAA,WACA,OAAA,KAAA,cAEA,KAAA,eAAA,CAAA,uCAAA,wBAFA,KAiBA,CACA,IAAA,4BACA,MAAA,WACA,OAAA,KAAA,cAAA,yBAAA,KAUA,CACA,IAAA,sBACA,MAAA,WACA,OAAA,KAAA,cAGA,KAAA,eAAA,CAAA,qCAAA,qCAAA,qCAAA,uCAFA,yCAkBA,CACA,IAAA,uBACA,MAAA,SAAA,GAIA,IAHA,IAAA,EAAA,GACA,EAAA,KAAA,WACA,EAAA,KAAA,WACA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CACA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,GAAA,KAAA,kBACA,GAAA,UAAA,GAAA,kBAAA,GAAA,oBAAA,EAAA,CACA,IAAA,EAAA,EAAA,cAAA,GAAA,GACA,EAAA,EAAA,aAAA,CACA,cAAA,KAAA,cACA,YAAA,KAAA,aACA,GAEA,EAAA,KAAA,0BAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,GAAA,KAAA,EAAA,GAAA,IAAA,cAAA,EAAA,eAAA,EAAA,GAAA,KAAA,EAAA,GAAA,KAAA,EAAA,GAAA,IAAA,oBAAA,EAAA,gBACA,YAAA,EACA,EAAA,KAAA,cAAA,EAAA,MAAA,EAAA,MACA,UAAA,GACA,EAAA,KAAA,cAAA,EAAA,MAAA,QAGA,GAAA,UAAA,GAAA,kBAAA,GAAA,oBAAA,GAAA,UAAA,GAAA,cAAA,EACA,EAAA,KAAA,0BAAA,EAAA,sBAAA,EAAA,OAAA,sBAAA,EAAA,OACA,cAAA,GACA,EAAA,KAAA,oBAAA,EAAA,gBAEA,CAAA,GAAA,YAAA,GAAA,UAAA,EAGA,MAAA,IAAA,MAAA,cAAA,EAAA,wCAFA,EAAA,KAAA,sBAAA,IAMA,OAAA,KAAA,eAAA,KAUA,CACA,IAAA,0BACA,MAAA,WACA,IAAA,EAAA,GACA,GAAA,KAAA,UACA,IAAA,IAAA,KAAA,KAAA,UACA,GAAA,KAAA,UAAA,eAAA,GAAA,CACA,IAAA,EAAA,KAAA,UAAA,GACA,EAAA,EAAA,gBAAA,GACA,OAAA,GACA,IAAA,UACA,EAAA,KAAA,yBAAA,EAAA,MAAA,SAAA,GAAA,MACA,MACA,IAAA,QACA,EAAA,KAAA,yBAAA,EAAA,MAAA,WAAA,IACA,MACA,IAAA,QACA,IAAA,QACA,IAAA,YACA,IAAA,gBACA,IAAA,kBACA,EAAA,KAAA,+BAAA,EAAA,2BAAA,EAAA,OAAA,2BAAA,EAAA,MAAA,yBAAA,EAAA,YACA,MACA,QACA,MAAA,IAAA,MAAA,wBAAA,EAAA,SAAA,IAIA,OAAA,KAAA,eAAA,KAcA,CACA,IAAA,mBACA,MAAA,WACA,IAAA,EAAA,GACA,EAAA,KAAA,6BACA,GAAA,OAAA,EAAA,CACA,EAAA,KAAA,4BACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,EAAA,KAAA,SAAA,EAAA,GAAA,eAGA,EAAA,KAAA,4BAGA,OAAA,KAAA,eAAA,GAAA,KAAA,gBAAA,mBAAA,YAeA,CACA,IAAA,uBACA,MAAA,WACA,IAAA,EAAA,KAAA,6BACA,EAAA,GAMA,GAJA,KAAA,aACA,EAAA,KAAA,gBAGA,KAAA,UACA,EAAA,KAAA,4CAAA,aAAA,qCACA,GAAA,KAAA,YAGA,IAFA,IAAA,EAAA,CAAA,IAAA,IAAA,IAAA,KAEA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,CAIA,GAHA,EAAA,KAAA,6CACA,EAAA,KAAA,cAEA,EAAA,CACA,EAAA,KAAA,oBAAA,EAAA,GAAA,mBAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EACA,EAAA,KAAA,kBAAA,EAAA,GAAA,KAAA,EAAA,GAAA,MAAA,EAAA,SAGA,EAAA,KAAA,kBAAA,EAAA,GAAA,mBAGA,EAAA,EAAA,OAAA,GACA,EAAA,KAAA,qBAGA,GAAA,OAAA,EAAA,CACA,EAAA,KAAA,6CACA,EAAA,KAAA,cACA,EAAA,KAAA,6CACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,EAAA,KAAA,kBAAA,EAAA,GAAA,gBAAA,EAAA,GAAA,UAGA,EAAA,KAAA,4CAAA,aAAA,2CAGA,OAAA,KAAA,eAAA,KAcA,CACA,IAAA,iBACA,MAAA,SAAA,GACA,OAAA,EAAA,OAAA,EACA,EAAA,KAAA,OAAA,MAEA,OAcA,CACA,IAAA,oBACA,MAAA,SAAA,EAAA,GACA,OAAA,EAAA,QAAA,yCAAA,SAAA,EAAA,GACA,GAAA,EAAA,eAAA,GACA,OAAA,EAAA,GAEA,KAAA,sBAAA,MAaA,CACA,IAAA,cACA,MAAA,WACA,IAAA,EAAA,KAEA,EAAA,KAAA,gBACA,EAAA,KAAA,OAoBA,GAlBA,EAAA,aAAA,KAAA,UAAA,CACA,UAAA,KAAA,UACA,OAAA,KAAA,SAEA,EAAA,mBAAA,KAAA,iBAEA,EAAA,UAAA,KAAA,SAAA,CACA,eAAA,EACA,UAAA,KAAA,UACA,OAAA,KAAA,OACA,MAAA,KAAA,MACA,kBAAA,KAAA,kBACA,WAAA,KAAA,WACA,WAAA,KAAA,WACA,cAAA,KAAA,cACA,2BAAA,KAAA,6BAGA,OAAA,KAAA,WAAA,CAEA,KADA,KAAA,YAAA,EAAA,aAAA,uBACA,MAAA,IAAA,MAAA,gDACA,KAAA,6BAAA,GACA,KAAA,WAAA,QAAA,SAAA,GACA,OAAA,EAAA,cAAA,UAEA,GAAA,OAAA,KAAA,oBAAA,CAEA,KADA,KAAA,YAAA,EAAA,aAAA,uBACA,MAAA,IAAA,MAAA,gDACA,KAAA,6BAAA,GACA,OAAA,KAAA,KAAA,qBAAA,QAAA,SAAA,GACA,OAAA,EAAA,cAAA,EAAA,oBAAA,SAIA,CACA,IAAA,gBACA,MAAA,SAAA,GACA,KAAA,gBAAA,aAAA,EAAA,CACA,eAAA,EACA,UAAA,KAAA,UACA,OAAA,KAAA,OACA,MAAA,KAAA,MACA,kBAAA,KAAA,kBACA,2BAAA,KAAA,6BAEA,KAAA,6BAAA,KAAA,EAAA,KAAA,YAkBA,CACA,IAAA,uBACA,MAAA,SAAA,GACA,OAAA,OAAA,KAAA,yBACA,KAAA,yBAEA,KAAA,yBAAA,KAAA,kBAAA,KAAA,YAAA,iBAAA,KAAA,0BAAA,MAgBA,CACA,IAAA,uBACA,MAAA,SAAA,GACA,OAAA,OAAA,KAAA,yBACA,KAAA,yBAEA,KAAA,yBAAA,KAAA,YAAA,mBAYA,CACA,IAAA,WACA,MAAA,WACA,OAAA,EAAA,QAEA,CACA,IAAA,cACA,MAAA,SAAA,GACA,KAAA,gBAAA,YAAA,KAAA,KAEA,CACA,IAAA,UACA,MAAA,SAAA,GACA,EAAA,EAAA,UAAA,WAAA,OAAA,eAAA,EAAA,WAAA,UAAA,MAAA,KAAA,MACA,KAAA,eACA,KAAA,OAAA,cAAA,KAAA,eAEA,KAAA,QACA,KAAA,OAAA,aAAA,KAAA,QAEA,KAAA,aACA,KAAA,OAAA,kBAAA,KAAA,aAGA,KAAA,YACA,KAAA,OAAA,aAAA,KAAA,YAGA,KAAA,YACA,KAAA,OAAA,aAAA,KAAA,YAGA,KAAA,SACA,KAAA,OAAA,cAAA,KAAA,SAKA,IAFA,IAAA,EAAA,OAAA,KAAA,KAAA,cAEA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CACA,IAAA,EAAA,EAAA,GACA,KAAA,OAAA,cAAA,KAAA,aAAA,IAGA,GAAA,KAAA,wBACA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,wBAAA,OAAA,IACA,KAAA,OAAA,cAAA,KAAA,wBAAA,IAGA,GAAA,EAAA,CACA,IAAA,EAAA,EAAA,QAAA,KAAA,SACA,GAAA,IACA,EAAA,GAAA,KACA,EAAA,GAAA,aAGA,KAAA,WAIA,EA9nDA;;ACrBA,aAEA,IAAA,EAAA,WAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,OAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAEA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAEA,OAAA,QAAA,WAaA,SAAA,EAAA,GACA,EAAA,KAAA,GAEA,KAAA,QAAA,GACA,KAAA,gBAAA,GACA,KAAA,IAAA,EACA,KAAA,WAAA,KACA,KAAA,KAAA,KAmUA,OAhUA,EAAA,EAAA,CAAA,CACA,IAAA,oBACA,MAAA,SAAA,EAAA,GACA,KAAA,gBAAA,GAAA,IAgBA,CACA,IAAA,cACA,MAAA,SAAA,EAAA,EAAA,GACA,KAAA,gBAAA,IAAA,KAAA,KAAA,EAAA,EAAA,GAAA,WAAA,SAEA,CACA,IAAA,eACA,MAAA,SAAA,EAAA,GACA,GAAA,EACA,GAAA,MAAA,QAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,KAAA,YAAA,KAAA,EAAA,GAAA,QAGA,IAAA,IAAA,KAAA,EACA,KAAA,YAAA,EAAA,EAAA,GAAA,KAKA,CACA,IAAA,qBACA,MAAA,SAAA,GACA,IAAA,IAAA,KAAA,EACA,EAAA,eAAA,IACA,KAAA,kBAAA,EAAA,EAAA,MAeA,CACA,IAAA,kBACA,MAAA,SAAA,GACA,KAAA,QAAA,EAAA,cAAA,EACA,EAAA,eACA,KAAA,WAAA,KAqBA,CACA,IAAA,qBACA,MAAA,SAAA,EAAA,EAAA,GACA,EAAA,GAAA,SACA,EAAA,GAAA,GAEA,IAAA,EAAA,KAAA,QAAA,GACA,GAAA,EAAA,CAEA,IAAA,EAAA,EAAA,QAAA,GACA,IAAA,IAAA,EAAA,CACA,EAAA,KAAA,GACA,IACA,EAAA,OAAA,GAEA,EAAA,oBACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,gBAAA,SAAA,EACA,KAAA,mBAAA,EAAA,gBAAA,GAAA,EAAA,OAEA,CAMA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,GACA,EAAA,KAAA,IAYA,OARA,KAAA,gBAAA,KACA,EAAA,QAAA,IAAA,GAGA,EAAA,KAAA,IAIA,IAkBA,CACA,IAAA,YACA,MAAA,SAAA,EAAA,GACA,IAAA,EAAA,IAAA,KAAA,KAAA,SAAA,EAAA,GAIA,OAHA,EAAA,WAAA,MACA,EAAA,cAAA,EACA,KAAA,gBAAA,GACA,IAiBA,CACA,IAAA,eACA,MAAA,SAAA,EAAA,GACA,IAAA,EAAA,IAAA,KAAA,KAAA,KAAA,EAAA,GAIA,OAHA,EAAA,WAAA,MACA,EAAA,aAAA,EACA,KAAA,gBAAA,GACA,IAgBA,CACA,IAAA,qBACA,MAAA,SAAA,GACA,OAAA,KAAA,cAAA,GAAA,KAAA,QAgBA,CACA,IAAA,gBACA,MAAA,SAAA,GAEA,OADA,KAAA,WAAA,WACA,EACA,KAAA,+BAAA,KAAA,mBAAA,EAAA,IAAA,WAEA,KAAA,+BAAA,OAAA,KAAA,KAAA,YAgBA,CACA,IAAA,6BACA,MAAA,SAAA,GAEA,IADA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,CACA,KAAA,QAAA,EAAA,KAEA,EAAA,KAAA,KAAA,QAAA,EAAA,IAAA,qBAGA,OAAA,EAAA,KAAA,QAiBA,CACA,IAAA,iCACA,MAAA,SAAA,EAAA,GAEA,IADA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,CACA,IAAA,EAAA,EAAA,GACA,EAAA,KAAA,QAAA,GACA,EACA,EAAA,KAAA,EAAA,2BAAA,IACA,KAAA,gBAAA,IACA,EAAA,KAAA,KAAA,gBAAA,IAGA,OAAA,IAiBA,CACA,IAAA,sCACA,MAAA,SAAA,EAAA,GACA,OAAA,KAAA,+BAAA,EAAA,GAAA,aAgBA,CACA,IAAA,YACA,MAAA,SAAA,EAAA,GAKA,YAJA,IAAA,IACA,EAAA,IAGA,EACA,KAAA,2BAAA,KAAA,mBAAA,EAAA,GAAA,GAAA,UAAA,GAEA,KAAA,2BAAA,OAAA,KAAA,KAAA,SAAA,OAIA,EAvVA;;ACyrKC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,MAAA,GAAA,QAAA,kBAAA,GAAA,QAAA,UAAA,GAAA,QAAA,gBAAA,GAAA,QAAA,YAAA,EAAA,QAAA,iBAAA,EAAA,QAAA,kBAAA,EAAA,QAAA,UAAA,EAAA,QAAA,mBAAA,QAAA,WAAA,QAAA,UAAA,QAAA,MAAA,QAAA,YAAA,QAAA,WAAA,QAAA,aAAA,QAAA,SAAA,QAAA,UAAA,QAAA,KAAA,QAAA,eAAA,QAAA,SAAA,QAAA,eAAA,QAAA,QAAA,QAAA,OAAA,QAAA,aAAA,QAAA,YAAA,QAAA,aAAA,QAAA,aAAA,EA7rKD,IAAIA,EAAgB,CACf,EAAA,sNACA,EAAA,+CACA,EAAA,OACHC,OAAQ,yEACRC,WAAY,kBAKVC,EAAuB,8KAEvBC,EAAW,CACVD,EAAAA,EACAA,EAAAA,EAAuB,4CAGxBE,EAA4B,kBAU5BC,EAA+B,86BAC/BC,EAA0B,ijBAE1BC,EAA0B,IAAIC,OAAO,IAAMH,EAA+B,KAC1EI,EAAqB,IAAID,OAAO,IAAMH,EAA+BC,EAA0B,KAEnGD,EAA+BC,EAA0B,KASzpCC,EAAwB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,GAAG,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,OAAO,KAK7kB,SAASC,EAAcC,EAAMC,GAEtB,IADDC,IAAAA,EAAM,MACDC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,GAAK,EAAG,CAElCD,IADJA,GAAOD,EAAIE,IACDH,EAAe,OAAA,EAErBE,IADJA,GAAOD,EAAIE,EAAI,KACJH,EAAe,OAAA,GAM9B,SAASK,EAAkBL,EAAMM,GAC3BN,OAAAA,EAAO,GAAsB,KAATA,EACpBA,EAAO,KACPA,EAAO,GAAsB,KAATA,EACpBA,EAAO,MACPA,GAAQ,MAAiBA,GAAQ,KAAQN,EAAwBa,KAAKC,OAAOC,aAAaT,KAC/E,IAAXM,GACGP,EAAcC,EAAMH,KAK7B,SAASa,EAAiBV,EAAMM,GAC1BN,OAAAA,EAAO,GAAsB,KAATA,EACpBA,EAAO,MACPA,EAAO,MACPA,EAAO,KACPA,EAAO,GAAsB,KAATA,EACpBA,EAAO,MACPA,GAAQ,MAAiBA,GAAQ,KAAQJ,EAAmBW,KAAKC,OAAOC,aAAaT,KAC1E,IAAXM,IACGP,EAAcC,EAAMH,IAA+BE,EAAcC,EAAMF,OA0BhF,IAAIa,EAAY,SAAmBC,EAAOC,QAC1B,IAATA,IAAkBA,EAAO,IAEzBD,KAAAA,MAAQA,EACRE,KAAAA,QAAUD,EAAKC,QACfC,KAAAA,aAAeF,EAAKE,WACpBC,KAAAA,aAAeH,EAAKG,WACpBC,KAAAA,SAAWJ,EAAKI,OAChBC,KAAAA,WAAaL,EAAKK,SAClBC,KAAAA,SAAWN,EAAKM,OAChBC,KAAAA,UAAYP,EAAKO,QACjBC,KAAAA,MAAQR,EAAKQ,OAAS,KACtBC,KAAAA,cAAgB,MAGvB,SAASD,EAAME,EAAMC,GACZ,OAAA,IAAIb,EAAUY,EAAM,CAACR,YAAY,EAAMM,MAAOG,IAgkKtD,QAAA,UAAA,EA9jKD,IAAIT,EAAa,CAACA,YAAY,GAC1BC,EAAa,CAACA,YAAY,GAI1BS,EAAa,GAGjB,SAASC,EAAGH,EAAMI,GAITF,YAHU,IAAZE,IAAqBA,EAAU,IAEpCA,EAAQb,QAAUS,EACXE,EAAWF,GAAQ,IAAIZ,EAAUY,EAAMI,GAkjK/C,QAAA,aAAA,EA/iKD,IAAIC,EAAQ,CACVC,IAAK,IAAIlB,EAAU,MAAOK,GAC1Bc,OAAQ,IAAInB,EAAU,SAAUK,GAChCe,OAAQ,IAAIpB,EAAU,SAAUK,GAChCO,KAAM,IAAIZ,EAAU,OAAQK,GAC5BgB,IAAK,IAAIrB,EAAU,OAGnBsB,SAAU,IAAItB,EAAU,IAAK,CAACI,YAAY,EAAMC,YAAY,IAC5DkB,SAAU,IAAIvB,EAAU,KACxBwB,OAAQ,IAAIxB,EAAU,IAAK,CAACI,YAAY,EAAMC,YAAY,IAC1DoB,OAAQ,IAAIzB,EAAU,KACtB0B,OAAQ,IAAI1B,EAAU,IAAK,CAACI,YAAY,EAAMC,YAAY,IAC1DsB,OAAQ,IAAI3B,EAAU,KACtB4B,MAAO,IAAI5B,EAAU,IAAKI,GAC1ByB,KAAM,IAAI7B,EAAU,IAAKI,GACzB0B,MAAO,IAAI9B,EAAU,IAAKI,GAC1B2B,IAAK,IAAI/B,EAAU,KACnBgC,SAAU,IAAIhC,EAAU,IAAKI,GAC7B6B,MAAO,IAAIjC,EAAU,KAAMI,GAC3B8B,SAAU,IAAIlC,EAAU,YACxBmC,gBAAiB,IAAInC,EAAU,mBAC/BoC,SAAU,IAAIpC,EAAU,MAAOI,GAC/BiC,UAAW,IAAIrC,EAAU,IAAKK,GAC9BiC,aAAc,IAAItC,EAAU,KAAM,CAACI,YAAY,EAAMC,YAAY,IAgBjEkC,GAAI,IAAIvC,EAAU,IAAK,CAACI,YAAY,EAAMG,UAAU,IACpDiC,OAAQ,IAAIxC,EAAU,KAAM,CAACI,YAAY,EAAMG,UAAU,IACzDkC,OAAQ,IAAIzC,EAAU,QAAS,CAACQ,QAAQ,EAAMC,SAAS,EAAMJ,YAAY,IACzEG,OAAQ,IAAIR,EAAU,MAAO,CAACI,YAAY,EAAMI,QAAQ,EAAMH,YAAY,IAC1EqC,UAAWhC,EAAM,KAAM,GACvBiC,WAAYjC,EAAM,KAAM,GACxBkC,UAAWlC,EAAM,IAAK,GACtBmC,WAAYnC,EAAM,IAAK,GACvBoC,WAAYpC,EAAM,IAAK,GACvBqC,SAAUrC,EAAM,gBAAiB,GACjCsC,WAAYtC,EAAM,YAAa,GAC/BuC,SAAUvC,EAAM,YAAa,GAC7BwC,QAAS,IAAIlD,EAAU,MAAO,CAACI,YAAY,EAAMM,MAAO,EAAGF,QAAQ,EAAMH,YAAY,IACrF8C,OAAQzC,EAAM,IAAK,IACnB0C,KAAM1C,EAAM,IAAK,IACjB2C,MAAO3C,EAAM,IAAK,IAClB4C,SAAU,IAAItD,EAAU,KAAM,CAACI,YAAY,IAG3CmD,OAAQxC,EAAG,SACXyC,MAAOzC,EAAG,OAAQX,GAClBqD,OAAQ1C,EAAG,SACX2C,UAAW3C,EAAG,YACd4C,UAAW5C,EAAG,YACd6C,SAAU7C,EAAG,UAAWX,GACxByD,IAAK9C,EAAG,KAAM,CAACT,QAAQ,EAAMF,YAAY,IACzC0D,MAAO/C,EAAG,OAAQX,GAClB2D,SAAUhD,EAAG,WACbiD,KAAMjD,EAAG,MAAO,CAACT,QAAQ,IACzB2D,UAAWlD,EAAG,WAAYV,GAC1B6D,IAAKnD,EAAG,MACRoD,QAASpD,EAAG,SAAUX,GACtBgE,QAASrD,EAAG,UACZsD,OAAQtD,EAAG,QAASX,GACpBkE,KAAMvD,EAAG,OACTwD,KAAMxD,EAAG,OACTyD,OAAQzD,EAAG,SACX0D,OAAQ1D,EAAG,QAAS,CAACT,QAAQ,IAC7BoE,MAAO3D,EAAG,QACV4D,KAAM5D,EAAG,MAAO,CAACX,YAAY,EAAMC,YAAY,IAC/CuE,MAAO7D,EAAG,OAAQV,GAClBwE,OAAQ9D,EAAG,QAASV,GACpByE,OAAQ/D,EAAG,QAASV,GACpB0E,SAAUhE,EAAG,UAAWX,GACxB4E,QAASjE,EAAG,UACZkE,QAASlE,EAAG,UACZmE,MAAOnE,EAAG,OAAQV,GAClB8E,MAAOpE,EAAG,OAAQV,GAClB+E,OAAQrE,EAAG,QAASV,GACpBgF,IAAKtE,EAAG,KAAM,CAACX,YAAY,EAAMM,MAAO,IACxC4E,YAAavE,EAAG,aAAc,CAACX,YAAY,EAAMM,MAAO,IACxD6E,QAASxE,EAAG,SAAU,CAACX,YAAY,EAAMI,QAAQ,EAAMH,YAAY,IACnEmF,MAAOzE,EAAG,OAAQ,CAACX,YAAY,EAAMI,QAAQ,EAAMH,YAAY,IAC/DoF,QAAS1E,EAAG,SAAU,CAACX,YAAY,EAAMI,QAAQ,EAAMH,YAAY,KAk9JpE,QAAA,SAAA,EA58JD,IAAIqF,EAAY,yBA48Jf,QAAA,UAAA,EA38JD,IAAIC,EAAa,IAAI3G,OAAO0G,EAAUE,OAAQ,KAE9C,SAASC,EAAUxG,EAAMyG,GAChBzG,OAAS,KAATA,GAAwB,KAATA,IAAiByG,IAA4B,OAATzG,GAA4B,OAATA,GAw8J9E,QAAA,WAAA,EAr8JD,IAAI0G,EAAqB,sDAq8JxB,QAAA,mBAAA,EAn8JD,IAAIC,EAAiB,gCAEjBC,EAAMC,OAAOC,UACbC,EAAiBH,EAAIG,eACrBC,EAAWJ,EAAII,SAInB,SAASC,EAAIC,EAAKC,GACTJ,OAAAA,EAAeK,KAAKF,EAAKC,GAGlC,IAAIE,EAAUC,MAAMD,SAAY,SAAUH,GACxCF,MAAuB,mBAAvBA,EAASI,KAAKF,IAMZK,EAAW,SAAkBC,EAAMC,GAChCD,KAAAA,KAAOA,EACPE,KAAAA,OAASD,GA86Jf,QAAA,SAAA,EA36JDF,EAAST,UAAUa,OAAS,SAAiBC,GACpC,OAAA,IAAIL,EAAS,KAAKC,KAAM,KAAKE,OAASE,IAG/C,IAAIC,EAAiB,SAAwBC,EAAGC,EAAOC,GAChDD,KAAAA,MAAQA,EACRC,KAAAA,IAAMA,EACU,OAAjBF,EAAEG,aAA4B1B,KAAAA,OAASuB,EAAEG,aAS/C,SAASC,EAAYC,EAAOR,GACrB,IAAA,IAAIH,EAAO,EAAGY,EAAM,IAAK,CAC5B9B,EAAW+B,UAAYD,EACnBE,IAAAA,EAAQhC,EAAWiC,KAAKJ,GACxBG,KAAAA,GAASA,EAAME,MAAQb,GAIlB,OAAA,IAAIJ,EAASC,EAAMG,EAASS,KAHjCZ,EACFY,EAAME,EAAME,MAAQF,EAAM,GAAGlI,QAq5JlC,QAAA,eAAA,EA34JD,IAAIqI,EAAiB,CAKnBC,YAAa,EAIbC,WAAY,SAMZC,oBAAqB,KAGrBC,gBAAiB,KAKjBC,cAAe,KAGfC,4BAA4B,EAG5BC,6BAA6B,EAG7BC,2BAA2B,EAG3BC,eAAe,EAKfC,WAAW,EAMXC,QAAS,KAWTC,UAAW,KASXC,QAAQ,EAMRC,QAAS,KAGTtB,WAAY,KAGZuB,iBAAkB,KAGlBC,gBAAgB,EAChBC,QAAS,IAKX,SAASC,EAAWC,GACdjI,IAAAA,EAAU,GAET,IAAA,IAAIkI,KAAOpB,EACZ9G,EAAQkI,GAAOD,GAAQ3C,EAAI2C,EAAMC,GAAOD,EAAKC,GAAOpB,EAAeoB,GAQnExC,GANA1F,EAAQ+G,aAAe,OACvB/G,EAAQ+G,aAAe,MAEE,MAAzB/G,EAAQmH,gBACRnH,EAAQmH,cAAgBnH,EAAQ+G,YAAc,GAE9CrB,EAAQ1F,EAAQyH,SAAU,CACxBU,IAAAA,EAASnI,EAAQyH,QACrBzH,EAAQyH,QAAU,SAAUW,GAAgBD,OAAAA,EAAOE,KAAKD,IAKnDpI,OAHH0F,EAAQ1F,EAAQ0H,aAChB1H,EAAQ0H,UAAYY,EAAYtI,EAASA,EAAQ0H,YAE9C1H,EAGT,SAASsI,EAAYtI,EAASuI,GACrB,OAAA,SAASC,EAAOC,EAAMrC,EAAOC,EAAKqC,EAAUC,GAC7CC,IAAAA,EAAU,CACZC,KAAML,EAAQ,QAAU,OACxBM,MAAOL,EACPrC,MAAOA,EACPC,IAAKA,GAEHrG,EAAQwH,YACRoB,EAAQG,IAAM,IAAI7C,EAAe,KAAMwC,EAAUC,IACjD3I,EAAQ2H,SACRiB,EAAQI,MAAQ,CAAC5C,EAAOC,IAC5BkC,EAAMF,KAAKO,IAkxJd,QAAA,eAAA,EA7wJD,IAAIb,EAAU,GAEd,SAASkB,EAAcC,GACd,OAAA,IAAIlL,OAAO,OAASkL,EAAMC,QAAQ,KAAM,KAAO,MA0wJvD,QAAA,QAAA,EAvwJD,IAAIC,EAAS,SAAgBpJ,EAASwG,EAAO6C,GACtCrJ,KAAAA,QAAUA,EAAUgI,EAAWhI,GAC/BsG,KAAAA,WAAatG,EAAQsG,WACrB3I,KAAAA,SAAWsL,EAActL,EAASqC,EAAQ+G,aAAe,EAAI,EAAI,IAClEuC,IAAAA,EAAW,GACX,IAACtJ,EAAQmH,cAAe,CACrB,IAAA,IAAIoC,EAAIvJ,EAAQ+G,cACbuC,EAAW/L,EAAcgM,IADEA,KAER,WAAvBvJ,EAAQgH,aAA2BsC,GAAY,UAEhD/L,KAAAA,cAAgB0L,EAAcK,GAC/BE,IAAAA,GAAkBF,EAAWA,EAAW,IAAM,IAAM/L,EAAcC,OACjEiM,KAAAA,oBAAsBR,EAAcO,GACpCE,KAAAA,wBAA0BT,EAAcO,EAAiB,IAAMjM,EAAcE,YAC7E+I,KAAAA,MAAQ3H,OAAO2H,GAKfmD,KAAAA,aAAc,EAGdC,KAAAA,YAAY5J,EAAQ+H,SAKrBsB,GACG9K,KAAAA,IAAM8K,EACNQ,KAAAA,UAAY,KAAKrD,MAAMsD,YAAY,KAAMT,EAAW,GAAK,EACzDU,KAAAA,QAAU,KAAKvD,MAAMwD,MAAM,EAAG,KAAKH,WAAWI,MAAMvF,GAAWjG,SAE/DF,KAAAA,IAAM,KAAKsL,UAAY,EACvBE,KAAAA,QAAU,GAKZlB,KAAAA,KAAO5I,EAAMI,IAEbyI,KAAAA,MAAQ,KAER1C,KAAAA,MAAQ,KAAKC,IAAM,KAAK9H,IAGxBmK,KAAAA,SAAW,KAAKC,OAAS,KAAKuB,cAG9BC,KAAAA,cAAgB,KAAKC,gBAAkB,KACvCC,KAAAA,aAAe,KAAKC,WAAa,KAAK/L,IAKtCgM,KAAAA,QAAU,KAAKC,iBACfC,KAAAA,aAAc,EAGdC,KAAAA,SAAkC,WAAvB1K,EAAQgH,WACnBxJ,KAAAA,OAAS,KAAKkN,UAAY,KAAKC,gBAAgB,KAAKpM,KAGpDqM,KAAAA,kBAAoB,EAGpBC,KAAAA,WAAa,KAAKC,YAAc,KAAKC,SAAU,EAE/CC,KAAAA,SAAW,KAAKC,SAAW,EAE3BC,KAAAA,OAAS,GAGG,IAAb,KAAK3M,KAAayB,EAAQuH,eAA4C,OAA3B,KAAKf,MAAMwD,MAAM,EAAG,IAC1DmB,KAAAA,gBAAgB,GAGpBC,KAAAA,WAAa,GACbC,KAAAA,qBAGAC,KAAAA,YAAc,MAurJpB,QAAA,OAAA,EAnrJDlC,EAAOjE,UAAUoG,UAAY,SAAoBC,GAAe,OAAA,KAAK7N,SAASiB,KAAK4M,IACnFpC,EAAOjE,UAAUsG,eAAiB,SAAyBD,GAAe,OAAA,KAAKjO,cAAcqB,KAAK4M,IAElGpC,EAAOjE,UAAUuG,OAAS,SAAiB9L,EAAM+L,GAC1C/L,KAAAA,GAAQ+L,EAAE,KAAK/L,KAGtBwJ,EAAOjE,UAAUyE,YAAc,SAAsBgC,GAG9C,IAAA,IAAIhM,KAAQgM,EAAe,CAC1BC,IAAAA,EAAS9D,EAAQnI,GACjB,IAACiM,EAAgB,MAAA,IAAIC,MAAM,WAAalM,EAAO,eACnDiM,EALa,KAKED,EAAchM,MAIjCwJ,EAAOjE,UAAU4G,MAAQ,WACnBC,IAAAA,EAAO,KAAKhM,QAAQ4H,SAAW,KAAKqE,YAEjC,OADFC,KAAAA,YACE,KAAKC,cAAcH,IAG5B,IAAII,EAAKhD,EAAOjE,UAIZkH,EAAU,+CA4Fd,SAASC,IACFC,KAAAA,gBACL,KAAKC,cACL,KAAKC,oBACL,KAAKC,kBACL,KAAKC,aACF,EAjGLP,EAAGzB,gBAAkB,SAASvE,GAGnB,OAAA,CACPpB,EAAe0B,UAAYN,EAC3BA,GAASpB,EAAe4B,KAJb,KAIyBJ,OAAO,GAAG/H,OAC1CkI,IAAAA,EAAQ0F,EAAQzF,KALT,KAKqBJ,MAAMwD,MAAM5D,IACxC,IAACO,EAAgB,OAAA,EACjB,GAA2B,gBAA1BA,EAAM,IAAMA,EAAM,IAA+B,OAAA,EACtDP,GAASO,EAAM,GAAGlI,SAOtB2N,EAAGQ,IAAM,SAAS/D,GACZ,OAAA,KAAKA,OAASA,IACXgE,KAAAA,QACE,IAQXT,EAAGU,aAAe,SAASlN,GAClB,OAAA,KAAKiJ,OAAS5I,EAAML,MAAQ,KAAKkJ,QAAUlJ,IAAS,KAAK+J,aAKlEyC,EAAGW,cAAgB,SAASnN,GACtB,QAAC,KAAKkN,aAAalN,KAClBiN,KAAAA,QACE,IAKTT,EAAGY,iBAAmB,SAASpN,GACxB,KAAKmN,cAAcnN,IAAcqN,KAAAA,cAKxCb,EAAGc,mBAAqB,WACf,OAAA,KAAKrE,OAAS5I,EAAMI,KACzB,KAAKwI,OAAS5I,EAAMQ,QACpBiE,EAAU9F,KAAK,KAAK4H,MAAMwD,MAAM,KAAKM,WAAY,KAAKlE,SAG1DgG,EAAGe,gBAAkB,WACf,GAAA,KAAKD,qBAGA,OAFH,KAAKlN,QAAQiH,qBACRjH,KAAAA,QAAQiH,oBAAoB,KAAKqD,WAAY,KAAKH,gBACpD,GAOXiC,EAAGgB,UAAY,WACR,KAAKR,IAAI3M,EAAMY,OAAU,KAAKsM,mBAA0BF,KAAAA,cAG/Db,EAAGiB,mBAAqB,SAASC,EAASC,GACpC,GAAA,KAAK1E,OAASyE,EAKT,OAJH,KAAKtN,QAAQkH,iBACRlH,KAAAA,QAAQkH,gBAAgB,KAAKmD,aAAc,KAAKD,iBACpDmD,GACIV,KAAAA,QACF,GAOXT,EAAGoB,OAAS,SAAS3E,GACd+D,KAAAA,IAAI/D,IAAS,KAAKoE,cAKzBb,EAAGa,WAAa,SAAS1O,GAClBkP,KAAAA,MAAa,MAAPlP,EAAcA,EAAM,KAAK6H,MAAO,qBAY7CgG,EAAGsB,mBAAqB,SAASC,EAAwBpO,GACnD,GAACoO,EAAD,CACAA,EAAuBnB,eAAiB,GACnCoB,KAAAA,iBAAiBD,EAAuBnB,cAAe,iDAC5DqB,IAAAA,EAAStO,EAAWoO,EAAuBlB,oBAAsBkB,EAAuBjB,kBACxFmB,GAAU,GAAUD,KAAAA,iBAAiBC,EAAQ,2BAGnDzB,EAAG0B,sBAAwB,SAASH,EAAwBI,GACtD,IAACJ,EAAiC,OAAA,EAClCpB,IAAAA,EAAkBoB,EAAuBpB,gBACzCI,EAAcgB,EAAuBhB,YACrC,IAACoB,EAAmBxB,OAAAA,GAAmB,GAAKI,GAAe,EAC3DJ,GAAmB,GACdkB,KAAAA,MAAMlB,EAAiB,2EAC5BI,GAAe,GACViB,KAAAA,iBAAiBjB,EAAa,uCAGzCP,EAAG4B,+BAAiC,WAC9B,KAAKhD,YAAc,KAAKC,UAAY,KAAKD,SAAW,KAAKC,WACpDwC,KAAAA,MAAM,KAAKzC,SAAU,8CAC1B,KAAKC,UACAwC,KAAAA,MAAM,KAAKxC,SAAU,+CAGhCmB,EAAG6B,qBAAuB,SAASC,GAC7BA,MAAc,4BAAdA,EAAKrF,KACE,KAAKoF,qBAAqBC,EAAKC,YACrB,eAAdD,EAAKrF,MAAuC,qBAAdqF,EAAKrF,MAG5C,IAAIuF,EAAOhF,EAAOjE,UASlBiJ,EAAKjC,cAAgB,SAASH,GACxBqC,IAEAC,EAAU,GAEP,IADFtC,EAAKuC,OAAQvC,EAAKuC,KAAO,IACvB,KAAK1F,OAAS5I,EAAMI,KAAK,CAC1BmO,IAAAA,EALO,KAKOC,gBAAe,GAAM,EAAMH,GAC7CtC,EAAKuC,KAAKlG,KAAKmG,GAOV,OALFE,KAAAA,uBAAuB1C,EAAKuC,MAC5B1B,KAAAA,OACD,KAAK7M,QAAQ+G,aAAe,IAC9BiF,EAAKhF,WAAa,KAAKhH,QAAQgH,YAE1B,KAAK2H,WAAW3C,EAAM,YAG/B,IAAI4C,EAAY,CAACC,KAAM,QACnBC,EAAc,CAACD,KAAM,UAEzBT,EAAKW,MAAQ,WACP,GAAA,KAAK/O,QAAQ+G,YAAc,IAAM,KAAK+F,aAAa,OAAiB,OAAA,EACxE9H,EAAe0B,UAAY,KAAKnI,IAC5ByQ,IAAAA,EAAOhK,EAAe4B,KAAK,KAAKJ,OAChCqG,EAAO,KAAKtO,IAAMyQ,EAAK,GAAGvQ,OAAQwQ,EAAS,KAAKzI,MAAM0I,WAAWrC,GACjEoC,GAAW,KAAXA,GAA4B,MAAXA,EAAyB,OAAA,EAC1CvQ,GAAAA,EAAkBuQ,GAAQ,GAAO,CAE5BlQ,IADHR,IAAAA,EAAMsO,EAAO,EACV9N,EAAiB,KAAKyH,MAAM0I,WAAW3Q,IAAM,MAAWA,EAC3D4Q,IAAAA,EAAQ,KAAK3I,MAAMwD,MAAM6C,EAAMtO,GAC/B,IAACX,EAA0BgB,KAAKuQ,GAAiB,OAAA,EAEhD,OAAA,GAMTf,EAAKgB,gBAAkB,WACjB,GAAA,KAAKpP,QAAQ+G,YAAc,IAAM,KAAK+F,aAAa,SAC5C,OAAA,EAEX9H,EAAe0B,UAAY,KAAKnI,IAC5ByQ,IAAAA,EAAOhK,EAAe4B,KAAK,KAAKJ,OAChCqG,EAAO,KAAKtO,IAAMyQ,EAAK,GAAGvQ,OACvB,QAACiG,EAAU9F,KAAK,KAAK4H,MAAMwD,MAAM,KAAKzL,IAAKsO,KACX,aAArC,KAAKrG,MAAMwD,MAAM6C,EAAMA,EAAO,IAC7BA,EAAO,IAAM,KAAKrG,MAAM/H,QAAWM,EAAiB,KAAKyH,MAAM6I,OAAOxC,EAAO,MAUlFuB,EAAKK,eAAiB,SAASa,EAAaC,EAAUjB,GAChDkB,IAAgDX,EAAhDW,EAAY,KAAK3G,KAAMmD,EAAO,KAAKC,YAW/BuD,OATJ,KAAKT,UACPS,EAAYvP,EAAMsD,KAClBsL,EAAO,OAODW,GACHvP,KAAAA,EAAMsC,OAAatC,KAAAA,EAAMyC,UAAkB,OAAA,KAAK+M,4BAA4BzD,EAAMwD,EAAUrQ,SAC5Fc,KAAAA,EAAM0C,UAAkB,OAAA,KAAK+M,uBAAuB1D,GACpD/L,KAAAA,EAAM4C,IAAY,OAAA,KAAK8M,iBAAiB3D,GACxC/L,KAAAA,EAAM+C,KAAa,OAAA,KAAK4M,kBAAkB5D,GAC1C/L,KAAAA,EAAMgD,UAEF,OADFqM,GAAe,KAAKtP,QAAQ+G,aAAe,GAAUkG,KAAAA,aACnD,KAAK4C,uBAAuB7D,GAAM,GACtC/L,KAAAA,EAAM6D,OAEF,OADFwL,GAAoBrC,KAAAA,aAClB,KAAK6C,WAAW9D,GAAM,GAC1B/L,KAAAA,EAAMiD,IAAY,OAAA,KAAK6M,iBAAiB/D,GACxC/L,KAAAA,EAAMkD,QAAgB,OAAA,KAAK6M,qBAAqBhE,GAChD/L,KAAAA,EAAMmD,QAAgB,OAAA,KAAK6M,qBAAqBjE,GAChD/L,KAAAA,EAAMoD,OAAe,OAAA,KAAK6M,oBAAoBlE,GAC9C/L,KAAAA,EAAMqD,KAAa,OAAA,KAAK6M,kBAAkBnE,GAC1C/L,KAAAA,EAAMuD,OAAavD,KAAAA,EAAMsD,KAGrB,OAFPsL,EAAOA,GAAQ,KAAK/F,MACfwG,GAAwB,QAATT,GAAuB5B,KAAAA,aACpC,KAAKmD,kBAAkBpE,EAAM6C,GACjC5O,KAAAA,EAAMwD,OAAe,OAAA,KAAK4M,oBAAoBrE,GAC9C/L,KAAAA,EAAMyD,MAAc,OAAA,KAAK4M,mBAAmBtE,GAC5C/L,KAAAA,EAAMO,OAAe,OAAA,KAAK+P,aAC1BtQ,KAAAA,EAAMY,KAAa,OAAA,KAAK2P,oBAAoBxE,GAC5C/L,KAAAA,EAAM+D,QACN/D,KAAAA,EAAMgE,QAOFuL,OANF,KAAKxP,QAAQqH,8BACXkI,GACI9B,KAAAA,MAAM,KAAKrH,MAAO,0DACtB,KAAKsE,UACD+C,KAAAA,MAAM,KAAKrH,MAAO,oEAEtBoJ,IAAcvP,EAAMgE,QAAU,KAAKwM,YAAYzE,GAAQ,KAAK0E,YAAY1E,EAAMsC,GAOvF,QACM,GAAA,KAAKc,kBAGA,OAFFE,GAAoBrC,KAAAA,aACpBJ,KAAAA,OACE,KAAKgD,uBAAuB7D,GAAM,GAGvC2E,IAAAA,EAAY,KAAK7H,MAAOoF,EAAO,KAAK0C,kBACpCpB,OAAAA,IAAcvP,EAAML,MAAsB,eAAdsO,EAAKrF,MAAyB,KAAK+D,IAAI3M,EAAMa,OAClE,KAAK+P,sBAAsB7E,EAAM2E,EAAWzC,GACzC,KAAK4C,yBAAyB9E,EAAMkC,KAItDE,EAAKqB,4BAA8B,SAASzD,EAAM7M,GAC5CkP,IAEA0C,EAAsB,UAAZ5R,EACT0N,KAAAA,OACD,KAAKD,IAAI3M,EAAMY,OAAS,KAAKsM,kBAAqBnB,EAAK/M,MAAQ,KAC1D,KAAK4J,OAAS5I,EAAML,KAAaqN,KAAAA,cAExCjB,EAAK/M,MAAQ,KAAK+R,aACb5D,KAAAA,aAMA5O,IADHA,IAAAA,EAAI,EACDA,EAAI,KAAK0M,OAAOzM,SAAUD,EAAG,CAC9ByS,IAAAA,EAfO,KAeM/F,OAAO1M,GACpBwN,GAAc,MAAdA,EAAK/M,OAAiBgS,EAAIrR,OAASoM,EAAK/M,MAAMW,KAAM,CAClDqR,GAAY,MAAZA,EAAIpC,OAAiBkC,GAAwB,SAAbE,EAAIpC,MAAoB,MACxD7C,GAAAA,EAAK/M,OAAS8R,EAAW,OAI1B,OADHvS,IAAM,KAAK0M,OAAOzM,QAAegP,KAAAA,MAAMzB,EAAK5F,MAAO,eAAiBjH,GACjE,KAAKwP,WAAW3C,EAAM+E,EAAU,iBAAmB,sBAG5D3C,EAAKsB,uBAAyB,SAAS1D,GAG9B,OAFFa,KAAAA,OACAO,KAAAA,YACE,KAAKuB,WAAW3C,EAAM,sBAG/BoC,EAAKuB,iBAAmB,SAAS3D,GAWxB,OAVFa,KAAAA,OACA3B,KAAAA,OAAO7C,KAAKuG,GACjB5C,EAAKuC,KAAO,KAAKE,gBAAe,GAC3BvD,KAAAA,OAAOgG,MACP1D,KAAAA,OAAOvN,EAAMwD,QAClBuI,EAAKpN,KAAO,KAAKuS,uBACb,KAAKnR,QAAQ+G,aAAe,EACvB6F,KAAAA,IAAI3M,EAAMY,MAEVuM,KAAAA,YACF,KAAKuB,WAAW3C,EAAM,qBAW/BoC,EAAKwB,kBAAoB,SAAS5D,GAC3Ba,KAAAA,OACDuE,IAAAA,EAAW,KAAKpR,QAAQ+G,aAAe,IAAM,KAAKgE,UAAa,KAAKF,YAAc,KAAK7K,QAAQsH,4BAA+B,KAAKyF,cAAc,SAAY,KAAK1C,cAAgB,EAIlL,GAHCa,KAAAA,OAAO7C,KAAKuG,GACZyC,KAAAA,oBACA7D,KAAAA,OAAOvN,EAAMS,QACd,KAAKmI,OAAS5I,EAAMY,KAEf,OADHuQ,GAAW,GAAUnE,KAAAA,WAAWmE,GAC7B,KAAKE,SAAStF,EAAM,MAEzB+C,IAAAA,EAAQ,KAAKA,QACb,GAAA,KAAKlG,OAAS5I,EAAMsD,MAAQ,KAAKsF,OAAS5I,EAAMuD,QAAUuL,EAAO,CAC/DwC,IAAAA,EAAS,KAAKtF,YAAa4C,EAAOE,EAAQ,MAAQ,KAAKjG,MAIvD,OAHC+D,KAAAA,OACA2E,KAAAA,SAASD,GAAQ,EAAM1C,GACvBF,KAAAA,WAAW4C,EAAQ,yBACnB,KAAK1I,OAAS5I,EAAMoE,KAAQ,KAAKrE,QAAQ+G,aAAe,GAAK,KAAK+F,aAAa,QAA0C,IAA/ByE,EAAOE,aAAahT,QACpG,QAAToQ,GAAkB0C,EAAOE,aAAa,GAAGC,MAQ3CN,GAAW,GAAUnE,KAAAA,WAAWmE,GAC7B,KAAKE,SAAStF,EAAMuF,KARrB,KAAKvR,QAAQ+G,aAAe,IAC1B,KAAK8B,OAAS5I,EAAMoE,IAClB+M,GAAW,GAAUnE,KAAAA,WAAWmE,GAC7BpF,EAAK2F,MAAQP,GAAW,GAE5B,KAAKQ,WAAW5F,EAAMuF,IAK7B5D,IAAAA,EAAyB,IAAIrB,EAC7BoF,EAAO,KAAKd,iBAAgB,EAAMjD,GAClC,OAAA,KAAK9E,OAAS5I,EAAMoE,KAAQ,KAAKrE,QAAQ+G,aAAe,GAAK,KAAK+F,aAAa,OAC7E,KAAK9M,QAAQ+G,aAAe,IAC1B,KAAK8B,OAAS5I,EAAMoE,IAClB+M,GAAW,GAAUnE,KAAAA,WAAWmE,GAC7BpF,EAAK2F,MAAQP,GAAW,GAE9BS,KAAAA,aAAaH,GAAM,EAAO/D,GAC1BmE,KAAAA,UAAUJ,GACR,KAAKE,WAAW5F,EAAM0F,KAExB5D,KAAAA,sBAAsBH,GAAwB,GAEjDyD,GAAW,GAAUnE,KAAAA,WAAWmE,GAC7B,KAAKE,SAAStF,EAAM0F,KAG7BtD,EAAKyB,uBAAyB,SAAS7D,EAAM+F,GAEpC,OADFlF,KAAAA,OACE,KAAKmF,cAAchG,GAAM,GAAM,EAAO+F,IAG/C3D,EAAK2B,iBAAmB,SAAS/D,GAMxB,OALFa,KAAAA,OACLb,EAAKpN,KAAO,KAAKuS,uBAEjBnF,EAAKiG,WAAa,KAAKxD,gBAAgB,KAAKjR,QAAU,KAAKqL,OAAS5I,EAAMgD,WAC1E+I,EAAKkG,UAAY,KAAKtF,IAAI3M,EAAM6C,OAAS,KAAK2L,gBAAgB,KAAKjR,QAAU,KAAKqL,OAAS5I,EAAMgD,WAAa,KACvG,KAAK0L,WAAW3C,EAAM,gBAG/BoC,EAAK4B,qBAAuB,SAAShE,GAW5B,OAVF,KAAKnB,YAAe,KAAK7K,QAAQoH,4BAC7BqG,KAAAA,MAAM,KAAKrH,MAAO,gCACtByG,KAAAA,OAMD,KAAKD,IAAI3M,EAAMY,OAAS,KAAKsM,kBAAqBnB,EAAKmG,SAAW,MAC/DnG,EAAKmG,SAAW,KAAKvB,kBAAwBxD,KAAAA,aAC7C,KAAKuB,WAAW3C,EAAM,oBAG/BoC,EAAK6B,qBAAuB,SAASjE,GAC/BqC,IAaA5H,EAXCoG,KAAAA,OACLb,EAAKoG,aAAe,KAAKjB,uBACzBnF,EAAKqG,MAAQ,GACR7E,KAAAA,OAAOvN,EAAMO,QACb0K,KAAAA,OAAO7C,KAAKyG,GACZuC,KAAAA,oBAOA,IAAA,IAAIiB,GAAa,EAAO,KAAKzJ,OAAS5I,EAAMQ,QAC3C4N,GAfO,KAeAxF,OAAS5I,EAAMuC,OAff,KAe+BqG,OAAS5I,EAAM2C,SAAU,CAC7D2P,IAAAA,EAhBK,KAgBW1J,OAAS5I,EAAMuC,MAC/BiE,GAjBK,KAiBSkI,WAAWlI,EAAK,cAClCuF,EAAKqG,MAAMhK,KAAK5B,EAlBP,KAkBoBwF,aAC7BxF,EAAIwL,WAAa,GAnBR,KAoBFpF,OACH0F,EACF9L,EAAI7H,KAtBG,KAsBWgS,mBAEd0B,GAxBG,KAwBkB1E,iBAxBlB,KAwB0CvD,aAAc,4BAC/DiI,GAAa,EACb7L,EAAI7H,KAAO,MA1BJ,KA4BF4O,OAAOvN,EAAMa,YAEf2F,GA9BI,KA8BUwG,aACnBxG,EAAIwL,WAAW5J,KA/BN,KA+BkBoG,gBAAe,IAOvC,OAJF+D,KAAAA,mBACD/L,GAAYkI,KAAAA,WAAWlI,EAAK,cAC3BoG,KAAAA,OACA3B,KAAAA,OAAOgG,MACL,KAAKvC,WAAW3C,EAAM,oBAG/BoC,EAAK8B,oBAAsB,SAASlE,GAM3B,OALFa,KAAAA,OACDnI,EAAU9F,KAAK,KAAK4H,MAAMwD,MAAM,KAAKM,WAAY,KAAKlE,SACjDqH,KAAAA,MAAM,KAAKnD,WAAY,+BAChC0B,EAAKmG,SAAW,KAAKvB,kBAChBxD,KAAAA,YACE,KAAKuB,WAAW3C,EAAM,mBAK/B,IAAIyG,EAAQ,GAEZrE,EAAK+B,kBAAoB,SAASnE,GAI5B,GAHCa,KAAAA,OACLb,EAAKxD,MAAQ,KAAK+H,aAClBvE,EAAK0G,QAAU,KACX,KAAK7J,OAAS5I,EAAMwC,OAAQ,CAC1BkQ,IAAAA,EAAS,KAAK1G,YACbY,KAAAA,OACD,KAAKD,IAAI3M,EAAMS,SACjBiS,EAAOC,MAAQ,KAAKC,mBACfxB,KAAAA,oBACAS,KAAAA,UAAUa,EAAOC,MAAO,OACxBpF,KAAAA,OAAOvN,EAAMU,UAEd,KAAKX,QAAQ+G,YAAc,IAAWkG,KAAAA,aAC1C0F,EAAOC,MAAQ,KACVvB,KAAAA,qBAEPsB,EAAOpE,KAAO,KAAKgC,YAAW,GACzBiC,KAAAA,mBACLxG,EAAK0G,QAAU,KAAK/D,WAAWgE,EAAQ,eAKlC,OAHP3G,EAAK8G,UAAY,KAAKlG,IAAI3M,EAAM8C,UAAY,KAAKwN,aAAe,KAC3DvE,EAAK0G,SAAY1G,EAAK8G,WAClBrF,KAAAA,MAAMzB,EAAK5F,MAAO,mCACpB,KAAKuI,WAAW3C,EAAM,iBAG/BoC,EAAKgC,kBAAoB,SAASpE,EAAM6C,GAI/B,OAHFhC,KAAAA,OACA2E,KAAAA,SAASxF,GAAM,EAAO6C,GACtBzB,KAAAA,YACE,KAAKuB,WAAW3C,EAAM,wBAG/BoC,EAAKiC,oBAAsB,SAASrE,GAM3B,OALFa,KAAAA,OACLb,EAAKpN,KAAO,KAAKuS,uBACZjG,KAAAA,OAAO7C,KAAKuG,GACjB5C,EAAKuC,KAAO,KAAKE,gBAAe,GAC3BvD,KAAAA,OAAOgG,MACL,KAAKvC,WAAW3C,EAAM,mBAG/BoC,EAAKkC,mBAAqB,SAAStE,GAK1B,OAJH,KAAKxO,QAAeiQ,KAAAA,MAAM,KAAKrH,MAAO,yBACrCyG,KAAAA,OACLb,EAAK+G,OAAS,KAAK5B,uBACnBnF,EAAKuC,KAAO,KAAKE,gBAAe,GACzB,KAAKE,WAAW3C,EAAM,kBAG/BoC,EAAKoC,oBAAsB,SAASxE,GAE3B,OADFa,KAAAA,OACE,KAAK8B,WAAW3C,EAAM,mBAG/BoC,EAAKyC,sBAAwB,SAAS7E,EAAM2E,EAAWzC,GAGhD,IAFDG,IAEK2E,EAAM,EAAGC,EAFL,KAEmB/H,OAAQ8H,EAAMC,EAAKxU,OAAQuU,GAAO,EAChE,CACYC,EAAKD,GAEPpT,OAAS+Q,GANR,KAOAlD,MAAMS,EAAK9H,MAAO,UAAYuK,EAAY,yBAGlD,IADD9B,IAAAA,EAAO,KAAKhG,KAAKvJ,OAAS,OAAS,KAAKuJ,OAAS5I,EAAMmD,QAAU,SAAW,KACvE5E,EAAI,KAAK0M,OAAOzM,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAC5C0U,IAAAA,EAXO,KAWUhI,OAAO1M,GACxB0U,GAAAA,EAAQC,iBAAmBnH,EAAK5F,MAI3B,MAFP8M,EAAQC,eAdC,KAcuB/M,MAChC8M,EAAQrE,KAAOA,EAWZ,OARF3D,KAAAA,OAAO7C,KAAK,CAACzI,KAAM+Q,EAAW9B,KAAMA,EAAMsE,eAAgB,KAAK/M,QACpE4F,EAAKuC,KAAO,KAAKE,gBAAe,IACT,qBAAnBzC,EAAKuC,KAAK1F,MACS,wBAAnBmD,EAAKuC,KAAK1F,MAAqD,QAAnBmD,EAAKuC,KAAKM,MACnC,wBAAnB7C,EAAKuC,KAAK1F,OAAmC,KAAKrL,QAAUwO,EAAKuC,KAAK6E,WAAapH,EAAKuC,KAAK8E,SACxFzF,KAAAA,iBAAiB5B,EAAKuC,KAAKnI,MAAO,+BACtC8E,KAAAA,OAAOgG,MACZlF,EAAK/M,MAAQiP,EACN,KAAKS,WAAW3C,EAAM,qBAG/BoC,EAAK0C,yBAA2B,SAAS9E,EAAMkC,GAGtC,OAFPlC,EAAKmC,WAAaD,EACbd,KAAAA,YACE,KAAKuB,WAAW3C,EAAM,wBAO/BoC,EAAKmC,WAAa,SAAS+C,QAEM,IAA1BA,IAAmCA,GAAwB,GAE5DtH,IAAAA,EAAO,KAAKC,YAMT,IALPD,EAAKuC,KAAO,GACPf,KAAAA,OAAOvN,EAAMO,QACd8S,GACGjC,KAAAA,qBAEC,KAAKzE,IAAI3M,EAAMQ,SAAS,CAC1B+N,IAAAA,EAVO,KAUOC,gBAAe,GACjCzC,EAAKuC,KAAKlG,KAAKmG,GAKV,OAHH8E,GACGd,KAAAA,mBAEA,KAAK7D,WAAW3C,EAAM,mBAO/BoC,EAAKkD,SAAW,SAAStF,EAAM0F,GAUtB,OATP1F,EAAK0F,KAAOA,EACPlE,KAAAA,OAAOvN,EAAMY,MAClBmL,EAAKpN,KAAO,KAAKiK,OAAS5I,EAAMY,KAAO,KAAO,KAAK+P,kBAC9CpD,KAAAA,OAAOvN,EAAMY,MAClBmL,EAAKuH,OAAS,KAAK1K,OAAS5I,EAAMU,OAAS,KAAO,KAAKiQ,kBAClDpD,KAAAA,OAAOvN,EAAMU,QACb6R,KAAAA,mBACLxG,EAAKuC,KAAO,KAAKE,gBAAe,GAC3BvD,KAAAA,OAAOgG,MACL,KAAKvC,WAAW3C,EAAM,iBAM/BoC,EAAKwD,WAAa,SAAS5F,EAAM0F,GAC3B7I,IAAAA,EAAO,KAAKA,OAAS5I,EAAMoE,IAAM,iBAAmB,iBAcjD,OAbFwI,KAAAA,OACQ,mBAAThE,IACgB,sBAAd6I,EAAK7I,MACQ,wBAAd6I,EAAK7I,MAA+D,MAA7B6I,EAAKD,aAAa,GAAGC,OAC3D,KAAKlU,QAA2C,eAAjCkU,EAAKD,aAAa,GAAG+B,GAAG3K,QAClC4E,KAAAA,MAAMiE,EAAKtL,MAAO,0CAE7B4F,EAAKyH,KAAO/B,EACZ1F,EAAK0H,MAAiB,mBAAT7K,EAA4B,KAAK+H,kBAAoB,KAAK+C,mBAClEnG,KAAAA,OAAOvN,EAAMU,QACb6R,KAAAA,mBACLxG,EAAKuC,KAAO,KAAKE,gBAAe,GAC3BvD,KAAAA,OAAOgG,MACL,KAAKvC,WAAW3C,EAAMnD,IAK/BuF,EAAKoD,SAAW,SAASxF,EAAM4H,EAAO/E,GAK3B,IAFT7C,EAAKyF,aAAe,GACpBzF,EAAK6C,KAAOA,IACH,CACHgF,IAAAA,EALO,KAKO5H,YAYd,GAjBO,KAMJ6H,WAAWD,EAAMhF,GANb,KAOAjC,IAAI3M,EAAMsB,IACnBsS,EAAKnC,KARI,KAQUiC,iBAAiBC,GAClB,UAAT/E,GATA,KAS6BhG,OAAS5I,EAAMoE,KAT5C,KAS2DrE,QAAQ+G,aAAe,GATlF,KAS8F+F,aAAa,MAE1F,eAAjB+G,EAAKL,GAAG3K,MAA2B+K,IAXnC,KAWoD/K,OAAS5I,EAAMoE,KAXnE,KAWiFyI,aAAa,OAGvG+G,EAAKnC,KAAO,KAdH,KAYFjE,MAZE,KAYWnD,WAAY,4DAZvB,KAUF2C,aAMTjB,EAAKyF,aAAapJ,KAhBP,KAgBmBsG,WAAWkF,EAAM,wBAhBpC,KAiBCjH,IAAI3M,EAAMW,OAAU,MAE3BoL,OAAAA,GAGToC,EAAK0F,WAAa,SAASD,EAAMhF,GAC/BgF,EAAKL,GAAK,KAAKX,iBAAiBhE,GAC3BiD,KAAAA,UAAU+B,EAAKL,GAAI3E,GAAM,IAMhCT,EAAK4D,cAAgB,SAAShG,EAAM+H,EAAaC,EAAqBjC,GAC/DkC,KAAAA,aAAajI,IACd,KAAKhM,QAAQ+G,aAAe,GAAK,KAAK/G,QAAQ+G,aAAe,IAAMgL,KACnE/F,EAAKoH,UAAY,KAAKxG,IAAI3M,EAAMmC,OAChC,KAAKpC,QAAQ+G,aAAe,IAC5BiF,EAAKqH,QAAUtB,GAEfgC,IACF/H,EAAKwH,GAAqB,eAAhBO,GAAgC,KAAKlL,OAAS5I,EAAML,KAAO,KAAO,KAAKoR,aAC7EhF,EAAKwH,IACF1B,KAAAA,UAAU9F,EAAKwH,GAAI,KAAK9I,WAAa,KAAKG,WAAa,MAAQ,QAIpEqJ,IAAAA,EAAW,KAAKpJ,YAAaqJ,EAAa,KAAKpJ,QAC/CqJ,EAAc,KAAKpJ,SAAUqJ,EAAc,KAAKpJ,SAAUqJ,EAAY,KAAKzJ,WAmBxE,OAlBFC,KAAAA,YAAckB,EAAKoH,UACnBrI,KAAAA,QAAUiB,EAAKqH,MACfrI,KAAAA,SAAW,EACXC,KAAAA,SAAW,EACXJ,KAAAA,YAAa,EACbQ,KAAAA,qBAEA0I,IACD/H,EAAKwH,GAAK,KAAK3K,OAAS5I,EAAML,KAAO,KAAKoR,aAAe,MAExDuD,KAAAA,oBAAoBvI,GACpBwI,KAAAA,kBAAkBxI,EAAMgI,GAExBlJ,KAAAA,YAAcoJ,EACdnJ,KAAAA,QAAUoJ,EACVnJ,KAAAA,SAAWoJ,EACXnJ,KAAAA,SAAWoJ,EACXxJ,KAAAA,WAAayJ,EACX,KAAK3F,WAAW3C,EAAM+H,EAAc,sBAAwB,uBAGrE3F,EAAKmG,oBAAsB,SAASvI,GAC7BwB,KAAAA,OAAOvN,EAAMS,QAClBsL,EAAKyI,OAAS,KAAKC,iBAAiBzU,EAAMU,QAAQ,EAAO,KAAKX,QAAQ+G,aAAe,GAChFiH,KAAAA,kCAMPI,EAAK0B,WAAa,SAAS9D,EAAM+H,GAG1BlH,KAAAA,OAEA8H,KAAAA,aAAa3I,EAAM+H,GACnBa,KAAAA,gBAAgB5I,GACjB6I,IAAAA,EAAY,KAAK5I,YACjB6I,GAAiB,EAGd,IAFPD,EAAUtG,KAAO,GACZf,KAAAA,OAAOvN,EAAMO,SACV,KAAKoM,IAAI3M,EAAMQ,SAAS,CAC1BsU,IAAAA,EAXO,KAWSC,iBAAiBH,GACjCE,GAA0B,qBAAhBA,EAAOlM,MAA+C,gBAAhBkM,EAAOlG,OACrDiG,GAbK,KAaoBrH,MAAMsH,EAAO3O,MAAO,2CACjD0O,GAAiB,GAId,OADP9I,EAAKuC,KAAO,KAAKI,WAAWkG,EAAW,aAChC,KAAKlG,WAAW3C,EAAM+H,EAAc,mBAAqB,oBAGlE3F,EAAK4G,iBAAmB,SAASH,GAC3BxG,IAAAA,EAAS,KAET,GAAA,KAAKzB,IAAI3M,EAAMY,MAAgB,OAAA,KAE/BoU,IAAAA,EAAS,KAAKhJ,YACdiJ,EAAgB,SAAUC,EAAGC,QACV,IAAhBA,IAAyBA,GAAc,GAExChP,IAAAA,EAAQiI,EAAOjI,MAAOsC,EAAW2F,EAAO3F,SACxC,QAAC2F,EAAOtB,cAAcoI,OACtB9G,EAAOxF,OAAS5I,EAAMS,QAAY0U,GAAgB/G,EAAOnB,wBACzD+H,EAAOI,KAAOhH,EAAOpB,aACzBgI,EAAOK,UAAW,EAClBL,EAAOI,IAAMhH,EAAOkH,YAAYnP,EAAOsC,GACvCuM,EAAOI,IAAIzV,KAAOuV,EAClB9G,EAAOM,WAAWsG,EAAOI,IAAK,eACvB,KAGTJ,EAAOpG,KAAO,SACdoG,EAAOO,OAASN,EAAc,UAC1BO,IAAAA,EAAc,KAAK7I,IAAI3M,EAAMmC,MAC7B2P,GAAU,EACT0D,IACC,KAAKzV,QAAQ+G,aAAe,GAAKmO,EAAc,SAAS,IAC1DnD,GAAU,EACV0D,EAAc,KAAKzV,QAAQ+G,aAAe,GAAK,KAAK6F,IAAI3M,EAAMmC,OACrD8S,EAAc,OACvBD,EAAOpG,KAAO,MACLqG,EAAc,SACvBD,EAAOpG,KAAO,QAGboG,EAAOI,KAAYK,KAAAA,kBAAkBT,GACtCI,IAAAA,EAAMJ,EAAOI,IAiBVJ,OAhBFA,EAAOK,UAAaL,EAAOO,UAAwB,eAAbH,EAAIxM,MAAsC,gBAAbwM,EAAIzV,MAC3D,YAAbyV,EAAIxM,MAAoC,gBAAdwM,EAAIvM,OAKvBmM,EAAOO,QAAuB,eAAbH,EAAIxM,MAAsC,cAAbwM,EAAIzV,MACtD6N,KAAAA,MAAM4H,EAAIjP,MAAO,2DALF,WAAhB6O,EAAOpG,MAA0BpB,KAAAA,MAAM4H,EAAIjP,MAAO,2CAClDqP,GAAoBhI,KAAAA,MAAM4H,EAAIjP,MAAO,oCACrC2L,GAAgBtE,KAAAA,MAAM4H,EAAIjP,MAAO,wCACrC6O,EAAOpG,KAAO,eAIX8G,KAAAA,iBAAiBd,EAAWI,EAAQQ,EAAa1D,GAClC,QAAhBkD,EAAOpG,MAAiD,IAA/BoG,EAAOnM,MAAM2L,OAAOhW,QACxCmP,KAAAA,iBAAiBqH,EAAOnM,MAAM1C,MAAO,gCAC1B,QAAhB6O,EAAOpG,MAAiD,IAA/BoG,EAAOnM,MAAM2L,OAAOhW,QACxCmP,KAAAA,iBAAiBqH,EAAOnM,MAAM1C,MAAO,wCAC1B,QAAhB6O,EAAOpG,MAAkD,gBAAhCoG,EAAOnM,MAAM2L,OAAO,GAAG5L,MAC3C+E,KAAAA,iBAAiBqH,EAAOnM,MAAM2L,OAAO,GAAGrO,MAAO,iCACjD6O,GAGT7G,EAAKuH,iBAAmB,SAASd,EAAWI,EAAQQ,EAAa1D,GAC/DkD,EAAOnM,MAAQ,KAAK8M,YAAYH,EAAa1D,GAC7C8C,EAAUtG,KAAKlG,KAAK,KAAKsG,WAAWsG,EAAQ,sBAG9C7G,EAAKuG,aAAe,SAAS3I,EAAM+H,GACjC/H,EAAKwH,GAAK,KAAK3K,OAAS5I,EAAML,KAAO,KAAKoR,cAA+B,IAAhB+C,EAAuB,KAAK9G,aAAe,MAGtGmB,EAAKwG,gBAAkB,SAAS5I,GAC9BA,EAAK6J,WAAa,KAAKjJ,IAAI3M,EAAM8D,UAAY,KAAK+R,sBAAwB,MAK5E1H,EAAKsC,YAAc,SAAS1E,EAAMsC,GAK5B,GAFCzB,KAAAA,OAED,KAAKD,IAAI3M,EAAMmC,MAKV,OAJF4K,KAAAA,iBAAiB,QAClB,KAAKnE,OAAS5I,EAAMG,QAAe6M,KAAAA,aACvCjB,EAAKpH,OAAS,KAAKmR,gBACd3I,KAAAA,YACE,KAAKuB,WAAW3C,EAAM,wBAE3B,GAAA,KAAKY,IAAI3M,EAAM2C,UAAW,CAExBmP,IAAAA,EACA,GAFCiE,KAAAA,YAAY1H,EAAS,UAAW,KAAKjE,cAEtC,KAAKxB,OAAS5I,EAAMgD,YAAc8O,EAAU,KAAK3C,mBAAoB,CACnE6G,IAAAA,EAAQ,KAAKhK,YACZY,KAAAA,OACDkF,GAAgBlF,KAAAA,OACpBb,EAAKsD,YAAc,KAAK0C,cAAciE,EAAO,cAAc,EAAOlE,QAC7D,GAAI,KAAKlJ,OAAS5I,EAAM6D,OAAQ,CACjCoS,IAAAA,EAAQ,KAAKjK,YACjBD,EAAKsD,YAAc,KAAKQ,WAAWoG,EAAO,mBAE1ClK,EAAKsD,YAAc,KAAKqE,mBACnBvG,KAAAA,YAEA,OAAA,KAAKuB,WAAW3C,EAAM,4BAG3B,GAAA,KAAKmK,6BACPnK,EAAKsD,YAAc,KAAKb,gBAAe,GACT,wBAA1BzC,EAAKsD,YAAYzG,KACZuN,KAAAA,oBAAoB9H,EAAStC,EAAKsD,YAAYmC,cAE9CuE,KAAAA,YAAY1H,EAAStC,EAAKsD,YAAYkE,GAAG5T,KAAMoM,EAAKsD,YAAYkE,GAAGpN,OAC5E4F,EAAKqK,WAAa,GAClBrK,EAAKpH,OAAS,SACT,CAGD,GAFJoH,EAAKsD,YAAc,KACnBtD,EAAKqK,WAAa,KAAKC,sBAAsBhI,GACzC,KAAKvB,cAAc,QACjB,KAAKlE,OAAS5I,EAAMG,QAAe6M,KAAAA,aACvCjB,EAAKpH,OAAS,KAAKmR,oBACd,CAEA,IAAA,IAAIvX,EAAI,EAAGyU,EAAOjH,EAAKqK,WAAY7X,EAAIyU,EAAKxU,OAAQD,GAAK,EAAG,CAC3D+X,IAAAA,EAAOtD,EAAKzU,GA9CT,KAgDAgY,gBAAgBD,EAAKE,OAG9BzK,EAAKpH,OAAS,KAEXwI,KAAAA,YAEA,OAAA,KAAKuB,WAAW3C,EAAM,2BAG/BoC,EAAK4H,YAAc,SAAS1H,EAAS1O,EAAMrB,GACpC+P,IACDhJ,EAAIgJ,EAAS1O,IACRgO,KAAAA,iBAAiBrP,EAAK,qBAAuBqB,EAAO,KAC7D0O,EAAQ1O,IAAQ,IAGlBwO,EAAKsI,mBAAqB,SAASpI,EAASqI,GACtCtI,IAEAxF,EAAO8N,EAAI9N,KACXA,GAAS,eAATA,EACKmN,KAAAA,YAAY1H,EAASqI,EAAI/W,KAAM+W,EAAIvQ,YACvC,GAAa,kBAATyC,EACA,IAAA,IAAIrK,EAAI,EAAGyU,EAAO0D,EAAIC,WAAYpY,EAAIyU,EAAKxU,OAAQD,GAAK,EAC7D,CACMqY,IAAAA,EAAO5D,EAAKzU,GART,KAUAkY,mBAAmBpI,EAASuI,QAEpC,GAAa,iBAAThO,EACA,IAAA,IAAImK,EAAM,EAAG8D,EAASH,EAAII,SAAU/D,EAAM8D,EAAOrY,OAAQuU,GAAO,EAAG,CACpEgE,IAAAA,EAAMF,EAAO9D,GAEXgE,GAhBG,KAgBWN,mBAAmBpI,EAAS0I,OAElC,aAATnO,EACA6N,KAAAA,mBAAmBpI,EAASqI,EAAI7N,OACvB,sBAATD,EACA6N,KAAAA,mBAAmBpI,EAASqI,EAAIlD,MACvB,gBAAT5K,EACA6N,KAAAA,mBAAmBpI,EAASqI,EAAIxE,UACvB,4BAATtJ,GACA6N,KAAAA,mBAAmBpI,EAASqI,EAAIxI,aAG3CC,EAAKgI,oBAAsB,SAAS9H,EAAS2I,GAGvC,GAAC3I,EACA,IAAA,IAAI9P,EAAI,EAAGyU,EAAOgE,EAAOzY,EAAIyU,EAAKxU,OAAQD,GAAK,EAClD,CACIqV,IAAAA,EAAOZ,EAAKzU,GALL,KAOJkY,mBAAmBpI,EAASuF,EAAKL,MAI5CpF,EAAK+H,2BAA6B,WACzB,MAAsB,QAAtB,KAAKtN,KAAK1J,SACO,UAAtB,KAAK0J,KAAK1J,SACY,UAAtB,KAAK0J,KAAK1J,SACY,aAAtB,KAAK0J,KAAK1J,SACV,KAAK4P,SACL,KAAKK,mBAKThB,EAAKkI,sBAAwB,SAAShI,GAChCD,IAEA6I,EAAQ,GAAIC,GAAQ,EAGjB,IADF3J,KAAAA,OAAOvN,EAAMO,SACV,KAAKoM,IAAI3M,EAAMQ,SAAS,CAC1B,GAAC0W,EAGIA,GAAQ,OADX9I,GARK,KAOFb,OAAOvN,EAAMW,OAPX,KAQEyM,mBAAmBpN,EAAMQ,QAAW,MAG7CuL,IAAAA,EAXO,KAWOC,YAClBD,EAAKyK,MAZM,KAYSzF,YAAW,GAC/BhF,EAAKoL,SAbM,KAaYrK,cAAc,MAb1B,KAayCiE,YAAW,GAAQhF,EAAKyK,MAbjE,KAcJT,YAAY1H,EAAStC,EAAKoL,SAASxX,KAAMoM,EAAKoL,SAAShR,OAC9D8Q,EAAM7O,KAfK,KAeOsG,WAAW3C,EAAM,oBAE9BkL,OAAAA,GAKT9I,EAAKqC,YAAc,SAASzE,GAYnB,OAXFa,KAAAA,OAED,KAAKhE,OAAS5I,EAAMG,QACtB4L,EAAKqK,WAAa5D,EAClBzG,EAAKpH,OAAS,KAAKmR,kBAEnB/J,EAAKqK,WAAa,KAAKgB,wBAClBrK,KAAAA,iBAAiB,QACtBhB,EAAKpH,OAAS,KAAKiE,OAAS5I,EAAMG,OAAS,KAAK2V,gBAAkB,KAAK9I,cAEpEG,KAAAA,YACE,KAAKuB,WAAW3C,EAAM,sBAK/BoC,EAAKiJ,sBAAwB,WACvBhJ,IAEA6I,EAAQ,GAAIC,GAAQ,EACpB,GAAA,KAAKtO,OAAS5I,EAAML,KAAM,CAExBoM,IAAAA,EAAO,KAAKC,YAIZ,GAHJD,EAAKyK,MAAQ,KAAKzF,aACbc,KAAAA,UAAU9F,EAAKyK,MAAO,OAC3BS,EAAM7O,KAAK,KAAKsG,WAAW3C,EAAM,4BAC5B,KAAKY,IAAI3M,EAAMW,OAAiBsW,OAAAA,EAEnC,GAAA,KAAKrO,OAAS5I,EAAMmC,KAAM,CACxBkV,IAAAA,EAAS,KAAKrL,YAMXiL,OALFrK,KAAAA,OACAG,KAAAA,iBAAiB,MACtBsK,EAAOb,MAAQ,KAAKzF,aACfc,KAAAA,UAAUwF,EAAOb,MAAO,OAC7BS,EAAM7O,KAAK,KAAKsG,WAAW2I,EAAQ,6BAC5BJ,EAGF,IADF1J,KAAAA,OAAOvN,EAAMO,SACV,KAAKoM,IAAI3M,EAAMQ,SAAS,CAC1B,GAAC0W,EAGIA,GAAQ,OADX9I,GAxBK,KAuBFb,OAAOvN,EAAMW,OAvBX,KAwBEyM,mBAAmBpN,EAAMQ,QAAW,MAG7C8W,IAAAA,EA3BO,KA2BStL,YACpBsL,EAAOC,SA5BI,KA4BcxG,YAAW,GA5BzB,KA6BAjE,cAAc,MACvBwK,EAAOd,MA9BE,KA8BazF,cA9Bb,KAgCFwF,gBAAgBe,EAAOC,UAC9BD,EAAOd,MAAQc,EAAOC,UAjCb,KAmCJ1F,UAAUyF,EAAOd,MAAO,OAC/BS,EAAM7O,KApCK,KAoCOsG,WAAW4I,EAAQ,oBAEhCL,OAAAA,GAIT9I,EAAKM,uBAAyB,SAAS+I,GAChC,IAAA,IAAIjZ,EAAI,EAAGA,EAAIiZ,EAAWhZ,QAAU,KAAKiZ,qBAAqBD,EAAWjZ,MAAOA,EACnFiZ,EAAWjZ,GAAGmZ,UAAYF,EAAWjZ,GAAG2P,WAAWyJ,IAAI5N,MAAM,GAAI,IAGrEoE,EAAKsJ,qBAAuB,SAASG,GAEjCA,MAAmB,wBAAnBA,EAAUhP,MACoB,YAA9BgP,EAAU1J,WAAWtF,MACiB,iBAA/BgP,EAAU1J,WAAWrF,QAEK,MAA3BtC,KAAAA,MAAMqR,EAAUzR,QAAmD,MAAhC,KAAKI,MAAMqR,EAAUzR,SAIlE,IAAI0R,EAAO1O,EAAOjE,UAKlB2S,EAAKjG,aAAe,SAAS7F,EAAM+L,EAAWpK,GAGxC,GAAA,KAAK3N,QAAQ+G,aAAe,GAAKiF,EAC3BA,OAAAA,EAAKnD,MACR,IAAA,aACC,KAAKkC,SAAyB,UAAdiB,EAAKpM,MAChB6N,KAAAA,MAAMzB,EAAK5F,MAAO,8DAC3B,MAEG,IAAA,gBACA,IAAA,eACA,IAAA,cACH,MAEG,IAAA,mBACH4F,EAAKnD,KAAO,gBACR8E,GAA+BD,KAAAA,mBAAmBC,GAAwB,GACzE,IAAA,IAAInP,EAAI,EAAGyU,EAAOjH,EAAK4K,WAAYpY,EAAIyU,EAAKxU,OAAQD,GAAK,EAAG,CAC3DqY,IAAAA,EAAO5D,EAAKzU,GAlBT,KAoBFqT,aAAagF,EAAMkB,GAOR,gBAAdlB,EAAKhO,MACmB,iBAAvBgO,EAAK1E,SAAStJ,MAAkD,kBAAvBgO,EAAK1E,SAAStJ,MA5BnD,KA8BE4E,MAAMoJ,EAAK1E,SAAS/L,MAAO,oBAGtC,MAEG,IAAA,WAEe,SAAd4F,EAAK6C,MAAwBpB,KAAAA,MAAMzB,EAAKqJ,IAAIjP,MAAO,iDAClDyL,KAAAA,aAAa7F,EAAKlD,MAAOiP,GAC9B,MAEG,IAAA,kBACH/L,EAAKnD,KAAO,eACR8E,GAA+BD,KAAAA,mBAAmBC,GAAwB,GACzEqK,KAAAA,iBAAiBhM,EAAK+K,SAAUgB,GACrC,MAEG,IAAA,gBACH/L,EAAKnD,KAAO,cACPgJ,KAAAA,aAAa7F,EAAKmG,SAAU4F,GACN,sBAAvB/L,EAAKmG,SAAStJ,MACT4E,KAAAA,MAAMzB,EAAKmG,SAAS/L,MAAO,6CACpC,MAEG,IAAA,uBACmB,MAAlB4F,EAAKiM,UAAyBxK,KAAAA,MAAMzB,EAAKyH,KAAKpN,IAAK,+DACvD2F,EAAKnD,KAAO,2BACLmD,EAAKiM,SACPpG,KAAAA,aAAa7F,EAAKyH,KAAMsE,GAG1B,IAAA,oBACH,MAEG,IAAA,0BACElG,KAAAA,aAAa7F,EAAKmC,WAAY4J,GACnC,MAEG,IAAA,mBACC,IAACA,EAAa,MAEpB,QACOtK,KAAAA,MAAMzB,EAAK5F,MAAO,4BAEhBuH,GAA+BD,KAAAA,mBAAmBC,GAAwB,GAC9E3B,OAAAA,GAKT8L,EAAKE,iBAAmB,SAASE,EAAUH,GAIpC,IAHD1J,IAEAhI,EAAM6R,EAASzZ,OACVD,EAAI,EAAGA,EAAI6H,EAAK7H,IAAK,CACxBwY,IAAAA,EAAMkB,EAAS1Z,GACfwY,GALO,KAKOnF,aAAamF,EAAKe,GAElC1R,GAAAA,EAAK,CACH8R,IAAAA,EAAOD,EAAS7R,EAAM,GACO,IAA7B,KAAKrG,QAAQ+G,aAAqBgR,GAAaI,GAAsB,gBAAdA,EAAKtP,MAAiD,eAAvBsP,EAAKhG,SAAStJ,MAC/FoE,KAAAA,WAAWkL,EAAKhG,SAAS/L,OAE7B8R,OAAAA,GAKTJ,EAAKM,YAAc,SAASzK,GACtB3B,IAAAA,EAAO,KAAKC,YAGT,OAFFY,KAAAA,OACLb,EAAKmG,SAAW,KAAKwB,kBAAiB,EAAOhG,GACtC,KAAKgB,WAAW3C,EAAM,kBAG/B8L,EAAKO,iBAAmB,WAClBrM,IAAAA,EAAO,KAAKC,YAST,OARFY,KAAAA,OAG4B,IAA7B,KAAK7M,QAAQ+G,aAAqB,KAAK8B,OAAS5I,EAAML,MACjDqN,KAAAA,aAETjB,EAAKmG,SAAW,KAAKU,mBAEd,KAAKlE,WAAW3C,EAAM,gBAK/B8L,EAAKjF,iBAAmB,WAClB,GAAA,KAAK7S,QAAQ+G,aAAe,EACtB,OAAA,KAAK8B,MACR5I,KAAAA,EAAMK,SACL0L,IAAAA,EAAO,KAAKC,YAGT,OAFFY,KAAAA,OACLb,EAAK+K,SAAW,KAAKrC,iBAAiBzU,EAAMM,UAAU,GAAM,GACrD,KAAKoO,WAAW3C,EAAM,gBAE1B/L,KAAAA,EAAMO,OACF,OAAA,KAAK8X,UAAS,GAGlB,OAAA,KAAKtH,cAGd8G,EAAKpD,iBAAmB,SAAS6D,EAAOC,EAAYC,GAI3C,IAHHpK,IAEAqK,EAAO,GAAIvB,GAAQ,GACf,KAAKvK,IAAI2L,IAGXC,GAFArB,EAASA,GAAQ,EAJV,KAKG3J,OAAOvN,EAAMW,OACvB4X,GANO,KAMc3P,OAAS5I,EAAMW,MACtC8X,EAAKrQ,KAAK,UACL,CAAA,GAAIoQ,GARA,KAQ6BpL,mBAAmBkL,GACzD,MACK,GAVI,KAUO1P,OAAS5I,EAAMmB,SAAU,CACrCuX,IAAAA,EAXK,KAWSN,mBAXT,KAYFO,qBAAqBD,GAC5BD,EAAKrQ,KAAKsQ,GAbD,KAcE9P,OAAS5I,EAAMW,OAdjB,KAciC6M,MAdjC,KAc8CrH,MAAO,iDAdrD,KAeFoH,OAAO+K,GACd,MAEIM,IAAAA,EAlBK,KAkBSC,kBAlBT,KAkBkC1S,MAlBlC,KAkBgDsC,UAlBhD,KAmBFkQ,qBAAqBC,GAC5BH,EAAKrQ,KAAKwQ,GAGPH,OAAAA,GAGTZ,EAAKc,qBAAuB,SAAShG,GAC5BA,OAAAA,GAKTkF,EAAKgB,kBAAoB,SAASzP,EAAUX,EAAU+K,GAEhD,GADJA,EAAOA,GAAQ,KAAKZ,mBAChB,KAAK7S,QAAQ+G,YAAc,IAAM,KAAK6F,IAAI3M,EAAMsB,IAAckS,OAAAA,EAC9DzH,IAAAA,EAAO,KAAKuJ,YAAYlM,EAAUX,GAG/B,OAFPsD,EAAKyH,KAAOA,EACZzH,EAAK0H,MAAQ,KAAKC,mBACX,KAAKhF,WAAW3C,EAAM,sBAU/B8L,EAAKhG,UAAY,SAAS5D,EAAM6K,EAAaC,GAGnC9K,OAAAA,EAAKrF,MACR,IAAA,aACC,KAAKrL,QAAU,KAAKkM,wBAAwB9K,KAAKsP,EAAKtO,OACjDgO,KAAAA,iBAAiBM,EAAK9H,OAAQ2S,EAAc,WAAa,iBAAmB7K,EAAKtO,KAAO,mBAC7FoZ,IACE1T,EAAI0T,EAAc9K,EAAKtO,OAClBgO,KAAAA,iBAAiBM,EAAK9H,MAAO,uBACtC4S,EAAa9K,EAAKtO,OAAQ,GAExBmZ,GAA+B,SAAhBA,KAEC,QAAhBA,IAA0B,KAAKE,kBAAkB/K,EAAKtO,OACtC,QAAhBmZ,IAA0B,KAAKG,sBAAsBhL,EAAKtO,QAErDgO,KAAAA,iBAAiBM,EAAK9H,MAAQ,eAAkB8H,EAAKtO,KAAQ,+BAEhD,QAAhBmZ,EACGI,KAAAA,eAAejL,EAAKtO,MAEpBwZ,KAAAA,mBAAmBlL,EAAKtO,OAGjC,MAEG,IAAA,mBACCmZ,GAAoBnL,KAAAA,iBAAiBM,EAAK9H,MAAO,6BACrD,MAEG,IAAA,gBACE,IAAA,IAAI5H,EAAI,EAAGyU,EAAO/E,EAAK0I,WAAYpY,EAAIyU,EAAKxU,OAAQD,GAAK,EAC5D,CACEqY,IAAAA,EAAO5D,EAAKzU,GAjCL,KAmCJsT,UAAU+E,EAAMkC,EAAaC,GAEpC,MAEG,IAAA,WAEElH,KAAAA,UAAU5D,EAAKpF,MAAOiQ,EAAaC,GACxC,MAEG,IAAA,eACE,IAAA,IAAIhG,EAAM,EAAG8D,EAAS5I,EAAK6I,SAAU/D,EAAM8D,EAAOrY,OAAQuU,GAAO,EAAG,CACnE6F,IAAAA,EAAO/B,EAAO9D,GAEhB6F,GAhDO,KAgDQ/G,UAAU+G,EAAME,EAAaC,GAEhD,MAEG,IAAA,oBACElH,KAAAA,UAAU5D,EAAKuF,KAAMsF,EAAaC,GACvC,MAEG,IAAA,cACElH,KAAAA,UAAU5D,EAAKiE,SAAU4G,EAAaC,GAC3C,MAEG,IAAA,0BACElH,KAAAA,UAAU5D,EAAKC,WAAY4K,EAAaC,GAC7C,MAEF,QACOvL,KAAAA,MAAMS,EAAK9H,OAAQ2S,EAAc,UAAY,gBAAkB,aAsBxE,IAAIM,EAAOjQ,EAAOjE,UAOlBkU,EAAKC,eAAiB,SAASzC,EAAM0C,EAAU5L,GACzC,KAAA,KAAK3N,QAAQ+G,aAAe,GAAmB,kBAAd8P,EAAKhO,MAEtC,KAAK7I,QAAQ+G,aAAe,IAAM8P,EAAKvB,UAAYuB,EAAK5B,QAAU4B,EAAK2C,YAAvE,CAEAnE,IACAzV,EADAyV,EAAMwB,EAAKxB,IAEPA,OAAAA,EAAIxM,MACP,IAAA,aAAcjJ,EAAOyV,EAAIzV,KAAM,MAC/B,IAAA,UAAWA,EAAOf,OAAOwW,EAAIvM,OAAQ,MAC1C,QAAS,OAEL+F,IAAAA,EAAOgI,EAAKhI,KACZ,GAAA,KAAK7O,QAAQ+G,aAAe,EACjB,cAATnH,GAAiC,SAATiP,IACtB0K,EAASE,QACP9L,GAA0BA,EAAuBhB,YAAc,EAAKgB,EAAuBhB,YAAc0I,EAAIjP,MAErGwH,KAAAA,iBAAiByH,EAAIjP,MAAO,uCAE1CmT,EAASE,OAAQ,OAPjB,CAYAC,IAAAA,EAAQH,EADZ3Z,EAAO,IAAMA,GAET8Z,GAAAA,GAEW,SAAT7K,EACa,KAAKrR,QAAUkc,EAAMhI,MAAQgI,EAAMC,KAAOD,EAAMpb,IAEhDob,EAAMhI,MAAQgI,EAAM7K,KAG5BjB,KAAAA,iBAAiByH,EAAIjP,MAAO,iCAErCsT,EAAQH,EAAS3Z,GAAQ,CACvB8R,MAAM,EACNiI,KAAK,EACLrb,KAAK,GAGTob,EAAM7K,IAAQ,KAkBhBwK,EAAKzI,gBAAkB,SAASgJ,EAAMjM,GAChCU,IAEAhF,EAAW,KAAKjD,MAAOsC,EAAW,KAAKA,SACvCwF,EAAO,KAAKyF,iBAAiBiG,EAAMjM,GACnC,GAAA,KAAK9E,OAAS5I,EAAMW,MAAO,CACzBoL,IAAAA,EAAO,KAAKuJ,YAAYlM,EAAUX,GAE/B,IADPsD,EAAK6N,YAAc,CAAC3L,GACb,KAAKtB,IAAI3M,EAAMW,QAAUoL,EAAK6N,YAAYxR,KAPtC,KAOkDsL,iBAAiBiG,EAAMjM,IAC7E,OAAA,KAAKgB,WAAW3C,EAAM,sBAExBkC,OAAAA,GAMTmL,EAAK1F,iBAAmB,SAASiG,EAAMjM,EAAwBmM,GACzD,GAAA,KAAKhP,aAAe,KAAKgC,aAAa,SAAmB,OAAA,KAAKiN,aAE9DC,IAAAA,GAAyB,EAAOC,GAAkB,EAAGC,GAAoB,EACzEvM,GACFsM,EAAiBtM,EAAuBlB,oBACxCyN,EAAmBvM,EAAuBnB,cAC1CmB,EAAuBlB,oBAAsBkB,EAAuBnB,eAAiB,IAErFmB,EAAyB,IAAIrB,EAC7B0N,GAAyB,GAGvB3Q,IAAAA,EAAW,KAAKjD,MAAOsC,EAAW,KAAKA,SACvC,KAAKG,OAAS5I,EAAMS,QAAU,KAAKmI,OAAS5I,EAAML,OAC7CgL,KAAAA,iBAAmB,KAAKxE,OAC7BqN,IAAAA,EAAO,KAAK0G,sBAAsBP,EAAMjM,GAExC,GADAmM,IAAkBrG,EAAOqG,EAAerU,KAAK,KAAMgO,EAAMpK,EAAUX,IACnE,KAAKG,KAAKtJ,SAAU,CAClByM,IAAAA,EAAO,KAAKuJ,YAAYlM,EAAUX,GAQ/B,OAPPsD,EAAKiM,SAAW,KAAKnP,MACrBkD,EAAKyH,KAAO,KAAK5K,OAAS5I,EAAMsB,GAAK,KAAKsQ,aAAa4B,GAAM,EAAO9F,GAA0B8F,EACzFuG,GAA0B1N,EAAoB7G,KAAKkI,GACxDA,EAAuBpB,iBAAmB,EACrCuF,KAAAA,UAAU2B,GACV5G,KAAAA,OACLb,EAAK0H,MAAQ,KAAKC,iBAAiBiG,GAC5B,KAAKjL,WAAW3C,EAAM,wBAMxByH,OAJDuG,GAA+BlM,KAAAA,sBAAsBH,GAAwB,GAE/EsM,GAAkB,IAAKtM,EAAuBlB,oBAAsBwN,GACpEC,GAAoB,IAAKvM,EAAuBnB,cAAgB0N,GAC7DzG,GAKT4F,EAAKc,sBAAwB,SAASP,EAAMjM,GACtCtE,IAAAA,EAAW,KAAKjD,MAAOsC,EAAW,KAAKA,SACvCwF,EAAO,KAAKkM,aAAaR,EAAMjM,GAC/B,GAAA,KAAKG,sBAAsBH,GAAkCO,OAAAA,EAC7D,GAAA,KAAKtB,IAAI3M,EAAMe,UAAW,CACxBgL,IAAAA,EAAO,KAAKuJ,YAAYlM,EAAUX,GAK/B,OAJPsD,EAAKpN,KAAOsP,EACZlC,EAAKiG,WAAa,KAAK0B,mBAClBnG,KAAAA,OAAOvN,EAAMa,OAClBkL,EAAKkG,UAAY,KAAKyB,iBAAiBiG,GAChC,KAAKjL,WAAW3C,EAAM,yBAExBkC,OAAAA,GAKTmL,EAAKe,aAAe,SAASR,EAAMjM,GAC7BtE,IAAAA,EAAW,KAAKjD,MAAOsC,EAAW,KAAKA,SACvCwF,EAAO,KAAKmM,gBAAgB1M,GAAwB,GACpD,OAAA,KAAKG,sBAAsBH,GAAkCO,EAC1DA,EAAK9H,QAAUiD,GAA0B,4BAAd6E,EAAKrF,KAAqCqF,EAAO,KAAKoM,YAAYpM,EAAM7E,EAAUX,GAAW,EAAGkR,IASpIP,EAAKiB,YAAc,SAAS7G,EAAM8G,EAAcC,EAAcC,EAASb,GACjE/Z,IAAAA,EAAO,KAAKgJ,KAAKnJ,MACjBG,GAAQ,MAARA,KAAkB+Z,GAAQ,KAAK/Q,OAAS5I,EAAMoE,MAC5CxE,EAAO4a,EAAS,CACdC,IAAAA,EAAU,KAAK7R,OAAS5I,EAAMyB,WAAa,KAAKmH,OAAS5I,EAAM0B,WAC/DgZ,EAAK,KAAK7R,MACT+D,KAAAA,OACDxD,IAAAA,EAAW,KAAKjD,MAAOsC,EAAW,KAAKA,SACvCgL,EAAQ,KAAK4G,YAAY,KAAKD,gBAAgB,MAAM,GAAQhR,EAAUX,EAAU7I,EAAM+Z,GACtF5N,EAAO,KAAK4O,YAAYL,EAAcC,EAAc/G,EAAMC,EAAOiH,EAAID,GAClE,OAAA,KAAKJ,YAAYtO,EAAMuO,EAAcC,EAAcC,EAASb,GAGhEnG,OAAAA,GAGT4F,EAAKuB,YAAc,SAASvR,EAAUX,EAAU+K,EAAMC,EAAOiH,EAAID,GAC3D1O,IAAAA,EAAO,KAAKuJ,YAAYlM,EAAUX,GAI/B,OAHPsD,EAAKyH,KAAOA,EACZzH,EAAKiM,SAAW0C,EAChB3O,EAAK0H,MAAQA,EACN,KAAK/E,WAAW3C,EAAM0O,EAAU,oBAAsB,qBAK/DrB,EAAKgB,gBAAkB,SAAS1M,EAAwBkN,GAClDxM,IAEiDH,EAAjD7E,EAAW,KAAKjD,MAAOsC,EAAW,KAAKA,SACvC,GAAA,KAAKoE,aAAa,WAAa,KAAK/B,UAAa,KAAKF,YAAc,KAAK7K,QAAQsH,2BACnF4G,EAAO,KAAK4M,aACZD,GAAW,OACN,GAAI,KAAKhS,KAAKrJ,OAAQ,CACvBwM,IAAAA,EAAO,KAAKC,YAAasH,EAAS,KAAK1K,OAAS5I,EAAMwB,OAC1DuK,EAAKiM,SAAW,KAAKnP,MACrBkD,EAAKxM,QAAS,EACTqN,KAAAA,OACLb,EAAKmG,SAAW,KAAKkI,gBAAgB,MAAM,GACtCvM,KAAAA,sBAAsBH,GAAwB,GAC/C4F,EAAezB,KAAAA,UAAU9F,EAAKmG,UACzB,KAAK3U,QAA4B,WAAlBwO,EAAKiM,UACG,eAAvBjM,EAAKmG,SAAStJ,KACd+E,KAAAA,iBAAiB5B,EAAK5F,MAAO,0CAC/ByU,GAAW,EAClB3M,EAAO,KAAKS,WAAW3C,EAAMuH,EAAS,mBAAqB,uBACtD,CAED,GADJrF,EAAO,KAAK4H,oBAAoBnI,GAC5B,KAAKG,sBAAsBH,GAAkCO,OAAAA,EAC1D,KAAA,KAAKrF,KAAKpJ,UAAY,KAAKyN,sBAAsB,CAClDoK,IAAAA,EAvBK,KAuBW/B,YAAYlM,EAAUX,GAC1C4O,EAAOW,SAxBE,KAwBgBnP,MACzBwO,EAAO9X,QAAS,EAChB8X,EAAOnF,SAAWjE,EA1BT,KA2BF4D,UAAU5D,GA3BR,KA4BFrB,OACPqB,EA7BS,KA6BKS,WAAW2I,EAAQ,qBAIjC,OAACuD,GAAY,KAAKjO,IAAI3M,EAAMqC,UACrB,KAAKsY,YAAYvR,EAAUX,EAAUwF,EAAM,KAAKmM,gBAAgB,MAAM,GAAQ,MAAM,GAEpFnM,GAKbmL,EAAKvD,oBAAsB,SAASnI,GAC9BtE,IAAAA,EAAW,KAAKjD,MAAOsC,EAAW,KAAKA,SACvCwF,EAAO,KAAK6H,cAAcpI,GAC1BoN,EAAoC,4BAAd7M,EAAKrF,MAA+F,MAAzD,KAAKrC,MAAMwD,MAAM,KAAKK,aAAc,KAAKC,YAC1G,GAAA,KAAKwD,sBAAsBH,IAA2BoN,EAA8B7M,OAAAA,EACpF8M,IAAAA,EAAS,KAAKC,gBAAgB/M,EAAM7E,EAAUX,GAK3CsS,OAJHrN,GAA0C,qBAAhBqN,EAAOnS,OAC/B8E,EAAuBlB,qBAAuBuO,EAAO5U,QAASuH,EAAuBlB,qBAAuB,GAC5GkB,EAAuBjB,mBAAqBsO,EAAO5U,QAASuH,EAAuBjB,mBAAqB,IAEvGsO,GAGT3B,EAAK4B,gBAAkB,SAASC,EAAM7R,EAAUX,EAAUyS,GAKnD,IAJD9M,IAEA+M,EAAkB,KAAKpb,QAAQ+G,aAAe,GAAmB,eAAdmU,EAAKrS,MAAuC,UAAdqS,EAAKtb,MACtF,KAAK0K,aAAe4Q,EAAK7U,MAAQ,KAAK6G,sBAAmE,UAA3C,KAAK1G,MAAMwD,MAAMkR,EAAK9U,MAAO8U,EAAK7U,KAC3FiP,OAAY,IACf,IAACA,EALM,KAKY1I,IAAI3M,EAAMK,YALtB,KAK2CsM,IAAI3M,EAAMc,KAAM,CAChEiL,IAAAA,EANK,KAMSuJ,YAAYlM,EAAUX,GACxCsD,EAAK+G,OAASmI,EACdlP,EAAKqP,SAAW/F,EARP,KAQyB1E,kBARzB,KAQoDI,YAAW,GACxEhF,EAAKsJ,WAAaA,EACdA,GAVK,KAUc9H,OAAOvN,EAAMM,UACpC2a,EAXS,KAWKvM,WAAW3C,EAAM,yBAC1B,IAAKmP,GAZD,KAYmBvO,IAAI3M,EAAMS,QAAS,CAC3CiN,IAAAA,EAAyB,IAAIrB,EAAqB8H,EAb7C,KAakEpJ,SAAUqJ,EAb5E,KAaiGpJ,SAbjG,KAcFD,SAAW,EAdT,KAeFC,SAAW,EACdiN,IAAAA,EAhBK,KAgBaoD,cAAcrb,EAAMU,OAhBjC,KAgBgDX,QAAQ+G,aAAe,GAAG,EAAO4G,GACtFyN,GAAAA,IAjBK,KAiBsBlO,sBAjBtB,KAiBqDN,IAAI3M,EAAMgB,OAK/DoN,OAtBA,KAkBAX,mBAAmBC,GAAwB,GAlB3C,KAmBAK,iCAnBA,KAoBAhD,SAAWoJ,EApBX,KAqBAnJ,SAAWoJ,EArBX,KAsBOkH,qBAtBP,KAsBmChG,YAAYlM,EAAUX,GAAWwP,GAAU,GAtB9E,KAwBFpK,sBAAsBH,GAAwB,GAxB5C,KAyBF3C,SAAWoJ,GAzBT,KAyB+BpJ,SAzB/B,KA0BFC,SAAWoJ,GA1BT,KA0B+BpJ,SACpCqM,IAAAA,EA3BK,KA2BW/B,YAAYlM,EAAUX,GAC1C4O,EAAOkE,OAASN,EAChB5D,EAAOmE,UAAYvD,EACnBgD,EA9BS,KA8BKvM,WAAW2I,EAAQ,sBAC5B,CAAA,GA/BI,KA+BOzO,OAAS5I,EAAMoB,UAMxB6Z,OAAAA,EALH3D,IAAAA,EAhCK,KAgCWhC,YAAYlM,EAAUX,GAC1C6O,EAAOmE,IAAMR,EACb3D,EAAOoE,MAlCE,KAkCaC,cAAc,CAACC,UAAU,IAC/CX,EAnCS,KAmCKvM,WAAW4I,EAAQ,8BAYvC8B,EAAKtD,cAAgB,SAASpI,GACxB3B,IAAAA,EAAM8P,EAAa,KAAKlR,mBAAqB,KAAKxE,MAC9C,OAAA,KAAKyC,MACR5I,KAAAA,EAAM4D,OAaF,OAZF,KAAKgH,YACD4C,KAAAA,MAAM,KAAKrH,MAAO,wCAC3B4F,EAAO,KAAKC,YACPY,KAAAA,OAOD,KAAKhE,OAAS5I,EAAMc,KAAO,KAAK8H,OAAS5I,EAAMK,UAAY,KAAKuI,OAAS5I,EAAMS,QAC1EuM,KAAAA,aACF,KAAK0B,WAAW3C,EAAM,SAE1B/L,KAAAA,EAAM2D,MAGF,OAFPoI,EAAO,KAAKC,YACPY,KAAAA,OACE,KAAK8B,WAAW3C,EAAM,kBAE1B/L,KAAAA,EAAML,KACLyJ,IAAAA,EAAW,KAAKjD,MAAOsC,EAAW,KAAKA,SAAUiB,EAAc,KAAKA,YACpE6J,EAAK,KAAKxC,WAAW,KAAKnI,OAAS5I,EAAML,MACzC,GAAA,KAAKI,QAAQ+G,aAAe,IAAM4C,GAA2B,UAAZ6J,EAAG5T,OAAqB,KAAKsN,sBAAwB,KAAKN,IAAI3M,EAAMgD,WAC9G,OAAA,KAAK+O,cAAc,KAAKuD,YAAYlM,EAAUX,IAAW,GAAO,GAAO,GAC9EoT,GAAAA,IAAe,KAAK5O,qBAAsB,CACxC,GAAA,KAAKN,IAAI3M,EAAMgB,OACR,OAAA,KAAKsa,qBAAqB,KAAKhG,YAAYlM,EAAUX,GAAW,CAAC8K,IAAK,GAC7E,GAAA,KAAKxT,QAAQ+G,aAAe,GAAiB,UAAZyM,EAAG5T,MAAoB,KAAKiJ,OAAS5I,EAAML,OAAS+J,EAIhF,OAHP6J,EAAK,KAAKxC,cACN,KAAK9D,sBAAyB,KAAKN,IAAI3M,EAAMgB,QACxCgM,KAAAA,aACF,KAAKsO,qBAAqB,KAAKhG,YAAYlM,EAAUX,GAAW,CAAC8K,IAAK,GAG1EA,OAAAA,EAEJvT,KAAAA,EAAME,OACL2I,IAAAA,EAAQ,KAAKA,MAGVkD,OAFPA,EAAO,KAAK+P,aAAajT,EAAMA,QAC1BkT,MAAQ,CAACC,QAASnT,EAAMmT,QAASC,MAAOpT,EAAMoT,OAC5ClQ,EAEJ/L,KAAAA,EAAMC,IAAUD,KAAAA,EAAMG,OAClB,OAAA,KAAK2b,aAAa,KAAKjT,OAE3B7I,KAAAA,EAAMiE,MAAYjE,KAAAA,EAAMkE,MAAYlE,KAAAA,EAAMmE,OAKtC,OAJP4H,EAAO,KAAKC,aACPnD,MAAQ,KAAKD,OAAS5I,EAAMiE,MAAQ,KAAO,KAAK2E,OAAS5I,EAAMkE,MACpE6H,EAAK4L,IAAM,KAAK/O,KAAK1J,QAChB0N,KAAAA,OACE,KAAK8B,WAAW3C,EAAM,WAE1B/L,KAAAA,EAAMS,OACL0F,IAAAA,EAAQ,KAAKA,MAAO8H,EAAO,KAAKiO,mCAAmCL,GAOhE5N,OANHP,IACEA,EAAuBlB,oBAAsB,IAAM,KAAKwB,qBAAqBC,KAC7EP,EAAuBlB,oBAAsBrG,GAC7CuH,EAAuBjB,kBAAoB,IAC3CiB,EAAuBjB,kBAAoBtG,IAE1C8H,EAEJjO,KAAAA,EAAMK,SAIF,OAHP0L,EAAO,KAAKC,YACPY,KAAAA,OACLb,EAAK+K,SAAW,KAAKuE,cAAcrb,EAAMM,UAAU,GAAM,EAAMoN,GACxD,KAAKgB,WAAW3C,EAAM,mBAE1B/L,KAAAA,EAAMO,OACF,OAAA,KAAK8X,UAAS,EAAO3K,GAEzB1N,KAAAA,EAAMgD,UAGF,OAFP+I,EAAO,KAAKC,YACPY,KAAAA,OACE,KAAKmF,cAAchG,GAAM,GAE7B/L,KAAAA,EAAM6D,OACF,OAAA,KAAKgM,WAAW,KAAK7D,aAAa,GAEtChM,KAAAA,EAAM0D,KACF,OAAA,KAAKyY,WAETnc,KAAAA,EAAMoB,UACF,OAAA,KAAKua,gBAEd,QACO3O,KAAAA,eAIToM,EAAK0C,aAAe,SAASjT,GACvBkD,IAAAA,EAAO,KAAKC,YAIT,OAHPD,EAAKlD,MAAQA,EACbkD,EAAK4L,IAAM,KAAKpR,MAAMwD,MAAM,KAAK5D,MAAO,KAAKC,KACxCwG,KAAAA,OACE,KAAK8B,WAAW3C,EAAM,YAG/BqN,EAAKlI,qBAAuB,WACrB3D,KAAAA,OAAOvN,EAAMS,QACd2b,IAAAA,EAAM,KAAKzL,kBAERyL,OADF7O,KAAAA,OAAOvN,EAAMU,QACX0b,GAGThD,EAAK8C,mCAAqC,SAASL,GAC7CzN,IAEiDgO,EAAjDhT,EAAW,KAAKjD,MAAOsC,EAAW,KAAKA,SAAe+P,EAAqB,KAAKzY,QAAQ+G,aAAe,EACvG,GAAA,KAAK/G,QAAQ+G,aAAe,EAAG,CAC5B8F,KAAAA,OAEDyP,IAE4GC,EAF5GD,EAAgB,KAAKlW,MAAOoW,EAAgB,KAAK9T,SACjDwP,EAAW,GAAIf,GAAQ,EAAMsF,GAAc,EAC3C9O,EAAyB,IAAIrB,EAAqB8H,EAAc,KAAKpJ,SAAUqJ,EAAc,KAAKpJ,SAG/F,IAFFD,KAAAA,SAAW,EACXC,KAAAA,SAAW,EACT,KAAKpC,OAAS5I,EAAMU,QAAQ,CAE7B8X,GADJtB,EAAQA,GAAQ,EAZP,KAYsB3J,OAAOvN,EAAMW,OACxC6X,GAbK,KAawBpL,mBAAmBpN,EAAMU,QAAQ,GAAO,CACvE8b,GAAc,EACd,MACK,GAhBE,KAgBS5T,OAAS5I,EAAMmB,SAAU,CACzCmb,EAjBO,KAiBcnW,MACrB8R,EAAS7P,KAlBF,KAkBcqU,eAlBd,KAkBoCrE,qBAlBpC,KAmBIxP,OAAS5I,EAAMW,OAnBnB,KAmBmC6M,MAnBnC,KAmBgDrH,MAAO,iDAC9D,MAEA8R,EAAS7P,KAtBF,KAsBcsL,kBAAiB,EAAOhG,EAtBtC,KAsBqE+O,iBAG5EC,IAAAA,EAAc,KAAKvW,MAAOwW,EAAc,KAAKlU,SAG7CoT,GAFCtO,KAAAA,OAAOvN,EAAMU,QAEdmb,IAAe,KAAK5O,sBAAwB,KAAKN,IAAI3M,EAAMgB,OAKtD,OAJFyM,KAAAA,mBAAmBC,GAAwB,GAC3CK,KAAAA,iCACAhD,KAAAA,SAAWoJ,EACXnJ,KAAAA,SAAWoJ,EACT,KAAKwI,oBAAoBxT,EAAUX,EAAUwP,GAGjDA,EAASzZ,SAAUge,GAAoBxP,KAAAA,WAAW,KAAK5C,cACxDkS,GAAoBtP,KAAAA,WAAWsP,GAC9BzO,KAAAA,sBAAsBH,GAAwB,GAC9C3C,KAAAA,SAAWoJ,GAAe,KAAKpJ,SAC/BC,KAAAA,SAAWoJ,GAAe,KAAKpJ,SAEhCiN,EAASzZ,OAAS,IACpB4d,EAAM,KAAK9G,YAAY+G,EAAeE,IAClC3C,YAAc3B,EACb4E,KAAAA,aAAaT,EAAK,qBAAsBM,EAAaC,IAE1DP,EAAMnE,EAAS,QAGjBmE,EAAM,KAAKlL,uBAGT,GAAA,KAAKnR,QAAQ8H,eAAgB,CAC3BiV,IAAAA,EAAM,KAAKxH,YAAYlM,EAAUX,GAE9B,OADPqU,EAAI5O,WAAakO,EACV,KAAK1N,WAAWoO,EAAK,2BAErBV,OAAAA,GAIXhD,EAAKqD,eAAiB,SAASM,GACtBA,OAAAA,GAGT3D,EAAKwD,oBAAsB,SAASxT,EAAUX,EAAUwP,GAC/C,OAAA,KAAKqD,qBAAqB,KAAKhG,YAAYlM,EAAUX,GAAWwP,IASzE,IAAI+E,EAAU,GAEd5D,EAAK+C,SAAW,WACVpQ,IAAAA,EAAO,KAAKC,YACZiR,EAAO,KAAKlM,YAAW,GACvB,GAAA,KAAKhR,QAAQ+G,aAAe,GAAK,KAAK6F,IAAI3M,EAAMc,KAAM,CACxDiL,EAAKkR,KAAOA,EACRvT,IAAAA,EAAc,KAAKA,YAMhB,OALPqC,EAAKqP,SAAW,KAAKrK,YAAW,IACL,WAAvBhF,EAAKqP,SAASzb,MAAqB+J,IAC9BiE,KAAAA,iBAAiB5B,EAAKqP,SAASjV,MAAO,sDAC1C,KAAKyE,YACD+C,KAAAA,iBAAiB5B,EAAK5F,MAAO,4CAC/B,KAAKuI,WAAW3C,EAAM,gBAE3B3C,IAAAA,EAAW,KAAKjD,MAAOsC,EAAW,KAAKA,SAIpC,OAHPsD,EAAKwP,OAAS,KAAKP,gBAAgB,KAAKlF,gBAAiB1M,EAAUX,GAAU,GACzE,KAAKkE,IAAI3M,EAAMS,QAAWsL,EAAKyP,UAAY,KAAKH,cAAcrb,EAAMU,OAAQ,KAAKX,QAAQ+G,aAAe,GAAG,GACxGiF,EAAKyP,UAAYwB,EACjB,KAAKtO,WAAW3C,EAAM,kBAK/BqN,EAAK8D,qBAAuB,SAASlY,GAC/B4W,IAAAA,EAAW5W,EAAI4W,SAEfhD,EAAO,KAAK5M,YAiBT,OAhBH,KAAKpD,OAAS5I,EAAMkB,iBACjB0a,GACEjO,KAAAA,iBAAiB,KAAKxH,MAAO,oDAEpCyS,EAAK/P,MAAQ,CACX8O,IAAK,KAAK9O,MACVsU,OAAQ,OAGVvE,EAAK/P,MAAQ,CACX8O,IAAK,KAAKpR,MAAMwD,MAAM,KAAK5D,MAAO,KAAKC,KAAK8C,QAAQ,SAAU,MAC9DiU,OAAQ,KAAKtU,OAGZ+D,KAAAA,OACLgM,EAAKwE,KAAO,KAAKxU,OAAS5I,EAAMoB,UACzB,KAAKsN,WAAWkK,EAAM,oBAG/BQ,EAAKuC,cAAgB,SAAS3W,QAEf,IAARA,IAAiBA,EAAM,IACxB4W,IAAAA,EAAW5W,EAAI4W,cAA4B,IAAbA,IAAsBA,GAAW,GAE/D7P,IAAAA,EAAO,KAAKC,YACXY,KAAAA,OACLb,EAAK6N,YAAc,GACfyD,IAAAA,EAAS,KAAKH,qBAAqB,CAACtB,SAAUA,IAE3C,IADP7P,EAAKuR,OAAS,CAACD,IACPA,EAAOD,MATF,KAUAxU,OAAS5I,EAAMI,KAVf,KAU6BoN,MAV7B,KAU0ClP,IAAK,iCAV/C,KAWJiP,OAAOvN,EAAMqB,cACpB0K,EAAK6N,YAAYxR,KAZN,KAYkBuI,mBAZlB,KAaJpD,OAAOvN,EAAMQ,QACpBuL,EAAKuR,OAAOlV,KAAKiV,EAdN,KAcsBH,qBAAqB,CAACtB,SAAUA,KAG5D,OADFhP,KAAAA,OACE,KAAK8B,WAAW3C,EAAM,oBAG/BqN,EAAKmE,YAAc,SAAS3G,GACnB,OAACA,EAAKvB,UAA8B,eAAlBuB,EAAKxB,IAAIxM,MAA2C,UAAlBgO,EAAKxB,IAAIzV,OACjE,KAAKiJ,OAAS5I,EAAML,MAAQ,KAAKiJ,OAAS5I,EAAMC,KAAO,KAAK2I,OAAS5I,EAAMG,QAAU,KAAKyI,OAAS5I,EAAMK,UAAY,KAAKuI,KAAK1J,SAAY,KAAKa,QAAQ+G,aAAe,GAAK,KAAK8B,OAAS5I,EAAMmC,QAChMsC,EAAU9F,KAAK,KAAK4H,MAAMwD,MAAM,KAAKM,WAAY,KAAKlE,SAK3DiT,EAAKf,SAAW,SAASmF,EAAW9P,GAC9BU,IAEArC,EAAO,KAAKC,YAAakL,GAAQ,EAAMoC,EAAW,GAG/C,IAFPvN,EAAK4K,WAAa,GACb/J,KAAAA,QACG,KAAKD,IAAI3M,EAAMQ,SAAS,CAC1B,GAAC0W,EAGIA,GAAQ,OADX9I,GARK,KAOFb,OAAOvN,EAAMW,OAPX,KAQEyM,mBAAmBpN,EAAMQ,QAAW,MAG7CoW,IAAAA,EAXO,KAWO6G,cAAcD,EAAW9P,GACtC8P,GAZM,KAYcnE,eAAezC,EAAM0C,EAAU5L,GACxD3B,EAAK4K,WAAWvO,KAAKwO,GAEhB,OAAA,KAAKlI,WAAW3C,EAAMyR,EAAY,gBAAkB,qBAG7DpE,EAAKqE,cAAgB,SAASD,EAAW9P,GACnCkJ,IAAyBpB,EAAa1D,EAAS1I,EAAUX,EAAzDmO,EAAO,KAAK5K,YACZ,GAAA,KAAKjM,QAAQ+G,aAAe,GAAK,KAAK6F,IAAI3M,EAAMmB,UAC9Cqc,OAAAA,GACF5G,EAAK1E,SAAW,KAAKnB,YAAW,GAC5B,KAAKnI,OAAS5I,EAAMW,OACjB6M,KAAAA,MAAM,KAAKrH,MAAO,iDAElB,KAAKuI,WAAWkI,EAAM,iBAG3B,KAAKhO,OAAS5I,EAAMS,QAAUiN,IAC5BA,EAAuBlB,oBAAsB,IAC/CkB,EAAuBlB,oBAAsB,KAAKrG,OAEhDuH,EAAuBjB,kBAAoB,IAC7CiB,EAAuBjB,kBAAoB,KAAKtG,QAIpDyQ,EAAK1E,SAAW,KAAKwB,kBAAiB,EAAOhG,GAEzC,KAAK9E,OAAS5I,EAAMW,OAAS+M,GAA0BA,EAAuBnB,cAAgB,IAChGmB,EAAuBnB,cAAgB,KAAKpG,OAGvC,KAAKuI,WAAWkI,EAAM,kBAE3B,KAAK7W,QAAQ+G,aAAe,IAC9B8P,EAAK5B,QAAS,EACd4B,EAAK2C,WAAY,GACbiE,GAAa9P,KACftE,EAAW,KAAKjD,MAChBsC,EAAW,KAAKA,UAEb+U,IACDhI,EAAc,KAAK7I,IAAI3M,EAAMmC,QAE/BuH,IAAAA,EAAc,KAAKA,YAUhB,OATF+L,KAAAA,kBAAkBmB,IAClB4G,IAAc9T,GAAe,KAAK3J,QAAQ+G,aAAe,IAAM0O,GAAe,KAAK+H,YAAY3G,IAClG9E,GAAU,EACV0D,EAAc,KAAKzV,QAAQ+G,aAAe,GAAK,KAAK6F,IAAI3M,EAAMmC,MACzDsT,KAAAA,kBAAkBmB,EAAMlJ,IAE7BoE,GAAU,EAEP4L,KAAAA,mBAAmB9G,EAAM4G,EAAWhI,EAAa1D,EAAS1I,EAAUX,EAAUiF,EAAwBhE,GACpG,KAAKgF,WAAWkI,EAAM,aAG/BwC,EAAKsE,mBAAqB,SAAS9G,EAAM4G,EAAWhI,EAAa1D,EAAS1I,EAAUX,EAAUiF,EAAwBhE,GAIhH,IAHC8L,GAAe1D,IAAY,KAAKlJ,OAAS5I,EAAMa,OAC3CmM,KAAAA,aAEL,KAAKL,IAAI3M,EAAMa,OACjB+V,EAAK/N,MAAQ2U,EAAY,KAAK3E,kBAAkB,KAAK1S,MAAO,KAAKsC,UAAY,KAAKiL,kBAAiB,EAAOhG,GAC1GkJ,EAAKhI,KAAO,YACP,GAAI,KAAK7O,QAAQ+G,aAAe,GAAK,KAAK8B,OAAS5I,EAAMS,OAC1D+c,GAAkBxQ,KAAAA,aACtB4J,EAAKhI,KAAO,OACZgI,EAAK5B,QAAS,EACd4B,EAAK/N,MAAQ,KAAK8M,YAAYH,EAAa1D,QACtC,GAAK0L,GAAc9T,KACf,KAAK3J,QAAQ+G,aAAe,IAAM8P,EAAKvB,UAA8B,eAAlBuB,EAAKxB,IAAIxM,MACzC,QAAlBgO,EAAKxB,IAAIzV,MAAoC,QAAlBiX,EAAKxB,IAAIzV,MACpC,KAAKiJ,OAAS5I,EAAMW,OAAS,KAAKiI,OAAS5I,EAAMQ,OAgBlD,KAAKT,QAAQ+G,aAAe,IAAM8P,EAAKvB,UAA8B,eAAlBuB,EAAKxB,IAAIxM,MAChE2N,KAAAA,gBAAgBK,EAAKxB,KAC1BwB,EAAKhI,KAAO,OACR4O,EACF5G,EAAK/N,MAAQ,KAAKgQ,kBAAkBzP,EAAUX,EAAUmO,EAAKxB,KACpD,KAAKxM,OAAS5I,EAAMsB,IAAMoM,GAC/BA,EAAuBpB,gBAAkB,IACzCoB,EAAuBpB,gBAAkB,KAAKnG,OAClDyQ,EAAK/N,MAAQ,KAAKgQ,kBAAkBzP,EAAUX,EAAUmO,EAAKxB,MAE7DwB,EAAK/N,MAAQ+N,EAAKxB,IAEpBwB,EAAK2C,WAAY,GACLvM,KAAAA,iBA7BwD,EAChEwI,GAAe1D,IAAgB9E,KAAAA,aACnC4J,EAAKhI,KAAOgI,EAAKxB,IAAIzV,KAChB8V,KAAAA,kBAAkBmB,GACvBA,EAAK/N,MAAQ,KAAK8M,aAAY,GAC1BgI,IAAAA,EAA2B,QAAd/G,EAAKhI,KAAiB,EAAI,EACvCgI,GAAAA,EAAK/N,MAAM2L,OAAOhW,SAAWmf,EAAY,CACvCxX,IAAAA,EAAQyQ,EAAK/N,MAAM1C,MACL,QAAdyQ,EAAKhI,KACAjB,KAAAA,iBAAiBxH,EAAO,gCAExBwH,KAAAA,iBAAiBxH,EAAO,4CAEf,QAAdyQ,EAAKhI,MAAgD,gBAA9BgI,EAAK/N,MAAM2L,OAAO,GAAG5L,MACvC+E,KAAAA,iBAAiBiJ,EAAK/N,MAAM2L,OAAO,GAAGrO,MAAO,mCAkB5DiT,EAAK3D,kBAAoB,SAASmB,GAC5B,GAAA,KAAK7W,QAAQ+G,aAAe,EAAG,CAC7B,GAAA,KAAK6F,IAAI3M,EAAMK,UAIVuW,OAHPA,EAAKvB,UAAW,EAChBuB,EAAKxB,IAAM,KAAK1B,mBACXnG,KAAAA,OAAOvN,EAAMM,UACXsW,EAAKxB,IAEZwB,EAAKvB,UAAW,EAGbuB,OAAAA,EAAKxB,IAAM,KAAKxM,OAAS5I,EAAMC,KAAO,KAAK2I,OAAS5I,EAAMG,OAAS,KAAK2V,gBAAkB,KAAK/E,YAAW,IAKnHqI,EAAKpF,aAAe,SAASjI,GAC3BA,EAAKwH,GAAK,KACN,KAAKxT,QAAQ+G,aAAe,IAC9BiF,EAAKoH,WAAY,EACjBpH,EAAKmC,YAAa,GAEhB,KAAKnO,QAAQ+G,aAAe,IAC5BiF,EAAKqH,OAAQ,IAKnBgG,EAAKzD,YAAc,SAASH,EAAa1D,GACnC/F,IAAAA,EAAO,KAAKC,YAAaiI,EAAW,KAAKpJ,YAAaqJ,EAAa,KAAKpJ,QACxEqJ,EAAc,KAAKpJ,SAAUqJ,EAAc,KAAKpJ,SAAUqJ,EAAY,KAAKzJ,WAyBxE,OAvBFoJ,KAAAA,aAAajI,GACd,KAAKhM,QAAQ+G,aAAe,IAC5BiF,EAAKoH,UAAYqC,GACjB,KAAKzV,QAAQ+G,aAAe,IAC5BiF,EAAKqH,QAAUtB,GAEdjH,KAAAA,YAAckB,EAAKoH,UACnBrI,KAAAA,QAAUiB,EAAKqH,MACfrI,KAAAA,SAAW,EACXC,KAAAA,SAAW,EACXJ,KAAAA,YAAa,EACbQ,KAAAA,qBAEAmC,KAAAA,OAAOvN,EAAMS,QAClBsL,EAAKyI,OAAS,KAAKC,iBAAiBzU,EAAMU,QAAQ,EAAO,KAAKX,QAAQ+G,aAAe,GAChFiH,KAAAA,iCACAwG,KAAAA,kBAAkBxI,GAAM,GAExBlB,KAAAA,YAAcoJ,EACdnJ,KAAAA,QAAUoJ,EACVnJ,KAAAA,SAAWoJ,EACXnJ,KAAAA,SAAWoJ,EACXxJ,KAAAA,WAAayJ,EACX,KAAK3F,WAAW3C,EAAM,uBAK/BqN,EAAKkC,qBAAuB,SAASvP,EAAMyI,EAAQ1C,GAC7CmC,IAAAA,EAAW,KAAKpJ,YAAaqJ,EAAa,KAAKpJ,QAC/CqJ,EAAc,KAAKpJ,SAAUqJ,EAAc,KAAKpJ,SAAUqJ,EAAY,KAAKzJ,WAqBxE,OAnBFQ,KAAAA,qBACA4I,KAAAA,aAAajI,GACd,KAAKhM,QAAQ+G,aAAe,IAC5BiF,EAAKqH,QAAUtB,GAEdjH,KAAAA,aAAc,EACdC,KAAAA,QAAUiB,EAAKqH,MACfrI,KAAAA,SAAW,EACXC,KAAAA,SAAW,EACXJ,KAAAA,YAAa,EAElBmB,EAAKyI,OAAS,KAAKuD,iBAAiBvD,GAAQ,GACvCD,KAAAA,kBAAkBxI,GAAM,GAExBlB,KAAAA,YAAcoJ,EACdnJ,KAAAA,QAAUoJ,EACVnJ,KAAAA,SAAWoJ,EACXnJ,KAAAA,SAAWoJ,EACXxJ,KAAAA,WAAayJ,EACX,KAAK3F,WAAW3C,EAAM,4BAK/BqN,EAAK7E,kBAAoB,SAASxI,EAAM6R,GAClCC,IAAAA,EAAeD,GAAmB,KAAKhV,OAAS5I,EAAMO,OACtDud,EAAY,KAAKvgB,OAAQwgB,GAAY,EAErCF,GAAAA,EACF9R,EAAKuC,KAAO,KAAKoF,mBACjB3H,EAAKmC,YAAa,EACb8P,KAAAA,YAAYjS,GAAM,OAClB,CACDkS,IAAAA,EAAY,KAAKle,QAAQ+G,aAAe,IAAM,KAAKoX,kBAAkBnS,EAAKyI,QACzEsJ,IAAaG,IAChBF,EAAY,KAAKrT,gBAAgB,KAAKtE,OAIrB6X,GACRtQ,KAAAA,iBAAiB5B,EAAK5F,MAAO,6EAIpCgY,IAAAA,EAAY,KAAKlT,OAChBA,KAAAA,OAAS,GACV8S,IAAkBxgB,KAAAA,QAAS,GAI1BygB,KAAAA,YAAYjS,GAAO+R,IAAcC,IAAcH,GAAmB,KAAKM,kBAAkBnS,EAAKyI,SACnGzI,EAAKuC,KAAO,KAAKgC,YAAW,GAC5BvE,EAAKmC,YAAa,EACbO,KAAAA,uBAAuB1C,EAAKuC,KAAKA,MACjCrD,KAAAA,OAASkT,EAEXC,KAAAA,oBAED,KAAK7gB,QAAUwO,EAAKwH,IAEjB1B,KAAAA,UAAU9F,EAAKwH,GAAI,QAErBhW,KAAAA,OAASugB,GAGhB1E,EAAK8E,kBAAoB,SAAS1J,GAC3B,IAAA,IAAIjW,EAAI,EAAGyU,EAAOwB,EAAQjW,EAAIyU,EAAKxU,OAAQD,GAAK,EACnD,CAGIoU,GAAe,eAFPK,EAAKzU,GAEPqK,KAAgC,OAAA,EAErC,OAAA,GAMTwQ,EAAK4E,YAAc,SAASjS,EAAMsS,GAI3B,IAHDjQ,IAEAkQ,EAAW,GACN/f,EAAI,EAAGyU,EAAOjH,EAAKyI,OAAQjW,EAAIyU,EAAKxU,OAAQD,GAAK,EACxD,CACIoU,IAAAA,EAAQK,EAAKzU,GALN,KAOJsT,UAAUc,EAAO,MAAO0L,EAAkB,KAAOC,KAU5DlF,EAAKiC,cAAgB,SAAS/C,EAAOE,EAAoBD,EAAY7K,GAI5D,IAHHU,IAEAqK,EAAO,GAAIvB,GAAQ,GACf,KAAKvK,IAAI2L,IAAQ,CACnB,GAACpB,EAGIA,GAAQ,OADXsB,GANK,KAKFjL,OAAOvN,EAAMW,OAChB6X,GANK,KAMwBpL,mBAAmBkL,GAAU,MAG5DvB,IAAAA,OAAO,EACPwB,GAVO,KAUc3P,OAAS5I,EAAMW,MACpCoW,EAAM,KAXC,KAYKnO,OAAS5I,EAAMmB,UAC7B4V,EAbS,KAaIoB,YAAYzK,GACrBA,GAdK,KAc4B9E,OAAS5I,EAAMW,OAAS+M,EAAuBnB,cAAgB,IAChGmB,EAAuBnB,cAflB,KAeyCpG,QAElD4Q,EAjBS,KAiBIrD,kBAAiB,EAAOhG,GAEvC+K,EAAKrQ,KAAK2O,GAEL0B,OAAAA,GAGTW,EAAK7C,gBAAkB,SAASvR,GAC1BmB,IAAAA,EAAQnB,EAAImB,MACZC,EAAMpB,EAAIoB,IACVzG,EAAOqF,EAAIrF,MAEX,KAAKkL,aAAwB,UAATlL,GACfgO,KAAAA,iBAAiBxH,EAAO,wDAC7B,KAAK2E,SAAoB,UAATnL,GACXgO,KAAAA,iBAAiBxH,EAAO,8DAC7B,KAAKmF,UAAU3L,IACV6N,KAAAA,MAAMrH,EAAQ,uBAAyBxG,EAAO,KACnD,KAAKI,QAAQ+G,YAAc,IACmB,IAAhD,KAAKP,MAAMwD,MAAM5D,EAAOC,GAAKmY,QAAQ,SAC9B,KAAKhhB,OAAS,KAAKiM,oBAAsB,KAAKlM,eAChDqB,KAAKgB,KACL,KAAKmL,SAAoB,UAATnL,GACZgO,KAAAA,iBAAiBxH,EAAO,yDAC5BwH,KAAAA,iBAAiBxH,EAAQ,gBAAkBxG,EAAO,mBAQ3DyZ,EAAKrI,WAAa,SAASyN,EAAS1G,GAC9B/L,IAAAA,EAAO,KAAKC,YAqBTD,OApBHyS,GAA0C,UAA/B,KAAKze,QAAQmH,gBAA6BsX,GAAU,GAC/D,KAAK5V,OAAS5I,EAAML,KACtBoM,EAAKpM,KAAO,KAAKkJ,MACR,KAAKD,KAAK1J,SACnB6M,EAAKpM,KAAO,KAAKiJ,KAAK1J,QAMH,UAAd6M,EAAKpM,MAAkC,aAAdoM,EAAKpM,MAC9B,KAAK0K,aAAe,KAAKD,aAAe,GAAkD,KAA7C,KAAK7D,MAAM0I,WAAW,KAAK7E,eACtEE,KAAAA,QAAQ2G,OAGVjE,KAAAA,aAEFJ,KAAAA,OACA8B,KAAAA,WAAW3C,EAAM,cACjByS,GAAgBjI,KAAAA,gBAAgBxK,GAC9BA,GAKTqN,EAAKU,WAAa,WACX,KAAK/O,WAAiBA,KAAAA,SAAW,KAAK5E,OAEvC4F,IAAAA,EAAO,KAAKC,YAST,OARFY,KAAAA,OACD,KAAKhE,OAAS5I,EAAMY,MAAQ,KAAKqM,sBAAyB,KAAKrE,OAAS5I,EAAMmC,OAAS,KAAKyG,KAAKxJ,YACnG2M,EAAK0S,UAAW,EAChB1S,EAAKmG,SAAW,OAEhBnG,EAAK0S,SAAW,KAAK9R,IAAI3M,EAAMmC,MAC/B4J,EAAKmG,SAAW,KAAKwB,oBAEhB,KAAKhF,WAAW3C,EAAM,oBAG/BqN,EAAKyB,WAAa,WACX,KAAK7P,WAAiBA,KAAAA,SAAW,KAAK7E,OAEvC4F,IAAAA,EAAO,KAAKC,YAGT,OAFFY,KAAAA,OACLb,EAAKmG,SAAW,KAAKkI,gBAAgB,MAAM,GACpC,KAAK1L,WAAW3C,EAAM,oBAG/B,IAAI2S,EAAOvV,EAAOjE,UAQlBwZ,EAAKlR,MAAQ,SAASlP,EAAKqgB,GACrB7V,IAAAA,EAAMxC,EAAY,KAAKC,MAAOjI,GAClCqgB,GAAW,KAAO7V,EAAIlD,KAAO,IAAMkD,EAAIhD,OAAS,IAC5C8Y,IAAAA,EAAM,IAAIC,YAAYF,GAEpBC,MADNA,EAAItgB,IAAMA,EAAKsgB,EAAI9V,IAAMA,EAAK8V,EAAIE,SAAW,KAAKxgB,IAC5CsgB,GAGRF,EAAK/Q,iBAAmB+Q,EAAKlR,MAE7BkR,EAAKzU,YAAc,WACb,GAAA,KAAKlK,QAAQwH,UACR,OAAA,IAAI5B,EAAS,KAAKmE,QAAS,KAAKxL,IAAM,KAAKsL,YAItD,IAAImV,EAAO5V,EAAOjE,UAGd3D,EAAS0D,OAAO1D,QAAU,SAASyd,GAE7BC,IADJC,IAAAA,EAAU,GAAID,EAAMzD,UAAUhd,OAAS,EACnCygB,KAAQ,GAAIC,EAASD,GAAQzD,UAAWyD,EAAM,GAEjD,IAAA,IAAI1gB,EAAI,EAAGyU,EAAOkM,EAAS3gB,EAAIyU,EAAKxU,OAAQD,GAAK,EAAG,CACnDoG,IAAAA,EAASqO,EAAKzU,GAEb,IAAA,IAAI6W,KAAOzQ,EACVU,EAAIV,EAAQyQ,KACd4J,EAAO5J,GAAOzQ,EAAOyQ,IAIpB4J,OAAAA,GAKTD,EAAK3T,mBAAqB,WAKnBD,KAAAA,WAAW/C,KAAK,CAAC+W,IAAK,GAAIC,QAAS,GAAIC,SAAU,GAAIC,cAAe,MAG3EP,EAAKX,kBAAoB,WAClBjT,KAAAA,WAAW8F,OAGlB8N,EAAK3N,kBAAoB,WACnBmO,IAAAA,EAAc,KAAKpU,WAAW,KAAKA,WAAW3M,OAAS,GACvDghB,EAAa,CAACL,IAAK,GAAIC,QAAS,GAAIC,SAAU,GAAIC,cAAe,IAEhEnU,KAAAA,WAAW/C,KAAKoX,GACrBje,EAAOie,EAAWF,cAAeC,EAAYH,QAASG,EAAYD,gBAGpEP,EAAKxM,iBAAmB,WAClBiN,IAAAA,EAAa,KAAKrU,WAAW8F,MAC7BsO,EAAc,KAAKpU,WAAW,KAAKA,WAAW3M,OAAS,GAE3D+C,EAAOge,EAAYF,SAAUG,EAAWL,IAAKK,EAAWH,WAO1DN,EAAK/F,kBAAoB,SAASrZ,GAC5B8f,IAAAA,EAAe,KAAKtU,WAAW,KAAKA,WAAW3M,OAAS,GAErD,OAAC6G,EAAIoa,EAAaL,QAASzf,KAAU0F,EAAIoa,EAAaH,cAAe3f,IAQ9Eof,EAAK9F,sBAAwB,SAAStZ,GAChC8f,IAAAA,EAAe,KAAKtU,WAAW,KAAKA,WAAW3M,OAAS,GAErD,OAAC6G,EAAIoa,EAAaL,QAASzf,KAAU0F,EAAIoa,EAAaN,IAAKxf,KAAU0F,EAAIoa,EAAaJ,SAAU1f,IAGzGof,EAAK7F,eAAiB,SAASvZ,GACxBwL,KAAAA,WAAW,KAAKA,WAAW3M,OAAS,GAAG2gB,IAAIxf,IAAQ,GAG1Dof,EAAK5F,mBAAqB,SAASxZ,GAC5BwL,KAAAA,WAAW,KAAKA,WAAW3M,OAAS,GAAG4gB,QAAQzf,IAAQ,GAG9D,IAAI+f,EAAO,SAAcC,EAAQrhB,EAAKwK,GAC/BF,KAAAA,KAAO,GACPzC,KAAAA,MAAQ7H,EACR8H,KAAAA,IAAM,EACPuZ,EAAO5f,QAAQwH,YACVuB,KAAAA,IAAM,IAAI7C,EAAe0Z,EAAQ7W,IACtC6W,EAAO5f,QAAQ6H,mBACVvB,KAAAA,WAAasZ,EAAO5f,QAAQ6H,kBACjC+X,EAAO5f,QAAQ2H,SACVqB,KAAAA,MAAQ,CAACzK,EAAK,KA85ExB,QAAA,KAAA,EAz5ED,IAAIshB,EAAOzW,EAAOjE,UAYlB,SAAS2X,GAAa9Q,EAAMnD,EAAMtK,EAAKwK,GAO9BiD,OANPA,EAAKnD,KAAOA,EACZmD,EAAK3F,IAAM9H,EACP,KAAKyB,QAAQwH,YACbwE,EAAKjD,IAAI1C,IAAM0C,GACf,KAAK/I,QAAQ2H,SACbqE,EAAKhD,MAAM,GAAKzK,GACbyN,EAjBT6T,EAAK5T,UAAY,WACR,OAAA,IAAI0T,EAAK,KAAM,KAAKvZ,MAAO,KAAKsC,WAGzCmX,EAAKtK,YAAc,SAAShX,EAAKwK,GACxB,OAAA,IAAI4W,EAAK,KAAMphB,EAAKwK,IAe7B8W,EAAKlR,WAAa,SAAS3C,EAAMnD,GACxBiU,OAAAA,GAAarX,KAAK,KAAMuG,EAAMnD,EAAM,KAAKyB,WAAY,KAAKH,gBAKnE0V,EAAK/C,aAAe,SAAS9Q,EAAMnD,EAAMtK,EAAKwK,GACrC+T,OAAAA,GAAarX,KAAK,KAAMuG,EAAMnD,EAAMtK,EAAKwK,IAOlD,IAAI+W,GAAa,SAAoB1X,EAAO2X,EAAQC,EAAeC,EAAU7M,GACtEhL,KAAAA,MAAQA,EACR2X,KAAAA,SAAWA,EACXC,KAAAA,gBAAkBA,EAClBC,KAAAA,SAAWA,EACX7M,KAAAA,YAAcA,GAg3EpB,QAAA,WAAA,GA72ED,IAAI8M,GAAU,CACZC,OAAQ,IAAIL,GAAW,KAAK,GAC5BM,OAAQ,IAAIN,GAAW,KAAK,GAC5BO,OAAQ,IAAIP,GAAW,MAAM,GAC7BQ,OAAQ,IAAIR,GAAW,KAAK,GAC5BS,OAAQ,IAAIT,GAAW,KAAK,GAC5BU,OAAQ,IAAIV,GAAW,KAAK,GAAM,EAAM,SAAU3Z,GAAYA,OAAAA,EAAEsa,yBAChEC,OAAQ,IAAIZ,GAAW,YAAY,GACnCa,OAAQ,IAAIb,GAAW,YAAY,GACnCc,WAAY,IAAId,GAAW,YAAY,GAAM,EAAO,MAAM,GAC1De,MAAO,IAAIf,GAAW,YAAY,GAAO,EAAO,MAAM,IAm2EvD,QAAA,YAAA,GAh2ED,IAAIgB,GAAO1X,EAAOjE,UAElB2b,GAAKtW,eAAiB,WACb,MAAA,CAAC0V,GAAQC,SAGlBW,GAAKC,aAAe,SAASC,GACvBC,IAAAA,EAAS,KAAKC,aACdD,OAAAA,IAAWf,GAAQS,QAAUM,IAAWf,GAAQQ,SAEhDM,IAAa/gB,EAAMa,OAAUmgB,IAAWf,GAAQC,QAAUc,IAAWf,GAAQE,OAM7EY,IAAa/gB,EAAMkD,SAAW6d,IAAa/gB,EAAML,MAAQ,KAAK6K,YACvD/F,EAAU9F,KAAK,KAAK4H,MAAMwD,MAAM,KAAKM,WAAY,KAAKlE,QAC7D4a,IAAa/gB,EAAM6C,OAASke,IAAa/gB,EAAMY,MAAQmgB,IAAa/gB,EAAMI,KAAO2gB,IAAa/gB,EAAMU,QAAUqgB,IAAa/gB,EAAMgB,QAEjI+f,IAAa/gB,EAAMO,OACZygB,IAAWf,GAAQC,OAC1Ba,IAAa/gB,EAAMsD,MAAQyd,IAAa/gB,EAAML,OAE1C,KAAK6K,cAbDwW,EAAOlB,SAgBrBe,GAAKK,mBAAqB,WAGnB,IAFD9S,IAEK7P,EAAI,KAAK+L,QAAQ9L,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAC7C+L,IAAAA,EAHO,KAGUA,QAAQ/L,GACzB+L,GAAkB,aAAlBA,EAAQnC,MACDmC,OAAAA,EAAQ6I,UAEd,OAAA,GAGT0N,GAAKnhB,cAAgB,SAASqhB,GACxBzN,IAAAA,EAAQ1K,EAAO,KAAKA,KACpBA,EAAK1J,SAAW6hB,IAAa/gB,EAAMc,IAC9B0J,KAAAA,aAAc,GACd8I,EAAS1K,EAAKlJ,eACnB4T,EAAO9N,KAAK,KAAMub,GAEbvW,KAAAA,YAAc5B,EAAKzJ,YAK9Ba,EAAMU,OAAOhB,cAAgBM,EAAMQ,OAAOd,cAAgB,WACpD,GAAwB,IAAxB,KAAK4K,QAAQ9L,OAAb,CAIA2iB,IAAAA,EAAM,KAAK7W,QAAQ2G,MACnBkQ,IAAQlB,GAAQC,QAAsC,aAA5B,KAAKe,aAAa9Y,QAC9CgZ,EAAM,KAAK7W,QAAQ2G,OAEhBzG,KAAAA,aAAe2W,EAAIrB,YAPjBtV,KAAAA,aAAc,GAUvBxK,EAAMO,OAAOb,cAAgB,SAASqhB,GAC/BzW,KAAAA,QAAQlC,KAAK,KAAK0Y,aAAaC,GAAYd,GAAQC,OAASD,GAAQE,QACpE3V,KAAAA,aAAc,GAGrBxK,EAAMqB,aAAa3B,cAAgB,WAC5B4K,KAAAA,QAAQlC,KAAK6X,GAAQG,QACrB5V,KAAAA,aAAc,GAGrBxK,EAAMS,OAAOf,cAAgB,SAASqhB,GAChCK,IAAAA,EAAkBL,IAAa/gB,EAAMiD,KAAO8d,IAAa/gB,EAAM+C,MAAQge,IAAa/gB,EAAMyD,OAASsd,IAAa/gB,EAAMwD,OACrH8G,KAAAA,QAAQlC,KAAKgZ,EAAkBnB,GAAQI,OAASJ,GAAQK,QACxD9V,KAAAA,aAAc,GAGrBxK,EAAMwB,OAAO9B,cAAgB,aAI7BM,EAAMgD,UAAUtD,cAAgBM,EAAM6D,OAAOnE,cAAgB,SAASqhB,GAChEA,EAAS5hB,YAAc4hB,IAAa/gB,EAAMY,MAAQmgB,IAAa/gB,EAAM6C,QAClEke,IAAa/gB,EAAMa,OAASkgB,IAAa/gB,EAAMO,QAAW,KAAK0gB,eAAiBhB,GAAQC,QACtF5V,KAAAA,QAAQlC,KAAK6X,GAAQS,QAErBpW,KAAAA,QAAQlC,KAAK6X,GAAQQ,QACzBjW,KAAAA,aAAc,GAGrBxK,EAAMoB,UAAU1B,cAAgB,WAC1B,KAAKuhB,eAAiBhB,GAAQM,OACzBjW,KAAAA,QAAQ2G,MAER3G,KAAAA,QAAQlC,KAAK6X,GAAQM,QACzB/V,KAAAA,aAAc,GAGrBxK,EAAMmC,KAAKzC,cAAgB,SAASqhB,GAC9BA,GAAAA,IAAa/gB,EAAMgD,UAAW,CAC5B4D,IAAAA,EAAQ,KAAK0D,QAAQ9L,OAAS,EAC9B,KAAK8L,QAAQ1D,KAAWqZ,GAAQS,OAC3BpW,KAAAA,QAAQ1D,GAASqZ,GAAQU,WAEzBrW,KAAAA,QAAQ1D,GAASqZ,GAAQW,MAE/BpW,KAAAA,aAAc,GAGrBxK,EAAML,KAAKD,cAAgB,SAASqhB,GAC9BM,IAAAA,GAAU,EACV,KAAKthB,QAAQ+G,aAAe,GAAKia,IAAa/gB,EAAMc,MACnC,OAAf,KAAK+H,QAAmB,KAAK2B,aACd,UAAf,KAAK3B,OAAqB,KAAKqY,wBAC/BG,GAAU,GAEX7W,KAAAA,YAAc6W,GAGrB,IAAIC,GAAO,CACA,MAAA,CACP,QACA,kBACA,OACA,aACA,QACA,MACA,WACA,eACA,SACA,gBACA,SACA,iBACA,KACA,QACA,0BACA,OACA,0BACA,OACA,0BACA,MACA,+BACA,QACA,0BACA,MACA,0BACA,MACA,OACA,+BACA,KACA,aACA,MACA,YACA,MACA,QACA,kBACA,iBACA,sBACA,qBACA,WACA,MACA,gBACA,UACA,kBACA,SACA,YACA,MACA,sBACA,OACA,uBACA,OACA,cACA,MACA,WACA,MACA,cACA,OACA,eACA,SACA,0BACA,MACA,YACA,QACA,OACA,0BACA,QACA,iBACA,UACA,sBACA,SACA,iBACA,QACA,UACA,qBACA,KACA,oBACA,QACA,cACA,KACA,uBACA,OACA,oBACA,QACA,YACA,QACA,qBACA,KACA,cACA,QACA,eACA,OACA,YACA,QAEkB,iBAAA,CAClB,eACA,KACA,oBACA,KACA,wBACA,KACA,UACA,KACA,QACA,kBACA,KACA,mBACA,KACA,iBACA,KACA,QACA,iBACA,KACA,oBACA,KACA,SACA,KACA,sBACA,KACA,SACA,IACA,gBACA,KACA,iBACA,KACA,mBACA,KACA,OACA,IACA,iBACA,cACA,KACA,kBACA,KACA,kBACA,KACA,kBACA,KACA,SACA,IACA,mBACA,KACA,QACA,IACA,eACA,KACA,eACA,KACA,oBACA,KACA,eACA,KACA,sBACA,KACA,cACA,KACA,cACA,IACA,QACA,YACA,IACA,kBACA,KACA,eACA,KACA,YACA,KACA,SACA,IACA,mBACA,KACA,aACA,KACA,mBACA,MAEQ,OAAA,CACR,QACA,OACA,OACA,wBACA,OACA,SACA,OACA,WACA,OACA,UACA,OACA,WACA,OACA,QACA,OACA,YACA,OACA,QACA,OACA,UACA,OACA,YACA,OACA,WACA,OACA,SACA,OACA,UACA,OACA,WACA,OACA,QACA,OACA,sBACA,OACA,SACA,OACA,qBACA,OACA,SACA,OACA,OACA,WACA,OACA,SACA,OACA,SACA,OACA,OACA,YACA,OACA,UACA,OACA,WACA,OACA,UACA,OACA,aACA,OACA,WACA,OACA,uBACA,OACA,UACA,OACA,WACA,OACA,WACA,OACA,aACA,OACA,SACA,OACA,UACA,OACA,QACA,OACA,WACA,OACA,WACA,OACA,MACA,OACA,SACA,OACA,UACA,OACA,SACA,OACA,SACA,OACA,WACA,OACA,mBACA,OACA,YACA,OACA,OACA,wBACA,OACA,yBACA,OACA,WACA,OACA,SACA,OACA,UACA,OACA,WACA,OACA,WACA,OACA,aACA,OACA,QACA,OACA,SACA,OACA,YACA,OACA,MACA,OACA,QACA,OACA,SACA,OACA,QACA,OACA,WACA,OACA,WACA,OACA,OACA,SACA,OACA,SACA,OACA,WACA,OACA,YACA,OACA,UACA,OACA,aACA,OACA,UACA,OACA,gBACA,OACA,eACA,OACA,gBACA,OACA,mBACA,OACA,uBACA,OACA,OACA,OACA,OACA,YACA,OACA,MACA,OACA,UACA,OACA,UACA,OACA,YACA,OACA,cACA,OACA,OACA,MACA,OACA,QACA,OACA,QACA,OACA,WACA,OACA,gBACA,OACA,aACA,OACA,oBACA,OACA,aACA,OACA,cACA,OACA,oBACA,OACA,aACA,OACA,QACA,OACA,QACA,OACA,UACA,OACA,eACA,OACA,YACA,OACA,cACA,OACA,WACA,OACA,aACA,OACA,kBACA,OACA,SACA,OACA,QACA,OACA,YACA,OACA,aACA,OACA,UACA,OACA,UACA,OACA,UACA,OACA,cACA,OACA,UACA,OACA,eACA,OACA,UACA,OACA,YACA,OACA,eACA,OACA,SACA,OACA,UACA,OACA,WACA,OACA,SACA,OACA,WACA,OACA,WACA,OACA,QACA,OACA,QACA,OACA,SACA,OACA,SACA,OACA,SACA,OACA,OACA,UACA,OACA,WACA,OACA,UACA,OACA,WACA,OACA,MACA,OACA,cACA,OACA,KACA,OACA,mBACA,SAGJ5b,MAAMR,UAAUkD,KAAKmZ,MAAMD,GAAKE,MAAOF,GAAKG,kBAC5CH,GAAKI,GAAKJ,GAAKG,iBACfH,GAAKK,GAAKL,GAAKM,kBAAoBN,GAAKO,IAAMP,GAAKQ,OAEnD,IAAIC,GAAO5Y,EAAOjE,UAEd8c,GAAwB,SAA+BrC,GACpDA,KAAAA,OAASA,EACTsC,KAAAA,WAAa,OAAStC,EAAO5f,QAAQ+G,aAAe,EAAI,KAAO,KAAO6Y,EAAO5f,QAAQ+G,aAAe,EAAI,IAAM,IAC9GnC,KAAAA,OAAS,GACTsX,KAAAA,MAAQ,GACR9V,KAAAA,MAAQ,EACR+b,KAAAA,SAAU,EACVC,KAAAA,SAAU,EACV7jB,KAAAA,IAAM,EACN8jB,KAAAA,aAAe,EACfC,KAAAA,gBAAkB,GAClBC,KAAAA,6BAA8B,EAC9BC,KAAAA,mBAAqB,EACrBC,KAAAA,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","file":"GriffeathMachine.72e610db.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n/**\n *\n * @desc Reduced subset of Utils, used exclusively in gpu-core.js\n * Various utility functions / snippets of code that GPU.JS uses internally.\\\n * This covers various snippets of code that is not entirely gpu.js specific (ie. may find uses elsewhere)\n *\n * Note that all methods in this class is 'static' by nature `UtilsCore.functionName()`\n *\n * @class UtilsCore\n *\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UtilsCore = function () {\n\tfunction UtilsCore() {\n\t\t_classCallCheck(this, UtilsCore);\n\t}\n\n\t_createClass(UtilsCore, null, [{\n\t\tkey: 'isCanvas',\n\n\n\t\t/**\n   * @typedef {Object} webGlContext\n   */\n\n\t\t/**\n   * @typedef {Object} CanvasDOMObject\n   */\n\n\t\t//-----------------------------------------------------------------------------\n\t\t//\n\t\t//  Canvas validation and support\n\t\t//\n\t\t//-----------------------------------------------------------------------------\n\n\t\t/**\n   * @name isCanvas\n   * @static\n   * @function\n   * @memberOf UtilsCore\n   *\n   *\n   * @desc Return TRUE, on a valid DOM canvas or OffscreenCanvas object\n   *\n   * Note: This does just a VERY simply sanity check. And may give false positives.\n   *\n   * @param {CanvasDOMObject} canvasObj - Object to validate\n   *\n   * @returns {Boolean} TRUE if the object is a DOM canvas or OffscreenCanvas\n   *\n   */\n\t\tvalue: function isCanvas(canvasObj) {\n\t\t\treturn canvasObj !== null && (canvasObj.nodeName && canvasObj.getContext && canvasObj.nodeName.toUpperCase() === 'CANVAS' || typeof OffscreenCanvas !== 'undefined' && canvasObj instanceof OffscreenCanvas);\n\t\t}\n\n\t\t/**\n   * @name isCanvasSupported\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Return TRUE, if browser supports canvas\n   *\n   * @returns {Boolean} TRUE if browser supports canvas\n   *\n   */\n\n\t}, {\n\t\tkey: 'isCanvasSupported',\n\t\tvalue: function isCanvasSupported() {\n\t\t\treturn _isCanvasSupported;\n\t\t}\n\n\t\t/**\n   * @name initCanvas\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Initiate and returns a canvas, for usage in init_webgl.\n   * Returns only if canvas is supported by browser.\n   *\n   * @returns {CanvasDOMObject} CanvasDOMObject if supported by browser, else null\n   *\n   */\n\n\t}, {\n\t\tkey: 'initCanvas',\n\t\tvalue: function initCanvas() {\n\t\t\t// Fail fast if browser previously detected no support\n\t\t\tif (!_isCanvasSupported) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Create a new canvas DOM\n\t\t\tvar canvas = typeof document !== 'undefined' ? document.createElement('canvas') : new OffscreenCanvas(0, 0);\n\n\t\t\t// Default width and height, to fix webgl issue in safari\n\t\t\tcanvas.width = 2;\n\t\t\tcanvas.height = 2;\n\n\t\t\t// Returns the canvas\n\t\t\treturn canvas;\n\t\t}\n\n\t\t//-----------------------------------------------------------------------------\n\t\t//\n\t\t//  Webgl validation and support\n\t\t//\n\t\t//-----------------------------------------------------------------------------\n\n\n\t\t/**\n   *\n   * @name isWebGl\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Return TRUE, on a valid webGlContext object\n   *\n   * Note: This does just a VERY simply sanity check. And may give false positives.\n   *\n   * @param {webGlContext} webGlObj - Object to validate\n   *\n   * @returns {Boolean} TRUE if the object is a webGlContext object\n   *\n   */\n\n\t}, {\n\t\tkey: 'isWebGl',\n\t\tvalue: function isWebGl(webGlObj) {\n\t\t\treturn webGlObj && typeof webGlObj.getExtension === 'function';\n\t\t}\n\n\t\t/**\n   *\n   * @name isWebGl2\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Return TRUE, on a valid webGl2Context object\n   *\n   * Note: This does just a VERY simply sanity check. And may give false positives.\n   *\n   * @param {webGlContext} webGl2Obj - Object to validate\n   *\n   * @returns {Boolean} TRUE if the object is a webGl2Context object\n   *\n   */\n\n\t}, {\n\t\tkey: 'isWebGl2',\n\t\tvalue: function isWebGl2(webGl2Obj) {\n\t\t\treturn webGl2Obj && typeof WebGL2RenderingContext !== 'undefined' && webGl2Obj instanceof WebGL2RenderingContext;\n\t\t}\n\n\t\t/**\n   * @name isWebGlSupported\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Return TRUE, if browser supports webgl\n   *\n   * @returns {Boolean} TRUE if browser supports webgl\n   *\n   */\n\n\t}, {\n\t\tkey: 'isWebGlSupported',\n\t\tvalue: function isWebGlSupported() {\n\t\t\treturn _isWebGlSupported;\n\t\t}\n\n\t\t/**\n   * @name isWebGlSupported2\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Return TRUE, if browser supports webgl2\n   *\n   * @returns {Boolean} TRUE if browser supports webgl2\n   *\n   */\n\n\t}, {\n\t\tkey: 'isWebGl2Supported',\n\t\tvalue: function isWebGl2Supported() {\n\t\t\treturn _isWebGl2Supported;\n\t\t}\n\t}, {\n\t\tkey: 'isWebGlDrawBuffersSupported',\n\t\tvalue: function isWebGlDrawBuffersSupported() {\n\t\t\treturn _isWebGlDrawBuffersSupported;\n\t\t}\n\n\t\t// Default webgl options to use\n\n\t}, {\n\t\tkey: 'initWebGlDefaultOptions',\n\t\tvalue: function initWebGlDefaultOptions() {\n\t\t\treturn {\n\t\t\t\talpha: false,\n\t\t\t\tdepth: false,\n\t\t\t\tantialias: false\n\t\t\t};\n\t\t}\n\n\t\t/**\n   * @name initWebGl\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Initiate and returns a webGl, from a canvas object\n   * Returns only if webGl is supported by browser.\n   *\n   * @param {CanvasDOMObject} canvasObj - Object to validate\n   *\n   * @returns {CanvasDOMObject} CanvasDOMObject if supported by browser, else null\n   *\n   */\n\n\t}, {\n\t\tkey: 'initWebGl',\n\t\tvalue: function initWebGl(canvasObj) {\n\n\t\t\t// First time setup, does the browser support check memorizer\n\t\t\tif (typeof _isCanvasSupported !== 'undefined' || canvasObj === null) {\n\t\t\t\tif (!_isCanvasSupported) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fail fast for invalid canvas object\n\t\t\tif (!UtilsCore.isCanvas(canvasObj)) {\n\t\t\t\tthrow new Error('Invalid canvas object - ' + canvasObj);\n\t\t\t}\n\n\t\t\t// Create a new canvas DOM\n\t\t\tvar webGl = null;\n\t\t\tvar defaultOptions = UtilsCore.initWebGlDefaultOptions();\n\t\t\ttry {\n\t\t\t\twebGl = canvasObj.getContext('experimental-webgl', defaultOptions);\n\t\t\t} catch (e) {\n\t\t\t\t// 'experimental-webgl' is not a supported context type\n\t\t\t\t// fallback to 'webgl2' or 'webgl' below\n\t\t\t}\n\n\t\t\tif (webGl === null) {\n\t\t\t\twebGl = canvasObj.getContext('webgl2', defaultOptions) || canvasObj.getContext('webgl', defaultOptions);\n\t\t\t}\n\n\t\t\tif (webGl) {\n\t\t\t\t// Get the extension that is needed\n\t\t\t\twebGl.OES_texture_float = webGl.getExtension('OES_texture_float');\n\t\t\t\twebGl.OES_texture_float_linear = webGl.getExtension('OES_texture_float_linear');\n\t\t\t\twebGl.OES_element_index_uint = webGl.getExtension('OES_element_index_uint');\n\t\t\t}\n\n\t\t\t// Returns the canvas\n\t\t\treturn webGl;\n\t\t}\n\n\t\t/**\n   * @name initWebGl2\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Initiate and returns a webGl, from a canvas object\n   * Returns only if webGl is supported by browser.\n   *\n   * @param {CanvasDOMObject} canvasObj - Object to validate\n   *\n   * @returns {CanvasDOMObject} CanvasDOMObject if supported by browser, else null\n   *\n   */\n\n\t}, {\n\t\tkey: 'initWebGl2',\n\t\tvalue: function initWebGl2(canvasObj) {\n\n\t\t\t// First time setup, does the browser support check memorizer\n\t\t\tif (typeof _isCanvasSupported !== 'undefined' || canvasObj === null) {\n\t\t\t\tif (!_isCanvasSupported) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fail fast for invalid canvas object\n\t\t\tif (!UtilsCore.isCanvas(canvasObj)) {\n\t\t\t\tthrow new Error('Invalid canvas object - ' + canvasObj);\n\t\t\t}\n\n\t\t\t// Create a new canvas DOM\n\t\t\treturn canvasObj.getContext('webgl2', UtilsCore.initWebGlDefaultOptions());\n\t\t}\n\n\t\t/**\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   * @param {number[]} output\n   * @throws if not correctly defined\n   */\n\n\t}, {\n\t\tkey: 'checkOutput',\n\t\tvalue: function checkOutput(output) {\n\t\t\tif (!output || !Array.isArray(output)) throw new Error('kernel.output not an array');\n\t\t\tfor (var i = 0; i < output.length; i++) {\n\t\t\t\tif (isNaN(output[i]) || output[i] < 1) {\n\t\t\t\t\tthrow new Error('kernel.output[' + i + '] incorrectly defined as `' + output[i] + '`, needs to be numeric, and greater than 0');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn UtilsCore;\n}();\n\n//-----------------------------------------------------------------------------\n//\n//  Canvas & Webgl validation and support constants\n//\n//-----------------------------------------------------------------------------\n\nvar _isCanvasSupported = typeof document !== 'undefined' ? UtilsCore.isCanvas(document.createElement('canvas')) : typeof OffscreenCanvas !== 'undefined';\nvar _testingWebGl = UtilsCore.initWebGl(UtilsCore.initCanvas());\nvar _testingWebGl2 = UtilsCore.initWebGl2(UtilsCore.initCanvas());\nvar _isWebGlSupported = UtilsCore.isWebGl(_testingWebGl);\nvar _isWebGl2Supported = UtilsCore.isWebGl2(_testingWebGl2);\nvar _isWebGlDrawBuffersSupported = _isWebGlSupported && Boolean(_testingWebGl.getExtension('WEBGL_draw_buffers'));\n\nif (_isWebGlSupported) {\n\tUtilsCore.OES_texture_float = _testingWebGl.OES_texture_float;\n\tUtilsCore.OES_texture_float_linear = _testingWebGl.OES_texture_float_linear;\n\tUtilsCore.OES_element_index_uint = _testingWebGl.OES_element_index_uint;\n} else {\n\tUtilsCore.OES_texture_float = false;\n\tUtilsCore.OES_texture_float_linear = false;\n\tUtilsCore.OES_element_index_uint = false;\n}\n\nmodule.exports = UtilsCore;","\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function Input(value, size) {\n\t_classCallCheck(this, Input);\n\n\tthis.value = value;\n\tif (Array.isArray(size)) {\n\t\tthis.size = [];\n\t\tfor (var i = 0; i < size.length; i++) {\n\t\t\tthis.size[i] = size[i];\n\t\t}\n\t\twhile (this.size.length < 3) {\n\t\t\tthis.size.push(1);\n\t\t}\n\t} else {\n\t\tif (size.z) {\n\t\t\tthis.size = [size.x, size.y, size.z];\n\t\t} else if (size.y) {\n\t\t\tthis.size = [size.x, size.y, 1];\n\t\t} else {\n\t\t\tthis.size = [size.x, 1, 1];\n\t\t}\n\t}\n};","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n\n\t/**\n  * @desc WebGl Texture implementation in JS\n  * @constructor Texture\n  * @param {Object} texture\n  * @param {Array} size\n  * @param dimensions\n  * @param {Array} output\n  * @param {Object} webGl\n  * @param {String} [type]\n  */\n\tfunction Texture(texture, size, dimensions, output, webGl) {\n\t\tvar type = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'NumberTexture';\n\n\t\t_classCallCheck(this, Texture);\n\n\t\tthis.texture = texture;\n\t\tthis.size = size;\n\t\tthis.dimensions = dimensions;\n\t\tthis.output = output;\n\t\tthis.webGl = webGl;\n\t\tthis.kernel = null;\n\t\tthis.type = type;\n\t}\n\n\t/**\n  * @name toArray\n  * @function\n  * @memberOf Texture#\n  *\n  * @desc Converts the Texture into a JavaScript Array.\n  * \n  * @param {Object} The `gpu` Object\n  *\n  */\n\n\n\t_createClass(Texture, [{\n\t\tkey: 'toArray',\n\t\tvalue: function toArray(gpu) {\n\t\t\tif (!gpu) throw new Error('You need to pass the GPU object for toArray to work.');\n\t\t\tif (this.kernel) return this.kernel(this);\n\n\t\t\tthis.kernel = gpu.createKernel(function (x) {\n\t\t\t\treturn x[this.thread.z][this.thread.y][this.thread.x];\n\t\t\t}).setOutput(this.output);\n\n\t\t\treturn this.kernel(this);\n\t\t}\n\n\t\t/**\n   * @name delete\n   * @desc Deletes the Texture.\n   * @function\n   * @memberOf Texture#\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'delete',\n\t\tvalue: function _delete() {\n\t\t\treturn this.webGl.deleteTexture(this.texture);\n\t\t}\n\t}]);\n\n\treturn Texture;\n}();","'use strict';\n\n/**\n * \n * @classdesc Various utility functions / snippets of code that GPU.JS uses internally.\\\n * This covers various snippets of code that is not entirely gpu.js specific (ie. may find uses elsewhere)\n *\n * Note that all methods in this class are *static* by nature `Utils.functionName()`\n * \n * @class Utils\n * @extends UtilsCore\n *\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar UtilsCore = require(\"./utils-core\");\nvar Input = require('./input');\nvar Texture = require('./texture');\n// FUNCTION_NAME regex\nvar FUNCTION_NAME = /function ([^(]*)/;\n\n// STRIP COMMENTS regex\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n\n// ARGUMENT NAMES regex\nvar ARGUMENT_NAMES = /([^\\s,]+)/g;\n\nvar _systemEndianness = function () {\n\tvar b = new ArrayBuffer(4);\n\tvar a = new Uint32Array(b);\n\tvar c = new Uint8Array(b);\n\ta[0] = 0xdeadbeef;\n\tif (c[0] === 0xef) return 'LE';\n\tif (c[0] === 0xde) return 'BE';\n\tthrow new Error('unknown endianness');\n}();\n\nvar _isFloatReadPixelsSupported = null;\nvar _isFloatReadPixelsSupportedWebGL2 = null;\n\nvar _isMixedIdentifiersSupported = function () {\n\ttry {\n\t\tnew Function('let i = 1; const j = 1;')();\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n}();\n\nvar _hasIntegerDivisionAccuracyBug = null;\n\n/**\n * @class\n * @extends UtilsCore\n */\n\nvar Utils = function (_UtilsCore) {\n\t_inherits(Utils, _UtilsCore);\n\n\tfunction Utils() {\n\t\t_classCallCheck(this, Utils);\n\n\t\treturn _possibleConstructorReturn(this, (Utils.__proto__ || Object.getPrototypeOf(Utils)).apply(this, arguments));\n\t}\n\n\t_createClass(Utils, null, [{\n\t\tkey: 'systemEndianness',\n\n\n\t\t//-----------------------------------------------------------------------------\n\t\t//\n\t\t//  System values support (currently only endianness)\n\t\t//\n\t\t//-----------------------------------------------------------------------------\n\n\t\t/**\n   * @memberOf Utils\n   * @name systemEndianness\n   * @function\n   * @static\n   *\n   * Gets the system endianness, and cache it\n   *\n   * @returns {String} 'LE' or 'BE' depending on system architecture\n   *\n   * Credit: https://gist.github.com/TooTallNate/4750953\n   */\n\t\tvalue: function systemEndianness() {\n\t\t\treturn _systemEndianness;\n\t\t}\n\n\t\t//-----------------------------------------------------------------------------\n\t\t//\n\t\t//  Function and function string validations\n\t\t//\n\t\t//-----------------------------------------------------------------------------\n\n\t\t/**\n   * @memberOf Utils\n   * @name isFunction\n   * @function\n   * @static\n   *\n   * Return TRUE, on a JS function\n   *\n   * @param {Function} funcObj - Object to validate if its a function\n   *\n   * @returns\t{Boolean} TRUE if the object is a JS function\n   *\n   */\n\n\t}, {\n\t\tkey: 'isFunction',\n\t\tvalue: function isFunction(funcObj) {\n\t\t\treturn typeof funcObj === 'function';\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name isFunctionString\n   * @function\n   * @static\n   *\n   * Return TRUE, on a valid JS function string\n   *\n   * Note: This does just a VERY simply sanity check. And may give false positives.\n   *\n   * @param {String} funcStr - String of JS function to validate\n   *\n   * @returns {Boolean} TRUE if the string passes basic validation\n   *\n   */\n\n\t}, {\n\t\tkey: 'isFunctionString',\n\t\tvalue: function isFunctionString(funcStr) {\n\t\t\tif (funcStr !== null) {\n\t\t\t\treturn funcStr.toString().slice(0, 'function'.length).toLowerCase() === 'function';\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name getFunctionName_fromString\n   * @function\n   * @static\n   *\n   * Return the function name from a JS function string\n   *\n   * @param {String} funcStr - String of JS function to validate\n   *\n   * @returns {String} Function name string (if found)\n   *\n   */\n\n\t}, {\n\t\tkey: 'getFunctionNameFromString',\n\t\tvalue: function getFunctionNameFromString(funcStr) {\n\t\t\treturn FUNCTION_NAME.exec(funcStr)[1];\n\t\t}\n\t}, {\n\t\tkey: 'getFunctionBodyFromString',\n\t\tvalue: function getFunctionBodyFromString(funcStr) {\n\t\t\treturn funcStr.substring(funcStr.indexOf('{') + 1, funcStr.lastIndexOf('}'));\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name getParamNames_fromString\n   * @function\n   * @static\n   *\n   * Return list of parameter names extracted from the JS function string\n   *\n   * @param {String} funcStr - String of JS function to validate\n   *\n   * @returns {String[]}  Array representing all the parameter names\n   *\n   */\n\n\t}, {\n\t\tkey: 'getParamNamesFromString',\n\t\tvalue: function getParamNamesFromString(func) {\n\t\t\tvar fnStr = func.toString().replace(STRIP_COMMENTS, '');\n\t\t\tvar result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n\t\t\tif (result === null) result = [];\n\t\t\treturn result;\n\t\t}\n\n\t\t//-----------------------------------------------------------------------------\n\t\t//\n\t\t//  Object / function cloning and manipulation\n\t\t//\n\t\t//-----------------------------------------------------------------------------\n\n\t\t/**\n   * @memberOf Utils\n   * @name clone\n   * @function\n   * @static\n   *\n   * Returns a clone\n   *\n   * @param {Object} obj - Object to clone\n   *\n   * @returns {Object}  Cloned object\n   *\n   */\n\n\t}, {\n\t\tkey: 'clone',\n\t\tvalue: function clone(obj) {\n\t\t\tif (obj === null || (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj.hasOwnProperty('isActiveClone')) return obj;\n\n\t\t\tvar temp = obj.constructor(); // changed\n\n\t\t\tfor (var key in obj) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t\t\t\t\tobj.isActiveClone = null;\n\t\t\t\t\ttemp[key] = Utils.clone(obj[key]);\n\t\t\t\t\tdelete obj.isActiveClone;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn temp;\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name newPromise\n   * @function\n   * @static\n   *\n   * Returns a `new Promise` object based on the underlying implmentation\n   *\n   * @param {Function} executor - Promise builder function\n   *\n   * @returns {Promise}  Promise object\n   *\n   */\n\n\t}, {\n\t\tkey: 'newPromise',\n\t\tvalue: function newPromise(executor) {\n\t\t\tvar simple = Promise || small_promise;\n\t\t\tif (simple === null) {\n\t\t\t\tthrow TypeError('Browser is missing Promise implementation. Consider adding small_promise.js polyfill');\n\t\t\t}\n\t\t\treturn new simple(executor);\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name functionBinder\n   * @function\n   * @static\n   *\n   * Limited implementation of Function.bind, with fallback\n   *\n   * @param {Function} inFunc - to setup bind on\n   * @param {Object} thisObj - The this parameter to assume inside the binded function\n   *\n   * @returns {Function}  The binded function\n   *\n   */\n\n\t}, {\n\t\tkey: 'functionBinder',\n\t\tvalue: function functionBinder(inFunc, thisObj) {\n\t\t\tif (inFunc.bind) {\n\t\t\t\treturn inFunc.bind(thisObj);\n\t\t\t}\n\n\t\t\treturn function () {\n\t\t\t\tvar args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments);\n\t\t\t\treturn inFunc.apply(thisObj, args);\n\t\t\t};\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name isArray\n   * @function\n   * @static\n   *\n   * * Checks if is an array or Array-like object\n   *\n   * @param {Object} arg - The argument object to check if is array\n   *\n   * @returns {Boolean}  true if is array or Array-like object\n   *\n   */\n\n\t}, {\n\t\tkey: 'isArray',\n\t\tvalue: function isArray(array) {\n\t\t\tif (isNaN(array.length)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name getArgumentType\n   * @function\n   * @static\n   *\n   * Evaluate the argument type, to apply respective logic for it\n   *\n   * @param {Object} arg - The argument object to evaluate type\n   *\n   * @returns {String}  Argument type Array/Number/Float/Texture/Unknown\n   *\n   */\n\n\t}, {\n\t\tkey: 'getArgumentType',\n\t\tvalue: function getArgumentType(arg) {\n\t\t\tif (Utils.isArray(arg)) {\n\t\t\t\tif (arg[0].nodeName === 'IMG') {\n\t\t\t\t\treturn 'HTMLImageArray';\n\t\t\t\t}\n\t\t\t\treturn 'Array';\n\t\t\t} else if (typeof arg === 'number') {\n\t\t\t\tif (Number.isInteger(arg)) {\n\t\t\t\t\treturn 'Integer';\n\t\t\t\t}\n\t\t\t\treturn 'Float';\n\t\t\t} else if (arg instanceof Texture) {\n\t\t\t\treturn arg.type;\n\t\t\t} else if (arg instanceof Input) {\n\t\t\t\treturn 'Input';\n\t\t\t} else if (arg.nodeName === 'IMG') {\n\t\t\t\treturn 'HTMLImage';\n\t\t\t} else {\n\t\t\t\treturn 'Unknown';\n\t\t\t}\n\t\t}\n\t\t/**\n   * @typedef {Object} gpuJSObject\n   */\n\n\t\t/**\n   * @memberOf Utils\n   * @name isFloatReadPixelsSupported\n   * @function\n   * @static\n   *\n   * Checks if the browser supports readPixels with float type\n   *\n   * @returns {Boolean} true if browser supports\n   *\n   */\n\n\t}, {\n\t\tkey: 'isFloatReadPixelsSupported',\n\t\tvalue: function isFloatReadPixelsSupported() {\n\t\t\tif (_isFloatReadPixelsSupported !== null) {\n\t\t\t\treturn _isFloatReadPixelsSupported;\n\t\t\t}\n\n\t\t\tvar GPU = require('../index');\n\t\t\tvar gpu = new GPU({\n\t\t\t\tmode: 'webgl-validator'\n\t\t\t});\n\t\t\tvar x = gpu.createKernel(function () {\n\t\t\t\treturn 1;\n\t\t\t}, {\n\t\t\t\toutput: [2],\n\t\t\t\tfloatTextures: true,\n\t\t\t\tfloatOutput: true,\n\t\t\t\tfloatOutputForce: true\n\t\t\t})();\n\n\t\t\t_isFloatReadPixelsSupported = x[0] === 1;\n\t\t\tgpu.destroy();\n\t\t\treturn _isFloatReadPixelsSupported;\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name isFloatReadPixelsSupportedWebGL2\n   * @function\n   * @static\n   *\n   * Checks if the browser supports readPixels with float type\n   *\n   * @returns {Boolean} true if browser supports\n   *\n   */\n\n\t}, {\n\t\tkey: 'isFloatReadPixelsSupportedWebGL2',\n\t\tvalue: function isFloatReadPixelsSupportedWebGL2() {\n\t\t\tif (_isFloatReadPixelsSupportedWebGL2 !== null) {\n\t\t\t\treturn _isFloatReadPixelsSupportedWebGL2;\n\t\t\t}\n\n\t\t\tvar GPU = require('../index');\n\t\t\tvar gpu = new GPU({\n\t\t\t\tmode: 'webgl2-validator'\n\t\t\t});\n\t\t\tvar x = gpu.createKernel(function () {\n\t\t\t\treturn 1;\n\t\t\t}, {\n\t\t\t\toutput: [2],\n\t\t\t\tfloatTextures: true,\n\t\t\t\tfloatOutput: true,\n\t\t\t\tfloatOutputForce: true\n\t\t\t})();\n\n\t\t\t_isFloatReadPixelsSupportedWebGL2 = x[0] === 1;\n\t\t\tgpu.destroy();\n\t\t\treturn _isFloatReadPixelsSupportedWebGL2;\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name hasIntegerDivisionAccuracyBug\n   * @function\n   * @static\n   *\n   * Checks if the system has inaccuracies when dividing integers\n   *\n   * @returns {Boolean} true if bug is exhibited on this system\n   *\n   */\n\n\t}, {\n\t\tkey: 'hasIntegerDivisionAccuracyBug',\n\t\tvalue: function hasIntegerDivisionAccuracyBug() {\n\t\t\tif (_hasIntegerDivisionAccuracyBug !== null) {\n\t\t\t\treturn _hasIntegerDivisionAccuracyBug;\n\t\t\t}\n\n\t\t\tvar GPU = require('../index');\n\t\t\tvar gpu = new GPU({\n\t\t\t\tmode: 'webgl-validator'\n\t\t\t});\n\t\t\tvar x = gpu.createKernel(function (v1, v2) {\n\t\t\t\treturn v1[this.thread.x] / v2[this.thread.x];\n\t\t\t}, {\n\t\t\t\toutput: [1]\n\t\t\t})([6, 6030401], [3, 3991]);\n\n\t\t\t// have we not got whole numbers for 6/3 or 6030401/3991\n\t\t\t// add more here if others see this problem\n\t\t\t_hasIntegerDivisionAccuracyBug = x[0] !== 2 || x[1] !== 1511;\n\t\t\tgpu.destroy();\n\t\t\treturn _hasIntegerDivisionAccuracyBug;\n\t\t}\n\t}, {\n\t\tkey: 'isMixedIdentifiersSupported',\n\t\tvalue: function isMixedIdentifiersSupported() {\n\t\t\treturn _isMixedIdentifiersSupported;\n\t\t}\n\t}, {\n\t\tkey: 'dimToTexSize',\n\t\tvalue: function dimToTexSize(opt, dimensions, output) {\n\t\t\tvar numTexels = dimensions[0];\n\t\t\tvar w = dimensions[0];\n\t\t\tvar h = dimensions[1];\n\t\t\tfor (var i = 1; i < dimensions.length; i++) {\n\t\t\t\tnumTexels *= dimensions[i];\n\t\t\t}\n\n\t\t\tif (opt.floatTextures && (!output || opt.floatOutput)) {\n\t\t\t\tw = numTexels = Math.ceil(numTexels / 4);\n\t\t\t}\n\t\t\t// if given dimensions == a 2d image\n\t\t\tif (h > 1 && w * h === numTexels) {\n\t\t\t\treturn [w, h];\n\t\t\t}\n\t\t\t// find as close to square width, height sizes as possible\n\t\t\tvar sqrt = Math.sqrt(numTexels);\n\t\t\tvar high = Math.ceil(sqrt);\n\t\t\tvar low = Math.floor(sqrt);\n\t\t\twhile (high * low > numTexels) {\n\t\t\t\thigh--;\n\t\t\t\tlow = Math.ceil(numTexels / high);\n\t\t\t}\n\t\t\tw = low;\n\t\t\th = Math.ceil(numTexels / w);\n\t\t\treturn [w, h];\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name getDimensions\n   * @function\n   * @static\n   *\n   * Return the dimension of an array.\n   * \n   * @param {Array|String} x - The array\n   * @param {number} [pad] - To include padding in the dimension calculation [Optional]\n   *\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'getDimensions',\n\t\tvalue: function getDimensions(x, pad) {\n\t\t\tvar ret = void 0;\n\t\t\tif (Utils.isArray(x)) {\n\t\t\t\tvar dim = [];\n\t\t\t\tvar temp = x;\n\t\t\t\twhile (Utils.isArray(temp)) {\n\t\t\t\t\tdim.push(temp.length);\n\t\t\t\t\ttemp = temp[0];\n\t\t\t\t}\n\t\t\t\tret = dim.reverse();\n\t\t\t} else if (x instanceof Texture) {\n\t\t\t\tret = x.output;\n\t\t\t} else if (x instanceof Input) {\n\t\t\t\tret = x.size;\n\t\t\t} else {\n\t\t\t\tthrow 'Unknown dimensions of ' + x;\n\t\t\t}\n\n\t\t\tif (pad) {\n\t\t\t\tret = Utils.clone(ret);\n\t\t\t\twhile (ret.length < 3) {\n\t\t\t\t\tret.push(1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// return ret;\n\t\t\treturn new Int32Array(ret);\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name pad\n   * @function\n   * @static\n   *\n   * Pad an array AND its elements with leading and ending zeros\n   *\n   * @param {Array} arr - the array to pad zeros to\n   * @param {number} padding - amount of padding\n   *\n   * @returns {Array} Array with leading and ending zeros, and all the elements padded by zeros.\n   *\n   */\n\n\t}, {\n\t\tkey: 'pad',\n\t\tvalue: function pad(arr, padding) {\n\t\t\tfunction zeros(n) {\n\t\t\t\treturn Array.apply(null, new Array(n)).map(Number.prototype.valueOf, 0);\n\t\t\t}\n\n\t\t\tvar len = arr.length + padding * 2;\n\n\t\t\tvar ret = arr.map(function (x) {\n\t\t\t\treturn [].concat(zeros(padding), x, zeros(padding));\n\t\t\t});\n\n\t\t\tfor (var i = 0; i < padding; i++) {\n\t\t\t\tret = [].concat([zeros(len)], ret, [zeros(len)]);\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name flatten2dArrayTo\n   * @function\n   * @static\n   *\n   * Puts a nested 2d array into a one-dimensional target array\n   * @param {Array|*} array\n   * @param {Float32Array|Float64Array} target\n   */\n\n\t}, {\n\t\tkey: 'flatten2dArrayTo',\n\t\tvalue: function flatten2dArrayTo(array, target) {\n\t\t\tvar offset = 0;\n\t\t\tfor (var y = 0; y < array.length; y++) {\n\t\t\t\ttarget.set(array[y], offset);\n\t\t\t\toffset += array[y].length;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name flatten3dArrayTo\n   * @function\n   * @static\n   *\n   * Puts a nested 3d array into a one-dimensional target array\n   * @param {Array|*} array\n   * @param {Float32Array|Float64Array} target\n   */\n\n\t}, {\n\t\tkey: 'flatten3dArrayTo',\n\t\tvalue: function flatten3dArrayTo(array, target) {\n\t\t\tvar offset = 0;\n\t\t\tfor (var z = 0; z < array.length; z++) {\n\t\t\t\tfor (var y = 0; y < array[z].length; y++) {\n\t\t\t\t\ttarget.set(array[z][y], offset);\n\t\t\t\t\toffset += array[z][y].length;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name flatten3dArrayTo\n   * @function\n   * @static\n   *\n   * Puts a nested 1d, 2d, or 3d array into a one-dimensional target array\n   * @param {Array|*} array\n   * @param {Float32Array|Float64Array} target\n   */\n\n\t}, {\n\t\tkey: 'flattenTo',\n\t\tvalue: function flattenTo(array, target) {\n\t\t\tif (Utils.isArray(array[0])) {\n\t\t\t\tif (Utils.isArray(array[0][0])) {\n\t\t\t\t\tUtils.flatten3dArrayTo(array, target);\n\t\t\t\t} else {\n\t\t\t\t\tUtils.flatten2dArrayTo(array, target);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttarget.set(array);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name splitArray\n   * @function\n   * @static\n   *\n   * Splits an array into smaller arrays.\n   * Number of elements in one small chunk is given by `part`\n   *\n   * @param {Array} array - The array to split into chunks\n   * @param {Array} part - elements in one chunk\n   *\n  \t * @returns {Array} An array of smaller chunks\n   *\n   */\n\n\t}, {\n\t\tkey: 'splitArray',\n\t\tvalue: function splitArray(array, part) {\n\t\t\tvar result = [];\n\t\t\tfor (var i = 0; i < array.length; i += part) {\n\t\t\t\tresult.push(new array.constructor(array.buffer, i * 4 + array.byteOffset, part));\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}, {\n\t\tkey: 'getAstString',\n\t\tvalue: function getAstString(source, ast) {\n\t\t\tvar lines = Array.isArray(source) ? source : source.split(/\\r?\\n/g);\n\t\t\tvar start = ast.loc.start;\n\t\t\tvar end = ast.loc.end;\n\t\t\tvar result = [];\n\t\t\tresult.push(lines[start.line - 1].slice(start.column));\n\t\t\tfor (var i = start.line; i < end.line - 1; i++) {\n\t\t\t\tresult.push(lines[i]);\n\t\t\t}\n\t\t\tresult.push(lines[end.line - 1].slice(0, end.column));\n\t\t\treturn result.join('\\n');\n\t\t}\n\t}, {\n\t\tkey: 'allPropertiesOf',\n\t\tvalue: function allPropertiesOf(obj) {\n\t\t\tvar props = [];\n\n\t\t\tdo {\n\t\t\t\tprops.push.apply(props, Object.getOwnPropertyNames(obj));\n\t\t\t} while (obj = Object.getPrototypeOf(obj));\n\n\t\t\treturn props;\n\t\t}\n\t}]);\n\n\treturn Utils;\n}(UtilsCore);\n\n// This ensure static methods are \"inherited\"\n// See: https://stackoverflow.com/questions/5441508/how-to-inherit-static-methods-from-base-class-in-javascript\n\n\nObject.assign(Utils, UtilsCore);\n\nmodule.exports = Utils;","'use strict';\n\nvar utils = require('../core/utils');\n\nmodule.exports = function kernelRunShortcut(kernel) {\n\tvar shortcut = function shortcut() {\n\t\treturn kernel.run.apply(kernel, arguments);\n\t};\n\n\tutils.allPropertiesOf(kernel).forEach(function (key) {\n\t\tif (key[0] === '_' && key[1] === '_') return;\n\t\tif (typeof kernel[key] === 'function') {\n\t\t\tif (key.substring(0, 3) === 'add' || key.substring(0, 3) === 'set') {\n\t\t\t\tshortcut[key] = function () {\n\t\t\t\t\tkernel[key].apply(kernel, arguments);\n\t\t\t\t\treturn shortcut;\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tshortcut[key] = kernel[key].bind(kernel);\n\t\t\t}\n\t\t} else {\n\t\t\tshortcut.__defineGetter__(key, function () {\n\t\t\t\treturn kernel[key];\n\t\t\t});\n\t\t\tshortcut.__defineSetter__(key, function (value) {\n\t\t\t\tkernel[key] = value;\n\t\t\t});\n\t\t}\n\t});\n\n\tshortcut.kernel = kernel;\n\n\treturn shortcut;\n};","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = require('../core/utils');\nvar kernelRunShortcut = require('./kernel-run-shortcut');\n\nmodule.exports = function () {\n\n\t/**\n  * @constructor BaseRunner\n  *\n  * @desc Represents the 'private/protected' namespace of the GPU class\n  *\n  * <p>I know @private makes more sense, but since the documentation engine state is undetirmined.\n  * (See https://github.com/gpujs/gpu.js/issues/19 regarding documentation engine issue)\n  * File isolation is currently the best way to go. </p>\n  *\n  * *base.js* internal functions namespace <br>\n  * *gpu.js* PUBLIC function namespace <br>\n  *\n  * @prop {Object} settings - Settings object used to set Dimensions, etc.\n  * @prop {String} kernel - Current kernel instance\n  * @prop {Object} canvas - Canvas instance attached to the kernel\n  * @prop {Object} webGl - WebGl instance attached to the kernel\n  * @prop {Function} fn - Kernel function to run\n  * @prop {Object} functionBuilder - FunctionBuilder instance\n  * @prop {String} fnString - Kernel function (as a String)\n  * @prop {String} endianness - endian information like Little-endian, Big-endian.\n  *\n  */\n\n\tfunction BaseRunner(functionBuilder, settings) {\n\t\t_classCallCheck(this, BaseRunner);\n\n\t\tsettings = settings || {};\n\t\tthis.kernel = settings.kernel;\n\t\tthis.canvas = settings.canvas;\n\t\tthis.webGl = settings.webGl;\n\t\tthis.fn = null;\n\t\tthis.functionBuilder = functionBuilder;\n\t\tthis.fnString = null;\n\t\tthis.endianness = utils.systemEndianness();\n\t}\n\n\t/**\n  * @memberOf BaseRunner#\n  * @function\n  * @name textureToArray\n  *\n  * @desc Converts the provided Texture instance to a JavaScript Array\n  *\n  * @param {Object} texture - Texture Object\n  *\n  */\n\n\n\t_createClass(BaseRunner, [{\n\t\tkey: 'textureToArray',\n\t\tvalue: function textureToArray(texture) {\n\t\t\tvar copy = this.createKernel(function (x) {\n\t\t\t\treturn x[this.thread.z][this.thread.y][this.thread.x];\n\t\t\t});\n\n\t\t\treturn copy(texture);\n\t\t}\n\n\t\t/**\n   * @memberOf BaseRunner#\n   * @function\n   *\n   * @name deleteTexture\n   *\n   * @desc Deletes the provided Texture instance\n   *\n   * @param {Object} texture - Texture Object\n   */\n\n\t}, {\n\t\tkey: 'deleteTexture',\n\t\tvalue: function deleteTexture(texture) {\n\t\t\tthis.webGl.deleteTexture(texture.texture);\n\t\t}\n\n\t\t/**\n   * @memberOf BaseRunner#\n   * @function\n   * @name buildPromiseKernel\n   *\n   * @desc Get and returns the ASYNCHRONOUS executor, of a class and kernel\n   * This returns a Promise object from an argument set.\n   *\n   * Note that there is no current implementation.\n   *\n   */\n\n\t}, {\n\t\tkey: 'buildPromiseKernel',\n\t\tvalue: function buildPromiseKernel() {\n\t\t\tthrow new Error('not yet implemented');\n\t\t}\n\t}, {\n\t\tkey: 'getMode',\n\t\tvalue: function getMode() {\n\t\t\tthrow new Error('\"mode\" not implemented on BaseRunner');\n\t\t}\n\n\t\t/**\n   * @memberOf BaseRunner#\n   * @function\n   *\n   * @name buildKernel\n   *\n   * @desc Get and returns the Synchronous executor, of a class and kernel\n   * Which returns the result directly after passing the arguments.\n   *\n   */\n\n\t}, {\n\t\tkey: 'buildKernel',\n\t\tvalue: function buildKernel(fn, settings) {\n\t\t\tsettings = Object.assign({}, settings || {});\n\t\t\tvar fnString = fn.toString();\n\t\t\tif (!settings.functionBuilder) {\n\t\t\t\tsettings.functionBuilder = this.functionBuilder;\n\t\t\t}\n\n\t\t\tif (!settings.canvas) {\n\t\t\t\tsettings.canvas = this.canvas;\n\t\t\t}\n\n\t\t\tif (!settings.webGl) {\n\t\t\t\tsettings.webGl = this.webgl;\n\t\t\t}\n\n\t\t\treturn kernelRunShortcut(new this.Kernel(fnString, settings));\n\t\t}\n\t}]);\n\n\treturn BaseRunner;\n}();","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = require('../core/utils');\nvar Input = require('../core/input');\n\nmodule.exports = function () {\n\n\t/**\n  * @constructor KernelBase\n  * \n  * @desc Implements the base class for Kernels, and is used as a \n  * parent class for all Kernel implementations.\n  *\n  * This contains the basic methods needed by all Kernel implementations, \n  * like setDimensions, addSubKernel, etc.\n  * \n  * @prop {Array} paramNames - Name of the parameters of the kernel function\n  * @prop {String} fnString - Kernel function as a String\n  * @prop {Array} dimensions - Dimensions of the kernel function, this.thread.x, etc.\n  * @prop {Boolean} debug - Toggle debug mode\n  * @prop {String} graphical - Toggle graphical mode\n  * @prop {number} loopMaxIterations - Maximum number of loop iterations\n  * @prop {Object} constants - Global constants\n  * @prop {Array} subKernels - Sub kernels bound to this kernel instance\n  * @prop {Object} subKernelProperties - Sub kernels bound to this kernel instance as key/value pairs\n  * @prop {Array} subKernelOutputVariableNames - Names of the variables outputted by the subkerls\n  * @prop {Boolean} fixIntegerDivisionAccuracy - fix issues with some graphics cards not returning whole numbers when dividing by factors of 3\n  *\n  */\n\tfunction KernelBase(fnString, settings) {\n\t\t_classCallCheck(this, KernelBase);\n\n\t\tthis.paramNames = utils.getParamNamesFromString(fnString);\n\t\tthis.fnString = fnString;\n\t\tthis.output = null;\n\t\tthis.debug = false;\n\t\tthis.graphical = false;\n\t\tthis.loopMaxIterations = 0;\n\t\tthis.constants = null;\n\t\tthis.wraparound = null;\n\t\tthis.hardcodeConstants = null;\n\t\tthis.outputToTexture = null;\n\t\tthis.outputImmutable = null;\n\t\tthis.texSize = null;\n\t\tthis._canvas = null;\n\t\tthis._webGl = null;\n\t\tthis.threadDim = null;\n\t\tthis.floatTextures = null;\n\t\tthis.floatOutput = null;\n\t\tthis.floatOutputForce = null;\n\t\tthis.addFunction = null;\n\t\tthis.functions = null;\n\t\tthis.nativeFunctions = null;\n\t\tthis.subKernels = null;\n\t\tthis.subKernelProperties = null;\n\t\tthis.subKernelNames = null;\n\t\tthis.subKernelOutputVariableNames = null;\n\t\tthis.functionBuilder = null;\n\t\tthis.paramTypes = null;\n\t\tthis.paramSizes = null;\n\t\tthis.constantTypes = null;\n\t\tthis.fixIntegerDivisionAccuracy = null;\n\n\t\tfor (var p in settings) {\n\t\t\tif (!settings.hasOwnProperty(p) || !this.hasOwnProperty(p)) continue;\n\t\t\tthis[p] = settings[p];\n\t\t}\n\t\tif (settings.hasOwnProperty('canvas')) {\n\t\t\tthis._canvas = settings.canvas;\n\t\t}\n\t\tif (settings.hasOwnProperty('webGl')) {\n\t\t\tthis._webGl = settings.webGl;\n\t\t}\n\t\tif (settings.hasOwnProperty('output')) {\n\t\t\tthis.setOutput(settings.output); // Flatten output object\n\t\t}\n\n\t\tif (!this._canvas) this._canvas = utils.initCanvas();\n\t}\n\n\t_createClass(KernelBase, [{\n\t\tkey: 'build',\n\t\tvalue: function build() {\n\t\t\tthrow new Error('\"build\" not defined on Base');\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setupParams\n   *\n   * @desc Setup the parameter types for the parameters\n   * supplied to the Kernel function\n   *\n   * @param {IArguments} args - The actual parameters sent to the Kernel\n   *\n   */\n\n\t}, {\n\t\tkey: 'setupParams',\n\t\tvalue: function setupParams(args) {\n\t\t\tthis.paramTypes = [];\n\t\t\tthis.paramSizes = [];\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tvar arg = args[i];\n\n\t\t\t\tthis.paramTypes.push(utils.getArgumentType(arg));\n\t\t\t\tthis.paramSizes.push(arg.constructor === Input ? arg.size : null);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setupConstants',\n\t\tvalue: function setupConstants() {\n\t\t\tthis.constantTypes = {};\n\t\t\tif (this.constants) {\n\t\t\t\tfor (var p in this.constants) {\n\t\t\t\t\tthis.constantTypes[p] = utils.getArgumentType(this.constants[p]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setFunctions',\n\t\tvalue: function setFunctions(functions) {\n\t\t\tthis.functions = functions;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setOutput\n   *\n   * @desc Set dimensions of the kernel function\n   *\n   * @param {Array|Object} output - The output array to set the kernel output size to\n   *\n   */\n\n\t}, {\n\t\tkey: 'setOutput',\n\t\tvalue: function setOutput(output) {\n\t\t\tif (output.hasOwnProperty('x')) {\n\t\t\t\tif (output.hasOwnProperty('y')) {\n\t\t\t\t\tif (output.hasOwnProperty('z')) {\n\t\t\t\t\t\tthis.output = [output.x, output.y, output.z];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.output = [output.x, output.y];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.output = [output.x];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.output = output;\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setDebug\n   *\n   * @desc Toggle debug mode\n   *\n   * @param {Boolean} flag - true to enable debug\n   *\n   */\n\n\t}, {\n\t\tkey: 'setDebug',\n\t\tvalue: function setDebug(flag) {\n\t\t\tthis.debug = flag;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setGraphical\n   *\n   * @desc Toggle graphical output mode\n   *\n   * @param {Boolean} flag - true to enable graphical output\n   *\n   */\n\n\t}, {\n\t\tkey: 'setGraphical',\n\t\tvalue: function setGraphical(flag) {\n\t\t\tthis.graphical = flag;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setLoopMaxIterations\n   *\n   * @desc Set the maximum number of loop iterations\n   *\n   * @param {number} max - iterations count\n   *\n   */\n\n\t}, {\n\t\tkey: 'setLoopMaxIterations',\n\t\tvalue: function setLoopMaxIterations(max) {\n\t\t\tthis.loopMaxIterations = max;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setFixIntegerDivisionAccuracy\n   *\n   * @desc Fix division by factor of 3 FP accuracy bug\n   *\n   * @param {Boolean} fix - should fix \n   *\n   */\n\n\t}, {\n\t\tkey: 'setFixIntegerDivisionAccuracy',\n\t\tvalue: function setFixIntegerDivisionAccuracy(fix) {\n\t\t\tthis.fixIntegerDivisionAccuracy = fix;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setConstants\n   * @desc Set Constants\n   */\n\n\t}, {\n\t\tkey: 'setConstants',\n\t\tvalue: function setConstants(constants) {\n\t\t\tthis.constants = constants;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'setWraparound',\n\t\tvalue: function setWraparound(flag) {\n\t\t\tconsole.warn('Wraparound mode is not supported and undocumented.');\n\t\t\tthis.wraparound = flag;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'setHardcodeConstants',\n\t\tvalue: function setHardcodeConstants(flag) {\n\t\t\tthis.hardcodeConstants = flag;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'setOutputToTexture',\n\t\tvalue: function setOutputToTexture(flag) {\n\t\t\tthis.outputToTexture = flag;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'setOutputImmutable',\n\t\tvalue: function setOutputImmutable(flag) {\n\t\t\tthis.outputImmutable = flag;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setFloatTextures\n   *\n   * @desc Toggle texture output mode\n   *\n   * @param {Boolean} flag - true to enable floatTextures\n   *\n   */\n\n\t}, {\n\t\tkey: 'setFloatTextures',\n\t\tvalue: function setFloatTextures(flag) {\n\t\t\tthis.floatTextures = flag;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setFloatOutput\n   *\n   * @desc Toggle output mode\n   *\n   * @param {Boolean} flag - true to enable float\n   *\n   */\n\n\t}, {\n\t\tkey: 'setFloatOutput',\n\t\tvalue: function setFloatOutput(flag) {\n\t\t\tthis.floatOutput = flag;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'setFloatOutputForce',\n\t\tvalue: function setFloatOutputForce(flag) {\n\t\t\tthis.floatOutputForce = flag;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setCanvas\n   *\n   * @desc Bind the canvas to kernel\n   * \n   * @param {Canvas} canvas - Canvas to bind\n   *\n   */\n\n\t}, {\n\t\tkey: 'setCanvas',\n\t\tvalue: function setCanvas(canvas) {\n\t\t\tthis._canvas = canvas;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setCanvas\n   *\n   * @desc Bind the webGL instance to kernel\n   * \n   * @param {Canvas} webGL - webGL instance to bind\n   *\n   */\n\n\t}, {\n\t\tkey: 'setWebGl',\n\t\tvalue: function setWebGl(webGl) {\n\t\t\tthis._webGl = webGl;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name getCanvas()\n   *\n   * @desc Returns the current canvas instance bound to the kernel\n   *\n   */\n\n\t}, {\n\t\tkey: 'getCanvas',\n\t\tvalue: function getCanvas() {\n\t\t\treturn this._canvas;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name getWebGl()\n   *\n   * @desc Returns the current webGl instance bound to the kernel\n   *\n   */\n\n\t}, {\n\t\tkey: 'getWebGl',\n\t\tvalue: function getWebGl() {\n\t\t\treturn this._webGl;\n\t\t}\n\t}, {\n\t\tkey: 'validateOptions',\n\t\tvalue: function validateOptions() {\n\t\t\tthrow new Error('validateOptions not defined');\n\t\t}\n\t}, {\n\t\tkey: 'exec',\n\t\tvalue: function exec() {\n\t\t\treturn this.execute.apply(this, arguments);\n\t\t}\n\t}, {\n\t\tkey: 'execute',\n\t\tvalue: function execute() {\n\t\t\tvar _this = this;\n\n\t\t\t//\n\t\t\t// Prepare the required objects\n\t\t\t//\n\t\t\tvar args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments);\n\n\t\t\t//\n\t\t\t// Setup and return the promise, and execute the function, in synchronous mode\n\t\t\t//\n\t\t\treturn utils.newPromise(function (accept, reject) {\n\t\t\t\ttry {\n\t\t\t\t\taccept(_this.run.apply(_this, args));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t//\n\t\t\t\t\t// Error : throw rejection\n\t\t\t\t\t//\n\t\t\t\t\treject(e);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/** \n   * @memberOf KernelBase#\n   * @function\n   * @name addSubKernel\n   *\n   * @desc Add a sub kernel to the root kernel instance.\n   * This is what `createKernelMap` uses.\n   *\n   * @param {String} fnString - function (as a String) of the subKernel to add\n   *\n   */\n\n\t}, {\n\t\tkey: 'addSubKernel',\n\t\tvalue: function addSubKernel(fnString) {\n\t\t\tif (this.subKernels === null) {\n\t\t\t\tthis.subKernels = [];\n\t\t\t\tthis.subKernelNames = [];\n\t\t\t}\n\t\t\tthis.subKernels.push(fnString);\n\t\t\tthis.subKernelNames.push(utils.getFunctionNameFromString(fnString));\n\t\t\treturn this;\n\t\t}\n\n\t\t/** \n   * @memberOf KernelBase#\n   * @function\n   * @name addSubKernelProperty\n   *\n   * @desc Add a sub kernel to the root kernel instance, indexed by a property name\n   * This is what `createKernelMap` uses.\n   *\n   * @param {String} property - property key for the subKernel\n   * @param {String} fnString - function (as a String) of the subKernel to add\n   *\n   */\n\n\t}, {\n\t\tkey: 'addSubKernelProperty',\n\t\tvalue: function addSubKernelProperty(property, fnString) {\n\t\t\tif (this.subKernelProperties === null) {\n\t\t\t\tthis.subKernelProperties = {};\n\t\t\t\tthis.subKernelNames = [];\n\t\t\t}\n\t\t\tif (this.subKernelProperties.hasOwnProperty(property)) {\n\t\t\t\tthrow new Error('cannot add sub kernel ' + property + ', already defined');\n\t\t\t}\n\t\t\tthis.subKernelProperties[property] = fnString;\n\t\t\tthis.subKernelNames.push(utils.getFunctionNameFromString(fnString));\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'addNativeFunction',\n\t\tvalue: function addNativeFunction(name, source) {\n\t\t\tthis.functionBuilder.addNativeFunction(name, source);\n\t\t}\n\n\t\t/**\n   *\n   * Destroys all memory associated with this kernel\n   *\n   * @name destroy\n   * @function\n   * @memberOf KernelBase#\n   *\n   * * @param {Boolean} removeCanvasReferences remve any associated canvas references?\n   *\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {}\n\t}]);\n\n\treturn KernelBase;\n}();","\"use strict\";\n\nmodule.exports = \"__HEADER__;\\nprecision highp float;\\nprecision highp int;\\nprecision highp sampler2D;\\n\\nconst float LOOP_MAX = __LOOP_MAX__;\\n\\n__CONSTANTS__;\\n\\nvarying vec2 vTexCoord;\\n\\nvec4 round(vec4 x) {\\n  return floor(x + 0.5);\\n}\\n\\nfloat round(float x) {\\n  return floor(x + 0.5);\\n}\\n\\nvec2 integerMod(vec2 x, float y) {\\n  vec2 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nvec3 integerMod(vec3 x, float y) {\\n  vec3 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nvec4 integerMod(vec4 x, vec4 y) {\\n  vec4 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nfloat integerMod(float x, float y) {\\n  float res = floor(mod(x, y));\\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\\n}\\n\\nint integerMod(int x, int y) {\\n  return x - (y * int(x / y));\\n}\\n\\n__DIVIDE_WITH_INTEGER_CHECK__;\\n\\n// Here be dragons!\\n// DO NOT OPTIMIZE THIS CODE\\n// YOU WILL BREAK SOMETHING ON SOMEBODY'S MACHINE\\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\\nfloat decode32(vec4 rgba) {\\n  __DECODE32_ENDIANNESS__;\\n  rgba *= 255.0;\\n  vec2 gte128;\\n  gte128.x = rgba.b >= 128.0 ? 1.0 : 0.0;\\n  gte128.y = rgba.a >= 128.0 ? 1.0 : 0.0;\\n  float exponent = 2.0 * rgba.a - 127.0 + dot(gte128, MAGIC_VEC);\\n  float res = exp2(round(exponent));\\n  rgba.b = rgba.b - 128.0 * gte128.x;\\n  res = dot(rgba, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\\n  res *= gte128.y * -2.0 + 1.0;\\n  return res;\\n}\\n\\nvec4 encode32(float f) {\\n  float F = abs(f);\\n  float sign = f < 0.0 ? 1.0 : 0.0;\\n  float exponent = floor(log2(F));\\n  float mantissa = (exp2(-exponent) * F);\\n  // exponent += floor(log2(mantissa));\\n  vec4 rgba = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\\n  rgba.rg = integerMod(rgba.rg, 256.0);\\n  rgba.b = integerMod(rgba.b, 128.0);\\n  rgba.a = exponent*0.5 + 63.5;\\n  rgba.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\\n  rgba = floor(rgba);\\n  rgba *= 0.003921569; // 1/255\\n  __ENCODE32_ENDIANNESS__;\\n  return rgba;\\n}\\n// Dragons end here\\n\\nfloat decode(vec4 rgba, int x, int bitRatio) {\\n  if (bitRatio == 1) {\\n    return decode32(rgba);\\n  }\\n  __DECODE32_ENDIANNESS__;\\n  int channel = integerMod(x, bitRatio);\\n  if (bitRatio == 4) {\\n    if (channel == 0) return rgba.r * 255.0;\\n    if (channel == 1) return rgba.g * 255.0;\\n    if (channel == 2) return rgba.b * 255.0;\\n    if (channel == 3) return rgba.a * 255.0;\\n  }\\n  else {\\n    if (channel == 0) return rgba.r * 255.0 + rgba.g * 65280.0;\\n    if (channel == 1) return rgba.b * 255.0 + rgba.a * 65280.0;\\n  }\\n}\\n\\nint index;\\nivec3 threadId;\\n\\nivec3 indexTo3D(int idx, ivec3 texDim) {\\n  int z = int(idx / (texDim.x * texDim.y));\\n  idx -= z * int(texDim.x * texDim.y);\\n  int y = int(idx / texDim.x);\\n  int x = int(integerMod(idx, texDim.x));\\n  return ivec3(x, y, z);\\n}\\n\\nfloat get(sampler2D tex, ivec2 texSize, ivec3 texDim, int bitRatio,  int z, int y, int x) {\\n  ivec3 xyz = ivec3(x, y, z);\\n  __GET_WRAPAROUND__;\\n  int index = xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z);\\n  __GET_TEXTURE_CHANNEL__;\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  __GET_TEXTURE_INDEX__;\\n  vec4 texel = texture2D(tex, st / vec2(texSize));\\n  __GET_RESULT__;\\n  \\n}\\n\\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  ivec3 xyz = ivec3(x, y, z);\\n  __GET_WRAPAROUND__;\\n  int index = xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z);\\n  __GET_TEXTURE_CHANNEL__;\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  __GET_TEXTURE_INDEX__;\\n  return texture2D(tex, st / vec2(texSize));\\n}\\n\\nfloat get(sampler2D tex, ivec2 texSize, ivec3 texDim, int bitRatio, int y, int x) {\\n  return get(tex, texSize, texDim, bitRatio, int(0), y, x);\\n}\\n\\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int y, int x) {\\n  return getImage2D(tex, texSize, texDim, int(0), y, x);\\n}\\n\\nfloat get(sampler2D tex, ivec2 texSize, ivec3 texDim, int bitRatio, int x) {\\n  return get(tex, texSize, texDim, bitRatio, int(0), int(0), x);\\n}\\n\\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int x) {\\n  return getImage2D(tex, texSize, texDim, int(0), int(0), x);\\n}\\n\\n\\nvec4 actualColor;\\nvoid color(float r, float g, float b, float a) {\\n  actualColor = vec4(r,g,b,a);\\n}\\n\\nvoid color(float r, float g, float b) {\\n  color(r,g,b,1.0);\\n}\\n\\nvoid color(sampler2D image) {\\n  actualColor = texture2D(image, vTexCoord);\\n}\\n\\n__MAIN_PARAMS__;\\n__MAIN_CONSTANTS__;\\n__KERNEL__;\\n\\nvoid main(void) {\\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\\n  __MAIN_RESULT__;\\n}\";","\"use strict\";\n\nmodule.exports = \"precision highp float;\\nprecision highp int;\\nprecision highp sampler2D;\\n\\nattribute vec2 aPos;\\nattribute vec2 aTexCoord;\\n\\nvarying vec2 vTexCoord;\\nuniform vec2 ratio;\\n\\nvoid main(void) {\\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\\n  vTexCoord = aTexCoord;\\n}\";","'use strict';\n\nvar utils = require('../../core/utils');\nvar kernelRunShortcut = require('../kernel-run-shortcut');\nvar Input = require('../../core/input');\nvar Texture = require('../../core/texture');\n\nfunction removeFnNoise(fn) {\n  if (/^function /.test(fn)) {\n    fn = fn.substring(9);\n  }\n  return fn.replace(/[_]typeof/g, 'typeof');\n}\n\nfunction removeNoise(str) {\n  return str.replace(/[_]typeof/g, 'typeof');\n}\n\nmodule.exports = function (gpuKernel, name) {\n  return '() => {\\n    ' + kernelRunShortcut.toString() + ';\\n    const utils = {\\n      allPropertiesOf: ' + removeNoise(utils.allPropertiesOf.toString()) + ',\\n      clone: ' + removeNoise(utils.clone.toString()) + ',\\n      splitArray: ' + removeNoise(utils.splitArray.toString()) + ',\\n      getArgumentType: ' + removeNoise(utils.getArgumentType.toString()) + ',\\n      getDimensions: ' + removeNoise(utils.getDimensions.toString()) + ',\\n      dimToTexSize: ' + removeNoise(utils.dimToTexSize.toString()) + ',\\n      flattenTo: ' + removeNoise(utils.flattenTo.toString()) + ',\\n      flatten2dArrayTo: ' + removeNoise(utils.flatten2dArrayTo.toString()) + ',\\n      flatten3dArrayTo: ' + removeNoise(utils.flatten3dArrayTo.toString()) + ',\\n      systemEndianness: \\'' + removeNoise(utils.systemEndianness()) + '\\',\\n      initWebGl: ' + removeNoise(utils.initWebGl.toString()) + ',\\n      isArray: ' + removeNoise(utils.isArray.toString()) + ',\\n      checkOutput: ' + removeNoise(utils.checkOutput.toString()) + '\\n    };\\n    const Utils = utils;\\n    const canvases = [];\\n    const maxTexSizes = {};\\n    let Texture = function() {};\\n    let Input = function() {}; \\n    class ' + (name || 'Kernel') + ' {\\n      constructor() {\\n        this.maxTexSize = null;\\n        this.argumentsLength = 0;\\n        this.constantsLength = 0;\\n        this._canvas = null;\\n        this._webGl = null;\\n        this.program = null;\\n        this.outputToTexture = ' + (gpuKernel.outputToTexture ? 'true' : 'false') + ';\\n        this.paramNames = ' + JSON.stringify(gpuKernel.paramNames) + ';\\n        this.paramTypes = ' + JSON.stringify(gpuKernel.paramTypes) + ';\\n        this.texSize = ' + JSON.stringify(gpuKernel.texSize) + ';\\n        this.output = ' + JSON.stringify(gpuKernel.output) + ';\\n        this.compiledFragShaderString = `' + gpuKernel.compiledFragShaderString + '`;\\n\\t\\t    this.compiledVertShaderString = `' + gpuKernel.compiledVertShaderString + '`;\\n\\t\\t    this.programUniformLocationCache = {};\\n\\t\\t    this.textureCache = {};\\n\\t\\t    this.subKernelOutputTextures = null;\\n\\t\\t    this.subKernelOutputVariableNames = null;\\n\\t\\t    this.uniform1fCache = {};\\n\\t\\t    this.uniform1iCache = {};\\n\\t\\t    this.uniform2fCache = {};\\n\\t\\t    this.uniform2fvCache = {};\\n\\t\\t    this.uniform2ivCache = {};\\n\\t\\t    this.uniform3fvCache = {};\\n\\t\\t    this.uniform3ivCache = {};\\n      }\\n      _getFragShaderString() { return this.compiledFragShaderString; }\\n      _getVertShaderString() { return this.compiledVertShaderString; }\\n      validateOptions() {}\\n      setupParams() {}\\n      setupConstants() {}\\n      setCanvas(canvas) { this._canvas = canvas; return this; }\\n      setWebGl(webGl) { this._webGl = webGl; return this; }\\n      setTexture(Type) { Texture = Type; }\\n      setInput(Type) { Input = Type; }\\n      ' + removeFnNoise(gpuKernel.getUniformLocation.toString()) + '\\n      ' + removeFnNoise(gpuKernel.build.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.run.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel._addArgument.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel._formatArrayTransfer.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.getArgumentTexture.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.getTextureCache.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.getOutputTexture.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.renderOutput.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.updateMaxTexSize.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel._setupOutputTexture.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.detachTextureCache.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform1f.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform1i.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform2f.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform2fv.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform2iv.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform3fv.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform3iv.toString()) + '\\n    };\\n    return kernelRunShortcut(new Kernel());\\n  };';\n};","'use strict';\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar KernelBase = require('../kernel-base');\nvar utils = require('../../core/utils');\nvar Texture = require('../../core/texture');\nvar fragShaderString = require('./shader-frag');\nvar vertShaderString = require('./shader-vert');\nvar kernelString = require('./kernel-string');\nvar canvases = [];\nvar maxTexSizes = {};\n\nmodule.exports = function (_KernelBase) {\n\t_inherits(WebGLKernel, _KernelBase);\n\n\t_createClass(WebGLKernel, null, [{\n\t\tkey: 'fragShaderString',\n\t\tget: function get() {\n\t\t\treturn fragShaderString;\n\t\t}\n\t}, {\n\t\tkey: 'vertShaderString',\n\t\tget: function get() {\n\t\t\treturn vertShaderString;\n\t\t}\n\t\t/**\n   * @constructor WebGLKernel\n   *\n   * @desc Kernel Implementation for WebGL.\n   * <p>This builds the shaders and runs them on the GPU,\n   * the outputs the result back as float(enabled by default) and Texture.</p>\n   *\n   * @extends KernelBase\n   *\n   * @prop {Object} textureCache - webGl Texture cache\n   * @prop {Object} threadDim - The thread dimensions, x, y and z\n   * @prop {Object} programUniformLocationCache - Location of program variables in memory\n   * @prop {Object} framebuffer - Webgl frameBuffer\n   * @prop {Object} buffer - WebGL buffer\n   * @prop {Object} program - The webGl Program\n   * @prop {Object} functionBuilder - Function Builder instance bound to this Kernel\n   * @prop {Boolean} outputToTexture - Set output type to Texture, instead of float\n   * @prop {String} endianness - Endian information like Little-endian, Big-endian.\n   * @prop {Array} paramTypes - Types of parameters sent to the Kernel\n   * @prop {number} argumentsLength - Number of parameters sent to the Kernel\n   * @prop {String} compiledFragShaderString - Compiled fragment shader string\n   * @prop {String} compiledVertShaderString - Compiled Vertical shader string\n   */\n\n\t}]);\n\n\tfunction WebGLKernel(fnString, settings) {\n\t\t_classCallCheck(this, WebGLKernel);\n\n\t\tvar _this = _possibleConstructorReturn(this, (WebGLKernel.__proto__ || Object.getPrototypeOf(WebGLKernel)).call(this, fnString, settings));\n\n\t\t_this.textureCache = {};\n\t\t_this.threadDim = {};\n\t\t_this.programUniformLocationCache = {};\n\t\t_this.framebuffer = null;\n\n\t\t_this.buffer = null;\n\t\t_this.program = null;\n\t\t_this.outputToTexture = settings.outputToTexture;\n\t\t_this.endianness = utils.systemEndianness();\n\t\t_this.subKernelOutputTextures = null;\n\t\t_this.subKernelOutputVariableNames = null;\n\t\t_this.argumentsLength = 0;\n\t\t_this.constantsLength = 0;\n\t\t_this.compiledFragShaderString = null;\n\t\t_this.compiledVertShaderString = null;\n\t\t_this.fragShader = null;\n\t\t_this.vertShader = null;\n\t\t_this.drawBuffersMap = null;\n\t\t_this.outputTexture = null;\n\t\t_this.maxTexSize = null;\n\t\t_this.uniform1fCache = {};\n\t\t_this.uniform1iCache = {};\n\t\t_this.uniform2fCache = {};\n\t\t_this.uniform2fvCache = {};\n\t\t_this.uniform2ivCache = {};\n\t\t_this.uniform3fvCache = {};\n\t\t_this.uniform3ivCache = {};\n\t\tif (!_this._webGl) _this._webGl = _this.initWebGl();\n\t\treturn _this;\n\t}\n\n\t_createClass(WebGLKernel, [{\n\t\tkey: 'initWebGl',\n\t\tvalue: function initWebGl() {\n\t\t\treturn utils.initWebGl(this.getCanvas());\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name validateOptions\n   *\n   * @desc Validate options related to Kernel, such as\n   * floatOutputs and Textures, texSize, output,\n   * graphical output.\n   *\n   */\n\n\t}, {\n\t\tkey: 'validateOptions',\n\t\tvalue: function validateOptions() {\n\t\t\tvar isFloatReadPixel = utils.isFloatReadPixelsSupported();\n\t\t\tif (this.floatTextures === true && !utils.OES_texture_float) {\n\t\t\t\tthrow new Error('Float textures are not supported on this browser');\n\t\t\t} else if (this.floatOutput === true && this.floatOutputForce !== true && !isFloatReadPixel) {\n\t\t\t\tthrow new Error('Float texture outputs are not supported on this browser');\n\t\t\t} else if (this.floatTextures === undefined && utils.OES_texture_float) {\n\t\t\t\tthis.floatTextures = true;\n\t\t\t\tthis.floatOutput = isFloatReadPixel;\n\t\t\t}\n\n\t\t\tvar hasIntegerDivisionBug = utils.hasIntegerDivisionAccuracyBug();\n\t\t\tif (this.fixIntegerDivisionAccuracy === null) {\n\t\t\t\tthis.fixIntegerDivisionAccuracy = hasIntegerDivisionBug;\n\t\t\t} else if (this.fixIntegerDivisionAccuracy && !hasIntegerDivisionBug) {\n\t\t\t\tthis.fixIntegerDivisionAccuracy = false;\n\t\t\t}\n\n\t\t\tutils.checkOutput(this.output);\n\n\t\t\tif (!this.output || this.output.length === 0) {\n\t\t\t\tif (arguments.length !== 1) {\n\t\t\t\t\tthrow new Error('Auto output only supported for kernels with only one input');\n\t\t\t\t}\n\n\t\t\t\tvar argType = utils.getArgumentType(arguments[0]);\n\t\t\t\tif (argType === 'Array') {\n\t\t\t\t\tthis.output = utils.getDimensions(argType);\n\t\t\t\t} else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\n\t\t\t\t\tthis.output = arguments[0].output;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Auto output not supported for input type: ' + argType);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.texSize = utils.dimToTexSize({\n\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t}, this.output, true);\n\n\t\t\tif (this.graphical) {\n\t\t\t\tif (this.output.length !== 2) {\n\t\t\t\t\tthrow new Error('Output must have 2 dimensions on graphical mode');\n\t\t\t\t}\n\n\t\t\t\tif (this.floatOutput) {\n\t\t\t\t\tthis.floatOutput = false;\n\t\t\t\t\tconsole.warn('Cannot use graphical mode and float output at the same time');\n\t\t\t\t}\n\n\t\t\t\tthis.texSize = utils.clone(this.output);\n\t\t\t} else if (this.floatOutput === undefined && utils.OES_texture_float) {\n\t\t\t\tthis.floatOutput = true;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'updateMaxTexSize',\n\t\tvalue: function updateMaxTexSize() {\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar canvas = this._canvas;\n\t\t\tif (this.maxTexSize === null) {\n\t\t\t\tvar canvasIndex = canvases.indexOf(canvas);\n\t\t\t\tif (canvasIndex === -1) {\n\t\t\t\t\tcanvasIndex = canvases.length;\n\t\t\t\t\tcanvases.push(canvas);\n\t\t\t\t\tmaxTexSizes[canvasIndex] = [texSize[0], texSize[1]];\n\t\t\t\t}\n\t\t\t\tthis.maxTexSize = maxTexSizes[canvasIndex];\n\t\t\t}\n\t\t\tif (this.maxTexSize[0] < texSize[0]) {\n\t\t\t\tthis.maxTexSize[0] = texSize[0];\n\t\t\t}\n\t\t\tif (this.maxTexSize[1] < texSize[1]) {\n\t\t\t\tthis.maxTexSize[1] = texSize[1];\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name build\n   *\n   * @desc Builds the Kernel, by compiling Fragment and Vertical Shaders,\n   * and instantiates the program.\n   *\n   */\n\n\t}, {\n\t\tkey: 'build',\n\t\tvalue: function build() {\n\t\t\tthis.validateOptions();\n\t\t\tthis.setupConstants();\n\t\t\tthis.setupParams(arguments);\n\t\t\tthis.updateMaxTexSize();\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar gl = this._webGl;\n\t\t\tvar canvas = this._canvas;\n\t\t\tgl.enable(gl.SCISSOR_TEST);\n\t\t\tgl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n\t\t\tcanvas.width = this.maxTexSize[0];\n\t\t\tcanvas.height = this.maxTexSize[1];\n\t\t\tvar threadDim = this.threadDim = utils.clone(this.output);\n\t\t\twhile (threadDim.length < 3) {\n\t\t\t\tthreadDim.push(1);\n\t\t\t}\n\n\t\t\tif (this.functionBuilder) this._addKernels();\n\n\t\t\tvar compiledVertShaderString = this._getVertShaderString(arguments);\n\t\t\tvar vertShader = gl.createShader(gl.VERTEX_SHADER);\n\t\t\tgl.shaderSource(vertShader, compiledVertShaderString);\n\t\t\tgl.compileShader(vertShader);\n\t\t\tthis.vertShader = vertShader;\n\n\t\t\tvar compiledFragShaderString = this._getFragShaderString(arguments);\n\t\t\tvar fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n\t\t\tgl.shaderSource(fragShader, compiledFragShaderString);\n\t\t\tgl.compileShader(fragShader);\n\t\t\tthis.fragShader = fragShader;\n\n\t\t\tif (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\n\t\t\t\tconsole.log(compiledVertShaderString);\n\t\t\t\tconsole.error('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(vertShader));\n\t\t\t\tthrow new Error('Error compiling vertex shader');\n\t\t\t}\n\t\t\tif (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\n\t\t\t\tconsole.log(compiledFragShaderString);\n\t\t\t\tconsole.error('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(fragShader));\n\t\t\t\tthrow new Error('Error compiling fragment shader');\n\t\t\t}\n\n\t\t\tif (this.debug) {\n\t\t\t\tconsole.log('Options:');\n\t\t\t\tconsole.dir(this);\n\t\t\t\tconsole.log('GLSL Shader Output:');\n\t\t\t\tconsole.log(compiledFragShaderString);\n\t\t\t}\n\n\t\t\tvar program = this.program = gl.createProgram();\n\t\t\tgl.attachShader(program, vertShader);\n\t\t\tgl.attachShader(program, fragShader);\n\t\t\tgl.linkProgram(program);\n\t\t\tthis.framebuffer = gl.createFramebuffer();\n\t\t\tthis.framebuffer.width = texSize[0];\n\t\t\tthis.framebuffer.height = texSize[1];\n\n\t\t\tvar vertices = new Float32Array([-1, -1, 1, -1, -1, 1, 1, 1]);\n\t\t\tvar texCoords = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n\n\t\t\tvar texCoordOffset = vertices.byteLength;\n\n\t\t\tvar buffer = this.buffer;\n\t\t\tif (!buffer) {\n\t\t\t\tbuffer = this.buffer = gl.createBuffer();\n\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, vertices.byteLength + texCoords.byteLength, gl.STATIC_DRAW);\n\t\t\t} else {\n\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\t}\n\n\t\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, vertices);\n\t\t\tgl.bufferSubData(gl.ARRAY_BUFFER, texCoordOffset, texCoords);\n\n\t\t\tvar aPosLoc = gl.getAttribLocation(this.program, 'aPos');\n\t\t\tgl.enableVertexAttribArray(aPosLoc);\n\t\t\tgl.vertexAttribPointer(aPosLoc, 2, gl.FLOAT, gl.FALSE, 0, 0);\n\t\t\tvar aTexCoordLoc = gl.getAttribLocation(this.program, 'aTexCoord');\n\t\t\tgl.enableVertexAttribArray(aTexCoordLoc);\n\t\t\tgl.vertexAttribPointer(aTexCoordLoc, 2, gl.FLOAT, gl.FALSE, 0, texCoordOffset);\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n\t\t\tfor (var p in this.constants) {\n\t\t\t\tvar value = this.constants[p];\n\t\t\t\tvar type = utils.getArgumentType(value);\n\t\t\t\tif (type === 'Float' || type === 'Integer') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tgl.useProgram(this.program);\n\t\t\t\tthis._addConstant(this.constants[p], type, p);\n\t\t\t\tthis.constantsLength++;\n\t\t\t}\n\n\t\t\tif (!this.outputImmutable) {\n\t\t\t\tthis._setupOutputTexture();\n\t\t\t\tif (this.subKernelOutputVariableNames !== null && this.subKernelOutputVariableNames.length > 0) {\n\t\t\t\t\tthis._setupSubOutputTextures(this.subKernelOutputVariableNames.length);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name run\n   *\n   * @desc Run the kernel program, and send the output to renderOutput\n   *\n   * <p> This method calls a helper method *renderOutput* to return the result. </p>\n   *\n   * @returns {Object|Undefined} Result The final output of the program, as float, and as Textures for reuse.\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'run',\n\t\tvalue: function run() {\n\t\t\tif (this.program === null) {\n\t\t\t\tthis.build.apply(this, arguments);\n\t\t\t}\n\t\t\tvar paramNames = this.paramNames;\n\t\t\tvar paramTypes = this.paramTypes;\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar gl = this._webGl;\n\n\t\t\tgl.useProgram(this.program);\n\t\t\tgl.scissor(0, 0, texSize[0], texSize[1]);\n\n\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\tthis.setUniform3iv('uOutputDim', this.threadDim);\n\t\t\t\tthis.setUniform2iv('uTexSize', texSize);\n\t\t\t}\n\n\t\t\tthis.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n\n\t\t\tthis.argumentsLength = 0;\n\t\t\tfor (var texIndex = 0; texIndex < paramNames.length; texIndex++) {\n\t\t\t\tthis._addArgument(arguments[texIndex], paramTypes[texIndex], paramNames[texIndex]);\n\t\t\t}\n\n\t\t\tif (this.graphical) {\n\t\t\t\tif (this.outputToTexture) {\n\t\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\t\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\t\t\t\t\tif (!this.outputTexture || this.outputImmutable) {\n\t\t\t\t\t\tthis._setupOutputTexture();\n\t\t\t\t\t}\n\t\t\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\t\t\t\treturn new Texture(this.outputTexture, texSize, this.threadDim, this.output, this._webGl, 'ArrayTexture(4)');\n\t\t\t\t}\n\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\t\t\tif (this.outputImmutable) {\n\t\t\t\tthis._setupOutputTexture();\n\t\t\t}\n\t\t\tvar outputTexture = this.outputTexture;\n\n\t\t\tif (this.subKernelOutputVariableNames !== null) {\n\t\t\t\tif (this.outputImmutable) {\n\t\t\t\t\tthis.subKernelOutputTextures = [];\n\t\t\t\t\tthis._setupSubOutputTextures(this.subKernelOutputVariableNames.length);\n\t\t\t\t}\n\t\t\t\tthis.drawBuffers.drawBuffersWEBGL(this.drawBuffersMap);\n\t\t\t}\n\n\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\n\t\t\tif (this.subKernelOutputTextures !== null) {\n\t\t\t\tif (this.subKernels !== null) {\n\t\t\t\t\tvar output = [];\n\t\t\t\t\toutput.result = this.renderOutput(outputTexture);\n\t\t\t\t\tfor (var i = 0; i < this.subKernels.length; i++) {\n\t\t\t\t\t\toutput.push(new Texture(this.subKernelOutputTextures[i], texSize, this.threadDim, this.output, this._webGl));\n\t\t\t\t\t}\n\t\t\t\t\treturn output;\n\t\t\t\t} else if (this.subKernelProperties !== null) {\n\t\t\t\t\tvar _output = {\n\t\t\t\t\t\tresult: this.renderOutput(outputTexture)\n\t\t\t\t\t};\n\t\t\t\t\tvar _i = 0;\n\t\t\t\t\tfor (var p in this.subKernelProperties) {\n\t\t\t\t\t\tif (!this.subKernelProperties.hasOwnProperty(p)) continue;\n\t\t\t\t\t\t_output[p] = new Texture(this.subKernelOutputTextures[_i], texSize, this.threadDim, this.output, this._webGl);\n\t\t\t\t\t\t_i++;\n\t\t\t\t\t}\n\t\t\t\t\treturn _output;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.renderOutput(outputTexture);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name renderOutput\n   *\n   *\n   * @desc Helper function to return webGl function's output.\n   * Since the program runs on GPU, we need to get the\n   * output of the program back to CPU and then return them.\n   *\n   * *Note*: This should not be called directly.\n   *\n   * @param {Object} outputTexture - Output Texture returned by webGl program\n   *\n   * @returns {Object|Array} result\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'renderOutput',\n\t\tvalue: function renderOutput(outputTexture) {\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar gl = this._webGl;\n\t\t\tvar threadDim = this.threadDim;\n\t\t\tvar output = this.output;\n\t\t\tif (this.outputToTexture) {\n\t\t\t\treturn new Texture(outputTexture, texSize, this.threadDim, output, this._webGl);\n\t\t\t} else {\n\t\t\t\tvar result = void 0;\n\t\t\t\tif (this.floatOutput) {\n\t\t\t\t\tvar w = texSize[0];\n\t\t\t\t\tvar h = Math.ceil(texSize[1] / 4);\n\t\t\t\t\tresult = new Float32Array(w * h * 4);\n\t\t\t\t\tgl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\n\t\t\t\t} else {\n\t\t\t\t\tvar bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\n\t\t\t\t\tgl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, bytes);\n\t\t\t\t\tresult = new Float32Array(bytes.buffer);\n\t\t\t\t}\n\n\t\t\t\tresult = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\n\n\t\t\t\tif (output.length === 1) {\n\t\t\t\t\treturn result;\n\t\t\t\t} else if (output.length === 2) {\n\t\t\t\t\treturn utils.splitArray(result, output[0]);\n\t\t\t\t} else if (output.length === 3) {\n\t\t\t\t\tvar cube = utils.splitArray(result, output[0] * output[1]);\n\t\t\t\t\treturn cube.map(function (x) {\n\t\t\t\t\t\treturn utils.splitArray(x, output[0]);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name getOutputTexture\n   *\n   * @desc This return defined outputTexture, which is setup in .build(), or if immutable, is defined in .run()\n   *\n   * @returns {Object} Output Texture Cache\n   *\n   */\n\n\t}, {\n\t\tkey: 'getOutputTexture',\n\t\tvalue: function getOutputTexture() {\n\t\t\treturn this.outputTexture;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _setupOutputTexture\n   * @private\n   *\n   * @desc Setup and replace output texture\n   */\n\n\t}, {\n\t\tkey: '_setupOutputTexture',\n\t\tvalue: function _setupOutputTexture() {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar texture = this.outputTexture = this._webGl.createTexture();\n\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.paramNames.length);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\tif (this.floatOutput) {\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n\t\t\t} else {\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\t\t\t}\n\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @param length\n   * @private\n   *\n   * @desc Setup and replace sub-output textures\n   */\n\n\t}, {\n\t\tkey: '_setupSubOutputTextures',\n\t\tvalue: function _setupSubOutputTextures(length) {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar drawBuffersMap = this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n\t\t\tvar textures = this.subKernelOutputTextures = [];\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar texture = this._webGl.createTexture();\n\t\t\t\ttextures.push(texture);\n\t\t\t\tdrawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.paramNames.length + i);\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\tif (this.floatOutput) {\n\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n\t\t\t\t} else {\n\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\t\t\t\t}\n\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name getArgumentTexture\n   *\n   * @desc This uses *getTextureCache** to get the Texture Cache of the argument supplied\n   *\n   * @param {String} name - Name of the argument\n   *\n   * \tTexture cache for the supplied argument\n   *\n   */\n\n\t}, {\n\t\tkey: 'getArgumentTexture',\n\t\tvalue: function getArgumentTexture(name) {\n\t\t\treturn this.getTextureCache('ARGUMENT_' + name);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @name getTextureCache\n   * @function\n   *\n   * @desc Returns the Texture Cache of the supplied parameter (can be kernel, sub-kernel or argument)\n   *\n   * @param {String} name - Name of the subkernel, argument, or kernel.\n   *\n   * @returns {Object} Texture cache\n   *\n   */\n\n\t}, {\n\t\tkey: 'getTextureCache',\n\t\tvalue: function getTextureCache(name) {\n\t\t\tif (this.textureCache.hasOwnProperty(name)) {\n\t\t\t\treturn this.textureCache[name];\n\t\t\t}\n\t\t\treturn this.textureCache[name] = this._webGl.createTexture();\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @name detachTextureCache\n   * @function\n   * @desc removes a texture from the kernel's cache\n   * @param {String} name - Name of texture\n   */\n\n\t}, {\n\t\tkey: 'detachTextureCache',\n\t\tvalue: function detachTextureCache(name) {\n\t\t\tdelete this.textureCache[name];\n\t\t}\n\t}, {\n\t\tkey: 'setUniform1f',\n\t\tvalue: function setUniform1f(name, value) {\n\t\t\tif (this.uniform1fCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform1fCache[name];\n\t\t\t\tif (value === cache) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform1fCache[name] = value;\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform1f(loc, value);\n\t\t}\n\t}, {\n\t\tkey: 'setUniform1i',\n\t\tvalue: function setUniform1i(name, value) {\n\t\t\tif (this.uniform1iCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform1iCache[name];\n\t\t\t\tif (value === cache) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform1iCache[name] = value;\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform1i(loc, value);\n\t\t}\n\t}, {\n\t\tkey: 'setUniform2f',\n\t\tvalue: function setUniform2f(name, value1, value2) {\n\t\t\tif (this.uniform2fCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform2fCache[name];\n\t\t\t\tif (value1 === cache[0] && value2 === cache[1]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform2fCache[name] = [value1, value2];\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform2f(loc, value1, value2);\n\t\t}\n\t}, {\n\t\tkey: 'setUniform2fv',\n\t\tvalue: function setUniform2fv(name, value) {\n\t\t\tif (this.uniform2fvCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform2fvCache[name];\n\t\t\t\tif (value[0] === cache[0] && value[1] === cache[1]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform2fvCache[name] = value;\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform2fv(loc, value);\n\t\t}\n\t}, {\n\t\tkey: 'setUniform2iv',\n\t\tvalue: function setUniform2iv(name, value) {\n\t\t\tif (this.uniform2ivCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform2ivCache[name];\n\t\t\t\tif (value[0] === cache[0] && value[1] === cache[1]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform2ivCache[name] = value;\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform2iv(loc, value);\n\t\t}\n\t}, {\n\t\tkey: 'setUniform3fv',\n\t\tvalue: function setUniform3fv(name, value) {\n\t\t\tif (this.uniform3fvCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform3fvCache[name];\n\t\t\t\tif (value[0] === cache[0] && value[1] === cache[1] && value[2] === cache[2]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform3fvCache[name] = value;\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform3fv(loc, value);\n\t\t}\n\t}, {\n\t\tkey: 'setUniform3iv',\n\t\tvalue: function setUniform3iv(name, value) {\n\t\t\tif (this.uniform3ivCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform3ivCache[name];\n\t\t\t\tif (value[0] === cache[0] && value[1] === cache[1] && value[2] === cache[2]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform3ivCache[name] = value;\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform3iv(loc, value);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name getUniformLocation\n   *\n   * @desc Return WebGlUniformLocation for various variables\n   * related to webGl program, such as user-defiend variables,\n   * as well as, dimension sizes, etc.\n   *\n   */\n\n\t}, {\n\t\tkey: 'getUniformLocation',\n\t\tvalue: function getUniformLocation(name) {\n\t\t\tif (this.programUniformLocationCache.hasOwnProperty(name)) {\n\t\t\t\treturn this.programUniformLocationCache[name];\n\t\t\t}\n\t\t\treturn this.programUniformLocationCache[name] = this._webGl.getUniformLocation(this.program, name);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getFragShaderArtifactMap\n   *\n   * @desc Generate Shader artifacts for the kernel program.\n   * The final object contains HEADER, KERNEL, MAIN_RESULT, and others.\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {Object} An object containing the Shader Artifacts(CONSTANTS, HEADER, KERNEL, etc.)\n   *\n   */\n\n\t}, {\n\t\tkey: '_getFragShaderArtifactMap',\n\t\tvalue: function _getFragShaderArtifactMap(args) {\n\t\t\treturn {\n\t\t\t\tHEADER: this._getHeaderString(),\n\t\t\t\tLOOP_MAX: this._getLoopMaxString(),\n\t\t\t\tCONSTANTS: this._getConstantsString(),\n\t\t\t\tDECODE32_ENDIANNESS: this._getDecode32EndiannessString(),\n\t\t\t\tENCODE32_ENDIANNESS: this._getEncode32EndiannessString(),\n\t\t\t\tDIVIDE_WITH_INTEGER_CHECK: this._getDivideWithIntegerCheckString(),\n\t\t\t\tGET_WRAPAROUND: this._getGetWraparoundString(),\n\t\t\t\tGET_TEXTURE_CHANNEL: this._getGetTextureChannelString(),\n\t\t\t\tGET_TEXTURE_INDEX: this._getGetTextureIndexString(),\n\t\t\t\tGET_RESULT: this._getGetResultString(),\n\t\t\t\tMAIN_PARAMS: this._getMainParamsString(args),\n\t\t\t\tMAIN_CONSTANTS: this._getMainConstantsString(),\n\t\t\t\tKERNEL: this._getKernelString(),\n\t\t\t\tMAIN_RESULT: this._getMainResultString()\n\t\t\t};\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _addArgument\n   *\n   * @desc Adds kernel parameters to the Argument Texture,\n   * binding it to the webGl instance, etc.\n   *\n   * @param {Array|Texture|Number} value - The actual argument supplied to the kernel\n   * @param {String} type - Type of the argument\n   * @param {String} name - Name of the argument\n   *\n   */\n\n\t}, {\n\t\tkey: '_addArgument',\n\t\tvalue: function _addArgument(value, type, name) {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar argumentTexture = this.getArgumentTexture(name);\n\t\t\tif (value instanceof Texture) {\n\t\t\t\ttype = value.type;\n\t\t\t}\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Array':\n\t\t\t\tcase 'Array(2)':\n\t\t\t\tcase 'Array(3)':\n\t\t\t\tcase 'Array(4)':\n\t\t\t\tcase 'Array2D':\n\t\t\t\tcase 'Array3D':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar dim = utils.getDimensions(value, true);\n\t\t\t\t\t\tvar size = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, dim);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar length = size[0] * size[1];\n\n\t\t\t\t\t\tvar _formatArrayTransfer2 = this._formatArrayTransfer(value, length),\n\t\t\t\t\t\t    valuesFlat = _formatArrayTransfer2.valuesFlat,\n\t\t\t\t\t\t    bitRatio = _formatArrayTransfer2.bitRatio;\n\n\t\t\t\t\t\tvar buffer = void 0;\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0], size[1], 0, gl.RGBA, gl.FLOAT, valuesFlat);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbuffer = new Uint8Array(valuesFlat.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0] / bitRatio, size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', dim);\n\t\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('user_' + name + 'BitRatio', bitRatio);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Integer':\n\t\t\t\tcase 'Float':\n\t\t\t\tcase 'Number':\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setUniform1f('user_' + name, value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Input':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar input = value;\n\t\t\t\t\t\tvar _dim = input.size;\n\t\t\t\t\t\tvar _size = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, _dim);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar _length = _size[0] * _size[1];\n\n\t\t\t\t\t\tvar _formatArrayTransfer3 = this._formatArrayTransfer(value.value, _length),\n\t\t\t\t\t\t    _valuesFlat = _formatArrayTransfer3.valuesFlat,\n\t\t\t\t\t\t    _bitRatio = _formatArrayTransfer3.bitRatio;\n\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, _size[0], _size[1], 0, gl.RGBA, gl.FLOAT, inputArray);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _buffer = new Uint8Array(_valuesFlat.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, _size[0] / _bitRatio, _size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, _buffer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', _dim);\n\t\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', _size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('user_' + name + 'BitRatio', _bitRatio);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputImage = value;\n\t\t\t\t\t\tvar _dim2 = [inputImage.width, inputImage.height, 1];\n\t\t\t\t\t\tvar _size2 = [inputImage.width, inputImage.height];\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\t\t\t\t\t// Upload the image into the texture.\n\t\t\t\t\t\tvar mipLevel = 0; // the largest mip\n\t\t\t\t\t\tvar internalFormat = gl.RGBA; // format we want in the texture\n\t\t\t\t\t\tvar srcFormat = gl.RGBA; // format of data we are supplying\n\t\t\t\t\t\tvar srcType = gl.UNSIGNED_BYTE; // type of data we are supplying\n\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, mipLevel, internalFormat, srcFormat, srcType, inputImage);\n\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', _dim2);\n\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', _size2);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'ArrayTexture(4)':\n\t\t\t\tcase 'NumberTexture':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputTexture = value;\n\t\t\t\t\t\tvar _dim3 = inputTexture.dimensions;\n\t\t\t\t\t\tvar _size3 = inputTexture.size;\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, inputTexture.texture);\n\n\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', _dim3);\n\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', _size3);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name + 'BitRatio', 1); // aways float32\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Input type not supported (WebGL): ' + value);\n\t\t\t}\n\t\t\tthis.argumentsLength++;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _addConstant\n   *\n   * @desc Adds kernel parameters to the Argument Texture,\n   * binding it to the webGl instance, etc.\n   *\n   * @param {Array|Texture|Number} value - The actual argument supplied to the kernel\n   * @param {String} type - Type of the argument\n   * @param {String} name - Name of the argument\n   *\n   */\n\n\t}, {\n\t\tkey: '_addConstant',\n\t\tvalue: function _addConstant(value, type, name) {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar argumentTexture = this.getArgumentTexture(name);\n\t\t\tif (value instanceof Texture) {\n\t\t\t\ttype = value.type;\n\t\t\t}\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Array':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar dim = utils.getDimensions(value, true);\n\t\t\t\t\t\tvar size = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, dim);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar length = size[0] * size[1];\n\n\t\t\t\t\t\tvar _formatArrayTransfer4 = this._formatArrayTransfer(value, length),\n\t\t\t\t\t\t    valuesFlat = _formatArrayTransfer4.valuesFlat,\n\t\t\t\t\t\t    bitRatio = _formatArrayTransfer4.bitRatio;\n\n\t\t\t\t\t\tvar buffer = void 0;\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0], size[1], 0, gl.RGBA, gl.FLOAT, valuesFlat);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbuffer = new Uint8Array(valuesFlat.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0] / bitRatio, size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', dim);\n\t\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name + 'BitRatio', bitRatio);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Input':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar input = value;\n\t\t\t\t\t\tvar _dim4 = input.size;\n\t\t\t\t\t\tvar _size4 = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, _dim4);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar _length2 = _size4[0] * _size4[1];\n\n\t\t\t\t\t\tvar _formatArrayTransfer5 = this._formatArrayTransfer(value.value, _length2),\n\t\t\t\t\t\t    _valuesFlat2 = _formatArrayTransfer5.valuesFlat,\n\t\t\t\t\t\t    _bitRatio2 = _formatArrayTransfer5.bitRatio;\n\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, _size4[0], _size4[1], 0, gl.RGBA, gl.FLOAT, inputArray);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _buffer2 = new Uint8Array(_valuesFlat2.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, _size4[0] / _bitRatio2, _size4[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, _buffer2);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', _dim4);\n\t\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', _size4);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name + 'BitRatio', _bitRatio2);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputImage = value;\n\t\t\t\t\t\tvar _dim5 = [inputImage.width, inputImage.height, 1];\n\t\t\t\t\t\tvar _size5 = [inputImage.width, inputImage.height];\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\t\t\t\t\t// Upload the image into the texture.\n\t\t\t\t\t\tvar mipLevel = 0; // the largest mip\n\t\t\t\t\t\tvar internalFormat = gl.RGBA; // format we want in the texture\n\t\t\t\t\t\tvar srcFormat = gl.RGBA; // format of data we are supplying\n\t\t\t\t\t\tvar srcType = gl.UNSIGNED_BYTE; // type of data we are supplying\n\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, mipLevel, internalFormat, srcFormat, srcType, inputImage);\n\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', _dim5);\n\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', _size5);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'ArrayTexture(4)':\n\t\t\t\tcase 'NumberTexture':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputTexture = value;\n\t\t\t\t\t\tvar _dim6 = inputTexture.dimensions;\n\t\t\t\t\t\tvar _size6 = inputTexture.size;\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, inputTexture.texture);\n\n\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', _dim6);\n\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', _size6);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name + 'BitRatio', 1); // aways float32\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Integer':\n\t\t\t\tcase 'Float':\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Input type not supported (WebGL): ' + value);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _formatArrayTransfer\n   *\n   * @desc Adds kernel parameters to the Argument Texture,\n   * binding it to the webGl instance, etc.\n   *\n   * @param {Array} value - The actual argument supplied to the kernel\n   * @param {String} length - the expected total length of the output array\n   *\n   * @returns {Object} bitRatio - bit storage ratio of source to target 'buffer', i.e. if 8bit array -> 32bit tex = 4\n   * \t\t\t\t     valuesFlat - flattened array to transfer\n   */\n\n\t}, {\n\t\tkey: '_formatArrayTransfer',\n\t\tvalue: function _formatArrayTransfer(value, length) {\n\t\t\tvar bitRatio = 1; // bit storage ratio of source to target 'buffer', i.e. if 8bit array -> 32bit tex = 4\n\t\t\tvar valuesFlat = value;\n\t\t\tif (utils.isArray(value[0]) || this.floatTextures) {\n\t\t\t\t// not already flat\n\t\t\t\tvaluesFlat = new Float32Array(length);\n\t\t\t\tutils.flattenTo(value, valuesFlat);\n\t\t\t} else {\n\n\t\t\t\tswitch (value.constructor) {\n\t\t\t\t\tcase Uint8Array:\n\t\t\t\t\tcase Int8Array:\n\t\t\t\t\t\tbitRatio = 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Uint16Array:\n\t\t\t\t\tcase Int16Array:\n\t\t\t\t\t\tbitRatio = 2;\n\t\t\t\t\tcase Float32Array:\n\t\t\t\t\tcase Int32Array:\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvaluesFlat = new Float32Array(length);\n\t\t\t\t\t\tutils.flattenTo(value, valuesFlat);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tbitRatio: bitRatio,\n\t\t\t\tvaluesFlat: valuesFlat\n\t\t\t};\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getHeaderString\n   *\n   * @desc Get the header string for the program.\n   * This returns an empty string if no sub-kernels are defined.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getHeaderString',\n\t\tvalue: function _getHeaderString() {\n\t\t\treturn this.subKernels !== null || this.subKernelProperties !== null ?\n\t\t\t//webgl2 '#version 300 es\\n' :\n\t\t\t'#extension GL_EXT_draw_buffers : require\\n' : '';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getLoopMaxString\n   *\n   * @desc Get the maximum loop size String.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getLoopMaxString',\n\t\tvalue: function _getLoopMaxString() {\n\t\t\treturn this.loopMaxIterations ? ' ' + parseInt(this.loopMaxIterations) + '.0;\\n' : ' 1000.0;\\n';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getConstantsString\n   *\n   * @desc Generate transpiled glsl Strings for constant parameters sent to a kernel\n   *\n   * They can be defined by *hardcodeConstants*\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getConstantsString',\n\t\tvalue: function _getConstantsString() {\n\t\t\tvar result = [];\n\t\t\tvar threadDim = this.threadDim;\n\t\t\tvar texSize = this.texSize;\n\t\t\tif (this.hardcodeConstants) {\n\t\t\t\tresult.push('ivec3 uOutputDim = ivec3(' + threadDim[0] + ',' + threadDim[1] + ', ' + threadDim[2] + ')', 'ivec2 uTexSize = ivec2(' + texSize[0] + ', ' + texSize[1] + ')');\n\t\t\t} else {\n\t\t\t\tresult.push('uniform ivec3 uOutputDim', 'uniform ivec2 uTexSize');\n\t\t\t}\n\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getTextureCoordinate\n   *\n   * @desc Get texture coordinate string for the program\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getTextureCoordinate',\n\t\tvalue: function _getTextureCoordinate() {\n\t\t\tvar names = this.subKernelOutputVariableNames;\n\t\t\tif (names === null || names.length < 1) {\n\t\t\t\treturn 'varying vec2 vTexCoord;\\n';\n\t\t\t} else {\n\t\t\t\treturn 'out vec2 vTexCoord;\\n';\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getDecode32EndiannessString\n   *\n   * @desc Get Decode32 endianness string for little-endian and big-endian\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getDecode32EndiannessString',\n\t\tvalue: function _getDecode32EndiannessString() {\n\t\t\treturn this.endianness === 'LE' ? '' : '  rgba.rgba = rgba.abgr;\\n';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getEncode32EndiannessString\n   *\n   * @desc Get Encode32 endianness string for little-endian and big-endian\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getEncode32EndiannessString',\n\t\tvalue: function _getEncode32EndiannessString() {\n\t\t\treturn this.endianness === 'LE' ? '' : '  rgba.rgba = rgba.abgr;\\n';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getDivideWithIntegerCheckString\n   *\n   * @desc if fixIntegerDivisionAccuracy provide method to replace /\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getDivideWithIntegerCheckString',\n\t\tvalue: function _getDivideWithIntegerCheckString() {\n\t\t\treturn this.fixIntegerDivisionAccuracy ? '\\n\\t\\t\\t  float div_with_int_check(float x, float y) {\\n\\t\\t\\t  if (floor(x) == x && floor(y) == y && integerMod(x, y) == 0.0) {\\n\\t\\t\\t    return float(int(x)/int(y));\\n\\t\\t\\t  }\\n\\t\\t\\t  return x / y;\\n\\t\\t\\t}\\n\\t\\t\\t' : '';\n\t\t}\n\n\t\t/**\n   * @function\n   * @memberOf WebGLKernel#\n   * @name _getGetWraparoundString\n   *\n   * @returns {String} wraparound string\n   */\n\n\t}, {\n\t\tkey: '_getGetWraparoundString',\n\t\tvalue: function _getGetWraparoundString() {\n\t\t\treturn this.wraparound ? '  xyz = mod(xyz, texDim);\\n' : '';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getGetTextureChannelString\n   *\n   */\n\n\t}, {\n\t\tkey: '_getGetTextureChannelString',\n\t\tvalue: function _getGetTextureChannelString() {\n\t\t\tif (!this.floatTextures) return '';\n\n\t\t\treturn this._linesToString(['  int channel = integerMod(index, 4)', '  index = index / 4']);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getGetTextureIndexString\n   *\n   * @desc Get generic texture index string, if floatTextures flag is true.\n   *\n   * @example\n   * '  index = float(int(index)/4);\\n'\n   *\n   */\n\n\t}, {\n\t\tkey: '_getGetTextureIndexString',\n\t\tvalue: function _getGetTextureIndexString() {\n\t\t\treturn this.floatTextures ? '  index = index / 4;\\n' : '';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getGetResultString\n   *\n   */\n\n\t}, {\n\t\tkey: '_getGetResultString',\n\t\tvalue: function _getGetResultString() {\n\t\t\tif (!this.floatTextures) {\n\t\t\t\treturn '  return decode(texel, x, bitRatio);';\n\t\t\t}\n\t\t\treturn this._linesToString(['  if (channel == 0) return texel.r', '  if (channel == 1) return texel.g', '  if (channel == 2) return texel.b', '  if (channel == 3) return texel.a']);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getMainParamsString\n   *\n   * @desc Generate transpiled glsl Strings for user-defined parameters sent to a kernel\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getMainParamsString',\n\t\tvalue: function _getMainParamsString(args) {\n\t\t\tvar result = [];\n\t\t\tvar paramTypes = this.paramTypes;\n\t\t\tvar paramNames = this.paramNames;\n\t\t\tfor (var i = 0; i < paramNames.length; i++) {\n\t\t\t\tvar param = args[i];\n\t\t\t\tvar paramName = paramNames[i];\n\t\t\t\tvar paramType = paramTypes[i];\n\t\t\t\tif (this.hardcodeConstants) {\n\t\t\t\t\tif (paramType === 'Array' || paramType === 'NumberTexture' || paramType === 'ArrayTexture(4)') {\n\t\t\t\t\t\tvar paramDim = utils.getDimensions(param, true);\n\t\t\t\t\t\tvar paramSize = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, paramDim);\n\n\t\t\t\t\t\tresult.push('uniform sampler2D user_' + paramName, 'ivec2 user_' + paramName + 'Size = ivec2(' + paramSize[0] + ', ' + paramSize[1] + ')', 'ivec3 user_' + paramName + 'Dim = ivec3(' + paramDim[0] + ', ' + paramDim[1] + ', ' + paramDim[2] + ')', 'uniform int user_' + paramName + 'BitRatio');\n\t\t\t\t\t} else if (paramType === 'Integer') {\n\t\t\t\t\t\tresult.push('float user_' + paramName + ' = ' + param + '.0');\n\t\t\t\t\t} else if (paramType === 'Float') {\n\t\t\t\t\t\tresult.push('float user_' + paramName + ' = ' + param);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (paramType === 'Array' || paramType === 'NumberTexture' || paramType === 'ArrayTexture(4)' || paramType === 'Input' || paramType === 'HTMLImage') {\n\t\t\t\t\t\tresult.push('uniform sampler2D user_' + paramName, 'uniform ivec2 user_' + paramName + 'Size', 'uniform ivec3 user_' + paramName + 'Dim');\n\t\t\t\t\t\tif (paramType !== 'HTMLImage') {\n\t\t\t\t\t\t\tresult.push('uniform int user_' + paramName + 'BitRatio');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (paramType === 'Integer' || paramType === 'Float') {\n\t\t\t\t\t\tresult.push('uniform float user_' + paramName);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Param type ' + paramType + ' not supported in WebGL, only WebGL2');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getMainConstantsString\n   *\n   */\n\n\t}, {\n\t\tkey: '_getMainConstantsString',\n\t\tvalue: function _getMainConstantsString() {\n\t\t\tvar result = [];\n\t\t\tif (this.constants) {\n\t\t\t\tfor (var name in this.constants) {\n\t\t\t\t\tif (!this.constants.hasOwnProperty(name)) continue;\n\t\t\t\t\tvar value = this.constants[name];\n\t\t\t\t\tvar type = utils.getArgumentType(value);\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase 'Integer':\n\t\t\t\t\t\t\tresult.push('const float constants_' + name + ' = ' + parseInt(value) + '.0');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Float':\n\t\t\t\t\t\t\tresult.push('const float constants_' + name + ' = ' + parseFloat(value));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tcase 'Input':\n\t\t\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t\tcase 'NumberTexture':\n\t\t\t\t\t\tcase 'ArrayTexture(4)':\n\t\t\t\t\t\t\tresult.push('uniform sampler2D constants_' + name, 'uniform ivec2 constants_' + name + 'Size', 'uniform ivec3 constants_' + name + 'Dim', 'uniform int constants_' + name + 'BitRatio');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error('Unsupported constant ' + name + ' type ' + type);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getKernelString\n   *\n   * @desc Get Kernel program string (in *glsl*) for a kernel.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getKernelString',\n\t\tvalue: function _getKernelString() {\n\t\t\tvar result = [];\n\t\t\tvar names = this.subKernelOutputVariableNames;\n\t\t\tif (names !== null) {\n\t\t\t\tresult.push('float kernelResult = 0.0');\n\t\t\t\tfor (var i = 0; i < names.length; i++) {\n\t\t\t\t\tresult.push('float ' + names[i] + ' = 0.0');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult.push('float kernelResult = 0.0');\n\t\t\t}\n\n\t\t\treturn this._linesToString(result) + this.functionBuilder.getPrototypeString('kernel');\n\t\t}\n\n\t\t/**\n   *\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getMainResultString\n   *\n   * @desc Get main result string with checks for floatOutput, graphical, subKernelsOutputs, etc.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getMainResultString',\n\t\tvalue: function _getMainResultString() {\n\t\t\tvar names = this.subKernelOutputVariableNames;\n\t\t\tvar result = [];\n\n\t\t\tif (this.floatOutput) {\n\t\t\t\tresult.push('  index *= 4');\n\t\t\t}\n\n\t\t\tif (this.graphical) {\n\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  gl_FragColor = actualColor');\n\t\t\t} else if (this.floatOutput) {\n\t\t\t\tvar channels = ['r', 'g', 'b', 'a'];\n\n\t\t\t\tfor (var i = 0; i < channels.length; ++i) {\n\t\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)');\n\t\t\t\t\tresult.push('  kernel()');\n\n\t\t\t\t\tif (names) {\n\t\t\t\t\t\tresult.push('  gl_FragData[0].' + channels[i] + ' = kernelResult');\n\n\t\t\t\t\t\tfor (var j = 0; j < names.length; ++j) {\n\t\t\t\t\t\t\tresult.push('  gl_FragData[' + (j + 1) + '].' + channels[i] + ' = ' + names[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.push('  gl_FragColor.' + channels[i] + ' = kernelResult');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < channels.length - 1) {\n\t\t\t\t\t\tresult.push('  index += 1');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (names !== null) {\n\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)');\n\t\t\t\tresult.push('  kernel()');\n\t\t\t\tresult.push('  gl_FragData[0] = encode32(kernelResult)');\n\t\t\t\tfor (var _i2 = 0; _i2 < names.length; _i2++) {\n\t\t\t\t\tresult.push('  gl_FragData[' + (_i2 + 1) + '] = encode32(' + names[_i2] + ')');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  gl_FragColor = encode32(kernelResult)');\n\t\t\t}\n\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _linesToString\n   *\n   * @param {Array} lines - An Array of strings\n   *\n   * @returns {String} Single combined String, seperated by *\\n*\n   *\n   */\n\n\t}, {\n\t\tkey: '_linesToString',\n\t\tvalue: function _linesToString(lines) {\n\t\t\tif (lines.length > 0) {\n\t\t\t\treturn lines.join(';\\n') + ';\\n';\n\t\t\t} else {\n\t\t\t\treturn '\\n';\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _replaceArtifacts\n   *\n   * @param {String} src - Shader string\n   * @param {Array} map - Variables/Constants associated with shader\n   *\n   */\n\n\t}, {\n\t\tkey: '_replaceArtifacts',\n\t\tvalue: function _replaceArtifacts(src, map) {\n\t\t\treturn src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z])*)__;\\n/g, function (match, artifact) {\n\t\t\t\tif (map.hasOwnProperty(artifact)) {\n\t\t\t\t\treturn map[artifact];\n\t\t\t\t}\n\t\t\t\tthrow 'unhandled artifact ' + artifact;\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _addKernels\n   *\n   * @desc Adds all the sub-kernels supplied with this Kernel instance.\n   *\n   */\n\n\t}, {\n\t\tkey: '_addKernels',\n\t\tvalue: function _addKernels() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar builder = this.functionBuilder;\n\t\t\tvar gl = this._webGl;\n\n\t\t\tbuilder.addFunctions(this.functions, {\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output\n\t\t\t});\n\t\t\tbuilder.addNativeFunctions(this.nativeFunctions);\n\n\t\t\tbuilder.addKernel(this.fnString, {\n\t\t\t\tprototypeOnly: false,\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output,\n\t\t\t\tdebug: this.debug,\n\t\t\t\tloopMaxIterations: this.loopMaxIterations,\n\t\t\t\tparamNames: this.paramNames,\n\t\t\t\tparamTypes: this.paramTypes,\n\t\t\t\tconstantTypes: this.constantTypes,\n\t\t\t\tfixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n\t\t\t});\n\n\t\t\tif (this.subKernels !== null) {\n\t\t\t\tvar drawBuffers = this.drawBuffers = gl.getExtension('WEBGL_draw_buffers');\n\t\t\t\tif (!drawBuffers) throw new Error('could not instantiate draw buffers extension');\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tthis.subKernels.forEach(function (subKernel) {\n\t\t\t\t\treturn _this2._addSubKernel(subKernel);\n\t\t\t\t});\n\t\t\t} else if (this.subKernelProperties !== null) {\n\t\t\t\tvar _drawBuffers = this.drawBuffers = gl.getExtension('WEBGL_draw_buffers');\n\t\t\t\tif (!_drawBuffers) throw new Error('could not instantiate draw buffers extension');\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tObject.keys(this.subKernelProperties).forEach(function (property) {\n\t\t\t\t\treturn _this2._addSubKernel(_this2.subKernelProperties[property]);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: '_addSubKernel',\n\t\tvalue: function _addSubKernel(subKernel) {\n\t\t\tthis.functionBuilder.addSubKernel(subKernel, {\n\t\t\t\tprototypeOnly: false,\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output,\n\t\t\t\tdebug: this.debug,\n\t\t\t\tloopMaxIterations: this.loopMaxIterations,\n\t\t\t\tfixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n\t\t\t});\n\t\t\tthis.subKernelOutputVariableNames.push(subKernel.name + 'Result');\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getFragShaderString\n   *\n   * @desc Get the fragment shader String.\n   * If the String hasn't been compiled yet,\n   * then this method compiles it as well\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {string} Fragment Shader string\n   *\n   */\n\n\t}, {\n\t\tkey: '_getFragShaderString',\n\t\tvalue: function _getFragShaderString(args) {\n\t\t\tif (this.compiledFragShaderString !== null) {\n\t\t\t\treturn this.compiledFragShaderString;\n\t\t\t}\n\t\t\treturn this.compiledFragShaderString = this._replaceArtifacts(this.constructor.fragShaderString, this._getFragShaderArtifactMap(args));\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getVertShaderString\n   *\n   * @desc Get the vertical shader String\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {string} Vertical Shader string\n   *\n   */\n\n\t}, {\n\t\tkey: '_getVertShaderString',\n\t\tvalue: function _getVertShaderString(args) {\n\t\t\tif (this.compiledVertShaderString !== null) {\n\t\t\t\treturn this.compiledVertShaderString;\n\t\t\t}\n\t\t\treturn this.compiledVertShaderString = this.constructor.vertShaderString;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name toString\n   *\n   * @desc Returns the *pre-compiled* Kernel as a JS Object String, that can be reused.\n   *\n   */\n\n\t}, {\n\t\tkey: 'toString',\n\t\tvalue: function toString() {\n\t\t\treturn kernelString(this);\n\t\t}\n\t}, {\n\t\tkey: 'addFunction',\n\t\tvalue: function addFunction(fn) {\n\t\t\tthis.functionBuilder.addFunction(null, fn);\n\t\t}\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy(removeCanvasReferences) {\n\t\t\t_get(WebGLKernel.prototype.__proto__ || Object.getPrototypeOf(WebGLKernel.prototype), 'destroy', this).call(this);\n\t\t\tif (this.outputTexture) {\n\t\t\t\tthis._webGl.deleteTexture(this.outputTexture);\n\t\t\t}\n\t\t\tif (this.buffer) {\n\t\t\t\tthis._webGl.deleteBuffer(this.buffer);\n\t\t\t}\n\t\t\tif (this.framebuffer) {\n\t\t\t\tthis._webGl.deleteFramebuffer(this.framebuffer);\n\t\t\t}\n\n\t\t\tif (this.vertShader) {\n\t\t\t\tthis._webGl.deleteShader(this.vertShader);\n\t\t\t}\n\n\t\t\tif (this.fragShader) {\n\t\t\t\tthis._webGl.deleteShader(this.fragShader);\n\t\t\t}\n\n\t\t\tif (this.program) {\n\t\t\t\tthis._webGl.deleteProgram(this.program);\n\t\t\t}\n\n\t\t\tvar keys = Object.keys(this.textureCache);\n\n\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\tvar name = keys[i];\n\t\t\t\tthis._webGl.deleteTexture(this.textureCache[name]);\n\t\t\t}\n\n\t\t\tif (this.subKernelOutputTextures) {\n\t\t\t\tfor (var _i3 = 0; _i3 < this.subKernelOutputTextures.length; _i3++) {\n\t\t\t\t\tthis._webGl.deleteTexture(this.subKernelOutputTextures[_i3]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (removeCanvasReferences) {\n\t\t\t\tvar idx = canvases.indexOf(this._canvas);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tcanvases[idx] = null;\n\t\t\t\t\tmaxTexSizes[idx] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete this._webGl;\n\t\t}\n\t}]);\n\n\treturn WebGLKernel;\n}(KernelBase);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n\n\t/**\n  * @constructor FunctionBuilderBase\n  *\n  * @desc This handles all the raw state, converted state, etc. of a single function.\n  * [INTERNAL] A collection of functionNodes.\n  * \n  * @prop {Object} nodeMap - Object map, where nodeMap[function] = new FunctionNode;\n  * @prop {Object} gpu - The current gpu instance bound to this builder\n  * @prop {Object} rootKernel - The root kernel object, contains the paramNames, dimensions etc.\n  * \n  */\n\tfunction FunctionBuilderBase(gpu) {\n\t\t_classCallCheck(this, FunctionBuilderBase);\n\n\t\tthis.nodeMap = {};\n\t\tthis.nativeFunctions = {};\n\t\tthis.gpu = gpu;\n\t\tthis.rootKernel = null;\n\t\tthis.Node = null;\n\t}\n\n\t_createClass(FunctionBuilderBase, [{\n\t\tkey: 'addNativeFunction',\n\t\tvalue: function addNativeFunction(functionName, glslFunctionString) {\n\t\t\tthis.nativeFunctions[functionName] = glslFunctionString;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name addFunction\n   *\n   * @desc Instantiates a FunctionNode, and add it to the nodeMap\n   *\n   * @param {String} functionName - Function name to assume, if its null, it attempts to extract from the function\n   * @param {Function} jsFunction - JS Function to do conversion\n   * @param {Object} [options]\n   *\n   */\n\n\t}, {\n\t\tkey: 'addFunction',\n\t\tvalue: function addFunction(functionName, jsFunction, options) {\n\t\t\tthis.addFunctionNode(new this.Node(functionName, jsFunction, options).setBuilder(this));\n\t\t}\n\t}, {\n\t\tkey: 'addFunctions',\n\t\tvalue: function addFunctions(functions, options) {\n\t\t\tif (functions) {\n\t\t\t\tif (Array.isArray(functions)) {\n\t\t\t\t\tfor (var i = 0; i < functions.length; i++) {\n\t\t\t\t\t\tthis.addFunction(null, functions[i], options);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (var p in functions) {\n\t\t\t\t\t\tthis.addFunction(p, functions[p], options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'addNativeFunctions',\n\t\tvalue: function addNativeFunctions(nativeFunctions) {\n\t\t\tfor (var functionName in nativeFunctions) {\n\t\t\t\tif (!nativeFunctions.hasOwnProperty(functionName)) continue;\n\t\t\t\tthis.addNativeFunction(functionName, nativeFunctions[functionName]);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name addFunctionNode\n   *\n   * @desc Add the function node directly\n   *\n   * @param {functionNode} inNode - functionNode to add\n   *\n   */\n\n\t}, {\n\t\tkey: 'addFunctionNode',\n\t\tvalue: function addFunctionNode(inNode) {\n\t\t\tthis.nodeMap[inNode.functionName] = inNode;\n\t\t\tif (inNode.isRootKernel) {\n\t\t\t\tthis.rootKernel = inNode;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name traceFunctionCalls\n   *\n   * @desc Trace all the depending functions being called, from a single function\n   *\n   * This allow for 'unneeded' functions to be automatically optimized out.\n   * Note that the 0-index, is the starting function trace.\n   *\n   * @param {String} functionName - Function name to trace from, default to 'kernel'\n   * @param {String[]} retList - Returning list of function names that is traced. Including itself.\n   * @param {Object} [parent] - Parent node\n   *\n   * @returns {String[]}  Returning list of function names that is traced. Including itself.\n   */\n\n\t}, {\n\t\tkey: 'traceFunctionCalls',\n\t\tvalue: function traceFunctionCalls(functionName, retList, parent) {\n\t\t\tfunctionName = functionName || 'kernel';\n\t\t\tretList = retList || [];\n\n\t\t\tvar fNode = this.nodeMap[functionName];\n\t\t\tif (fNode) {\n\t\t\t\t// Check if function already exists\n\t\t\t\tvar functionIndex = retList.indexOf(functionName);\n\t\t\t\tif (functionIndex === -1) {\n\t\t\t\t\tretList.push(functionName);\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tfNode.parent = parent;\n\t\t\t\t\t}\n\t\t\t\t\tfNode.getFunctionString(); //ensure JS trace is done\n\t\t\t\t\tfor (var i = 0; i < fNode.calledFunctions.length; ++i) {\n\t\t\t\t\t\tthis.traceFunctionCalls(fNode.calledFunctions[i], retList, fNode);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/**\n      * https://github.com/gpujs/gpu.js/issues/207\n      * if dependent function is already in the list, because a function depends on it, and because it has\n      * already been traced, we know that we must move the dependent function to the end of the the retList.\n      * */\n\t\t\t\t\tvar dependantFunctionName = retList.splice(functionIndex, 1)[0];\n\t\t\t\t\tretList.push(dependantFunctionName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.nativeFunctions[functionName]) {\n\t\t\t\tif (retList.indexOf(functionName) >= 0) {\n\t\t\t\t\t// Does nothing if already traced\n\t\t\t\t} else {\n\t\t\t\t\tretList.push(functionName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn retList;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name addKernel\n   *\n   * @desc Add a new kernel to this instance\n   *\n   * @param {String} fnString - Kernel function as a String\n   * @param {Object} options - Settings object to set constants, debug mode, etc.\n   *\n   *\n   * @returns {Object} The inserted kernel as a Kernel Node\n   *\n   */\n\n\t}, {\n\t\tkey: 'addKernel',\n\t\tvalue: function addKernel(fnString, options) {\n\t\t\tvar kernelNode = new this.Node('kernel', fnString, options);\n\t\t\tkernelNode.setBuilder(this);\n\t\t\tkernelNode.isRootKernel = true;\n\t\t\tthis.addFunctionNode(kernelNode);\n\t\t\treturn kernelNode;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name addSubKernel\n   *\n   * @desc Add a new sub-kernel to the current kernel instance\n   *\n   * @param {Function} jsFunction - Sub-kernel function (JavaScript)\n   * @param {Object} options - Settings object to set constants, debug mode, etc.\n   *\n   * @returns {Object} The inserted sub-kernel as a Kernel Node\n   *\n   */\n\n\t}, {\n\t\tkey: 'addSubKernel',\n\t\tvalue: function addSubKernel(jsFunction, options) {\n\t\t\tvar kernelNode = new this.Node(null, jsFunction, options);\n\t\t\tkernelNode.setBuilder(this);\n\t\t\tkernelNode.isSubKernel = true;\n\t\t\tthis.addFunctionNode(kernelNode);\n\t\t\treturn kernelNode;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionBuilder#\n   * @name getPrototypeString\n   * @function\n   *\n   * @desc Return the string for a function\n   *\n   * @param {String} functionName - Function name to trace from. If null, it returns the WHOLE builder stack\n   *\n   * @returns {String} The full string, of all the various functions. Trace optimized if functionName given\n   *\n   */\n\n\t}, {\n\t\tkey: 'getPrototypeString',\n\t\tvalue: function getPrototypeString(functionName) {\n\t\t\treturn this.getPrototypes(functionName).join('\\n');\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionBuilder#\n   * @name getPrototypeString\n   * @function\n   *\n   * @desc Return the string for a function\n   *\n   * @param {String} [functionName] - Function name to trace from. If null, it returns the WHOLE builder stack\n   *\n   * @returns {Array} The full string, of all the various functions. Trace optimized if functionName given\n   *\n   */\n\n\t}, {\n\t\tkey: 'getPrototypes',\n\t\tvalue: function getPrototypes(functionName) {\n\t\t\tthis.rootKernel.generate();\n\t\t\tif (functionName) {\n\t\t\t\treturn this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functionName, []).reverse());\n\t\t\t}\n\t\t\treturn this.getPrototypesFromFunctionNames(Object.keys(this.nodeMap));\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name getStringFromFunctionNames\n   *\n   * @desc Get string from function names\n   *\n   * @param {String[]} functionList - List of function to build string\n   *\n   * @returns {String} The string, of all the various functions. Trace optimized if functionName given\n   *\n   */\n\n\t}, {\n\t\tkey: 'getStringFromFunctionNames',\n\t\tvalue: function getStringFromFunctionNames(functionList) {\n\t\t\tvar ret = [];\n\t\t\tfor (var i = 0; i < functionList.length; ++i) {\n\t\t\t\tvar node = this.nodeMap[functionList[i]];\n\t\t\t\tif (node) {\n\t\t\t\t\tret.push(this.nodeMap[functionList[i]].getFunctionString());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ret.join('\\n');\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name getPrototypeStringFromFunctionNames\n   *\n   * @desc Return string of all functions converted\n   *\n   * @param {String[]} functionList - List of function names to build the string.\n   * @param {Object} [opt - Settings object passed to functionNode. See functionNode for more details.\n   *\n   * @returns {Array} Prototypes of all functions converted\n   *\n   */\n\n\t}, {\n\t\tkey: 'getPrototypesFromFunctionNames',\n\t\tvalue: function getPrototypesFromFunctionNames(functionList, opt) {\n\t\t\tvar ret = [];\n\t\t\tfor (var i = 0; i < functionList.length; ++i) {\n\t\t\t\tvar functionName = functionList[i];\n\t\t\t\tvar node = this.nodeMap[functionName];\n\t\t\t\tif (node) {\n\t\t\t\t\tret.push(node.getFunctionPrototypeString(opt));\n\t\t\t\t} else if (this.nativeFunctions[functionName]) {\n\t\t\t\t\tret.push(this.nativeFunctions[functionName]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name getPrototypeStringFromFunctionNames\n   *\n   * @desc Return string of all functions converted\n   *\n   * @param {String[]} functionList - List of function names to build the string.\n   * @param {Object} opt - Settings object passed to functionNode. See functionNode for more details.\n   *\n   * @returns {String} Prototype string of all functions converted\n   *\n   */\n\n\t}, {\n\t\tkey: 'getPrototypeStringFromFunctionNames',\n\t\tvalue: function getPrototypeStringFromFunctionNames(functionList, opt) {\n\t\t\treturn this.getPrototypesFromFunctionNames(functionList, opt).toString();\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name getString\n   *\n   * Get string for a particular function name\n   *\n   * @param {String} functionName - Function name to trace from. If null, it returns the WHOLE builder stack\n   *\n   * @returns {String} The string, of all the various functions. Trace optimized if functionName given\n   *\n   */\n\n\t}, {\n\t\tkey: 'getString',\n\t\tvalue: function getString(functionName, opt) {\n\t\t\tif (opt === undefined) {\n\t\t\t\topt = {};\n\t\t\t}\n\n\t\t\tif (functionName) {\n\t\t\t\treturn this.getStringFromFunctionNames(this.traceFunctionCalls(functionName, [], opt).reverse(), opt);\n\t\t\t}\n\t\t\treturn this.getStringFromFunctionNames(Object.keys(this.nodeMap), opt);\n\t\t}\n\t}]);\n\n\treturn FunctionBuilderBase;\n}();","// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords = {\n  5: ecma5AndLessKeywords,\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,190,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,54,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,86,26,230,43,117,63,32,0,257,0,11,39,8,0,22,0,12,39,3,3,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,68,12,0,67,12,65,1,31,6129,15,754,9486,286,82,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,60,67,1213,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541];\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,280,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1016,45,17,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,2214,6,110,6,6,9,792487,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) { return false }\n    pos += set[i + 1];\n    if (pos >= code) { return true }\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) { return code === 36 }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) { return code === 36 }\n  if (code < 58) { return true }\n  if (code < 65) { return false }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true};\nvar startsExpr = {startsExpr: true};\n\n// Map keyword names to token types.\n\nvar keywords$1 = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name;\n  return keywords$1[name] = new TokenType(name, options)\n}\n\nvar types = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\"),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code, ecma2019String) {\n  return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\n// Checks if an object has a property.\n\nfunction has(obj, propName) {\n  return hasOwnProperty.call(obj, propName)\n}\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); });\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) { this.source = p.sourceFile; }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur;\n    var match = lineBreakG.exec(input);\n    if (match && match.index < offset) {\n      ++line;\n      cur = match.index + match[0].length;\n    } else {\n      return new Position(line, offset - cur)\n    }\n  }\n}\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must\n  // be either 3, 5, 6 (2015), 7 (2016), or 8 (2017). This influences support\n  // for strict mode, the set of reserved words, and support for\n  // new syntax features. The default is 7.\n  ecmaVersion: 7,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // th position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: false,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false,\n  plugins: {}\n};\n\n// Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions)\n    { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n  if (options.ecmaVersion >= 2015)\n    { options.ecmaVersion -= 2009; }\n\n  if (options.allowReserved == null)\n    { options.allowReserved = options.ecmaVersion < 5; }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) { return tokens.push(token); };\n  }\n  if (isArray(options.onComment))\n    { options.onComment = pushComment(options, options.onComment); }\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations)\n      { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n    if (options.ranges)\n      { comment.range = [start, end]; }\n    array.push(comment);\n  }\n}\n\n// Registered plugins\nvar plugins = {};\n\nfunction keywordRegexp(words) {\n  return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = keywordRegexp(keywords[options.ecmaVersion >= 6 ? 6 : 5]);\n  var reserved = \"\";\n  if (!options.allowReserved) {\n    for (var v = options.ecmaVersion;; v--)\n      { if (reserved = reservedWords[v]) { break } }\n    if (options.sourceType === \"module\") { reserved += \" await\"; }\n  }\n  this.reservedWords = keywordRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = keywordRegexp(reservedStrict);\n  this.reservedWordsStrictBind = keywordRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Load plugins\n  this.loadPlugins(options.plugins);\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n\n  // Flags to track whether we are in a function, a generator, an async function.\n  this.inFunction = this.inGenerator = this.inAsync = false;\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = 0;\n  // Labels in scope.\n  this.labels = [];\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    { this.skipLineComment(2); }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterFunctionScope();\n\n  // For RegExp validation\n  this.regexpState = null;\n};\n\n// DEPRECATED Kept for backwards compatibility until 3.0 in case a plugin uses them\nParser.prototype.isKeyword = function isKeyword (word) { return this.keywords.test(word) };\nParser.prototype.isReservedWord = function isReservedWord (word) { return this.reservedWords.test(word) };\n\nParser.prototype.extend = function extend (name, f) {\n  this[name] = f(this[name]);\n};\n\nParser.prototype.loadPlugins = function loadPlugins (pluginConfigs) {\n    var this$1 = this;\n\n  for (var name in pluginConfigs) {\n    var plugin = plugins[name];\n    if (!plugin) { throw new Error(\"Plugin '\" + name + \"' not found\") }\n    plugin(this$1, pluginConfigs[name]);\n  }\n};\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node)\n};\n\nvar pp = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\"|;)/;\npp.strictDirective = function(start) {\n  var this$1 = this;\n\n  for (;;) {\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this$1.input)[0].length;\n    var match = literal.exec(this$1.input.slice(start));\n    if (!match) { return false }\n    if ((match[1] || match[2]) === \"use strict\") { return true }\n    start += match[0].length;\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp.eat = function(type) {\n  if (this.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function(name) {\n  return this.type === types.name && this.value === name && !this.containsEsc\n};\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function(name) {\n  if (!this.isContextual(name)) { return false }\n  this.next();\n  return true\n};\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function(name) {\n  if (!this.eatContextual(name)) { this.unexpected(); }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function() {\n  return this.type === types.eof ||\n    this.type === types.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n    return true\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function() {\n  if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n};\n\npp.afterTrailingComma = function(tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma)\n      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n    if (!notNext)\n      { this.next(); }\n    return true\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp.expect = function(type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nfunction DestructuringErrors() {\n  this.shorthandAssign =\n  this.trailingComma =\n  this.parenthesizedAssign =\n  this.parenthesizedBind =\n  this.doubleProto =\n    -1;\n}\n\npp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) { return }\n  if (refDestructuringErrors.trailingComma > -1)\n    { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n};\n\npp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) { return false }\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n  if (shorthandAssign >= 0)\n    { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n  if (doubleProto >= 0)\n    { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n};\n\npp.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n  if (this.awaitPos)\n    { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n};\n\npp.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    { return this.isSimpleAssignTarget(expr.expression) }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n};\n\nvar pp$1 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$1.parseTopLevel = function(node) {\n  var this$1 = this;\n\n  var exports = {};\n  if (!node.body) { node.body = []; }\n  while (this.type !== types.eof) {\n    var stmt = this$1.parseStatement(true, true, exports);\n    node.body.push(stmt);\n  }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType;\n  }\n  return this.finishNode(node, \"Program\")\n};\n\nvar loopLabel = {kind: \"loop\"};\nvar switchLabel = {kind: \"switch\"};\n\npp$1.isLet = function() {\n  if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n  if (nextCh === 91 || nextCh === 123) { return true } // '{' and '['\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n    var ident = this.input.slice(next, pos);\n    if (!keywordRelationalOperator.test(ident)) { return true }\n  }\n  return false\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$1.isAsyncFunction = function() {\n  if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length;\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$1.parseStatement = function(declaration, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind;\n\n  if (this.isLet()) {\n    starttype = types._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case types._debugger: return this.parseDebuggerStatement(node)\n  case types._do: return this.parseDoStatement(node)\n  case types._for: return this.parseForStatement(node)\n  case types._function:\n    if (!declaration && this.options.ecmaVersion >= 6) { this.unexpected(); }\n    return this.parseFunctionStatement(node, false)\n  case types._class:\n    if (!declaration) { this.unexpected(); }\n    return this.parseClass(node, true)\n  case types._if: return this.parseIfStatement(node)\n  case types._return: return this.parseReturnStatement(node)\n  case types._switch: return this.parseSwitchStatement(node)\n  case types._throw: return this.parseThrowStatement(node)\n  case types._try: return this.parseTryStatement(node)\n  case types._const: case types._var:\n    kind = kind || this.value;\n    if (!declaration && kind !== \"var\") { this.unexpected(); }\n    return this.parseVarStatement(node, kind)\n  case types._while: return this.parseWhileStatement(node)\n  case types._with: return this.parseWithStatement(node)\n  case types.braceL: return this.parseBlock()\n  case types.semi: return this.parseEmptyStatement(node)\n  case types._export:\n  case types._import:\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n      if (!this.inModule)\n        { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n    }\n    return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction()) {\n      if (!declaration) { this.unexpected(); }\n      this.next();\n      return this.parseFunctionStatement(node, true)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression();\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n      { return this.parseLabeledStatement(node, maybeName, expr) }\n    else { return this.parseExpressionStatement(node, expr) }\n  }\n};\n\npp$1.parseBreakContinueStatement = function(node, keyword) {\n  var this$1 = this;\n\n  var isBreak = keyword === \"break\";\n  this.next();\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n  else if (this.type !== types.name) { this.unexpected(); }\n  else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this$1.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n      if (node.label && isBreak) { break }\n    }\n  }\n  if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n};\n\npp$1.parseDebuggerStatement = function(node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\")\n};\n\npp$1.parseDoStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  this.expect(types._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6)\n    { this.eat(types.semi); }\n  else\n    { this.semicolon(); }\n  return this.finishNode(node, \"DoWhileStatement\")\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$1.parseForStatement = function(node) {\n  this.next();\n  var awaitAt = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction)) && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterLexicalScope();\n  this.expect(types.parenL);\n  if (this.type === types.semi) {\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, null)\n  }\n  var isLet = this.isLet();\n  if (this.type === types._var || this.type === types._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1 &&\n        !(kind !== \"var\" && init$1.declarations[0].init)) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      return this.parseForIn(node, init$1)\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init$1)\n  }\n  var refDestructuringErrors = new DestructuringErrors;\n  var init = this.parseExpression(true, refDestructuringErrors);\n  if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    if (this.options.ecmaVersion >= 9) {\n      if (this.type === types._in) {\n        if (awaitAt > -1) { this.unexpected(awaitAt); }\n      } else { node.await = awaitAt > -1; }\n    }\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLVal(init);\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  if (awaitAt > -1) { this.unexpected(awaitAt); }\n  return this.parseFor(node, init)\n};\n\npp$1.parseFunctionStatement = function(node, isAsync) {\n  this.next();\n  return this.parseFunction(node, true, false, isAsync)\n};\n\npp$1.parseIfStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(!this.strict && this.type === types._function);\n  node.alternate = this.eat(types._else) ? this.parseStatement(!this.strict && this.type === types._function) : null;\n  return this.finishNode(node, \"IfStatement\")\n};\n\npp$1.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    { this.raise(this.start, \"'return' outside of function\"); }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n  else { node.argument = this.parseExpression(); this.semicolon(); }\n  return this.finishNode(node, \"ReturnStatement\")\n};\n\npp$1.parseSwitchStatement = function(node) {\n  var this$1 = this;\n\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types.braceL);\n  this.labels.push(switchLabel);\n  this.enterLexicalScope();\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type !== types.braceR;) {\n    if (this$1.type === types._case || this$1.type === types._default) {\n      var isCase = this$1.type === types._case;\n      if (cur) { this$1.finishNode(cur, \"SwitchCase\"); }\n      node.cases.push(cur = this$1.startNode());\n      cur.consequent = [];\n      this$1.next();\n      if (isCase) {\n        cur.test = this$1.parseExpression();\n      } else {\n        if (sawDefault) { this$1.raiseRecoverable(this$1.lastTokStart, \"Multiple default clauses\"); }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this$1.expect(types.colon);\n    } else {\n      if (!cur) { this$1.unexpected(); }\n      cur.consequent.push(this$1.parseStatement(true));\n    }\n  }\n  this.exitLexicalScope();\n  if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\")\n};\n\npp$1.parseThrowStatement = function(node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\")\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty = [];\n\npp$1.parseTryStatement = function(node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types._catch) {\n    var clause = this.startNode();\n    this.next();\n    if (this.eat(types.parenL)) {\n      clause.param = this.parseBindingAtom();\n      this.enterLexicalScope();\n      this.checkLVal(clause.param, \"let\");\n      this.expect(types.parenR);\n    } else {\n      if (this.options.ecmaVersion < 10) { this.unexpected(); }\n      clause.param = null;\n      this.enterLexicalScope();\n    }\n    clause.body = this.parseBlock(false);\n    this.exitLexicalScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer)\n    { this.raise(node.start, \"Missing catch or finally clause\"); }\n  return this.finishNode(node, \"TryStatement\")\n};\n\npp$1.parseVarStatement = function(node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\npp$1.parseWhileStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\")\n};\n\npp$1.parseWithStatement = function(node) {\n  if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(false);\n  return this.finishNode(node, \"WithStatement\")\n};\n\npp$1.parseEmptyStatement = function(node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\")\n};\n\npp$1.parseLabeledStatement = function(node, maybeName, expr) {\n  var this$1 = this;\n\n  for (var i$1 = 0, list = this$1.labels; i$1 < list.length; i$1 += 1)\n    {\n    var label = list[i$1];\n\n    if (label.name === maybeName)\n      { this$1.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  } }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this$1.labels[i];\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this$1.start;\n      label$1.kind = kind;\n    } else { break }\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n  node.body = this.parseStatement(true);\n  if (node.body.type === \"ClassDeclaration\" ||\n      node.body.type === \"VariableDeclaration\" && node.body.kind !== \"var\" ||\n      node.body.type === \"FunctionDeclaration\" && (this.strict || node.body.generator || node.body.async))\n    { this.raiseRecoverable(node.body.start, \"Invalid labeled declaration\"); }\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\")\n};\n\npp$1.parseExpressionStatement = function(node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\")\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$1.parseBlock = function(createNewLexicalScope) {\n  var this$1 = this;\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n\n  var node = this.startNode();\n  node.body = [];\n  this.expect(types.braceL);\n  if (createNewLexicalScope) {\n    this.enterLexicalScope();\n  }\n  while (!this.eat(types.braceR)) {\n    var stmt = this$1.parseStatement(true);\n    node.body.push(stmt);\n  }\n  if (createNewLexicalScope) {\n    this.exitLexicalScope();\n  }\n  return this.finishNode(node, \"BlockStatement\")\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$1.parseFor = function(node, init) {\n  node.init = init;\n  this.expect(types.semi);\n  node.test = this.type === types.semi ? null : this.parseExpression();\n  this.expect(types.semi);\n  node.update = this.type === types.parenR ? null : this.parseExpression();\n  this.expect(types.parenR);\n  this.exitLexicalScope();\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\")\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$1.parseForIn = function(node, init) {\n  var type = this.type === types._in ? \"ForInStatement\" : \"ForOfStatement\";\n  this.next();\n  if (type === \"ForInStatement\") {\n    if (init.type === \"AssignmentPattern\" ||\n      (init.type === \"VariableDeclaration\" && init.declarations[0].init != null &&\n       (this.strict || init.declarations[0].id.type !== \"Identifier\")))\n      { this.raise(init.start, \"Invalid assignment in for-in loop head\"); }\n  }\n  node.left = init;\n  node.right = type === \"ForInStatement\" ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types.parenR);\n  this.exitLexicalScope();\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, type)\n};\n\n// Parse a list of variable declarations.\n\npp$1.parseVar = function(node, isFor, kind) {\n  var this$1 = this;\n\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this$1.startNode();\n    this$1.parseVarId(decl, kind);\n    if (this$1.eat(types.eq)) {\n      decl.init = this$1.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this$1.type === types._in || (this$1.options.ecmaVersion >= 6 && this$1.isContextual(\"of\")))) {\n      this$1.unexpected();\n    } else if (decl.id.type !== \"Identifier\" && !(isFor && (this$1.type === types._in || this$1.isContextual(\"of\")))) {\n      this$1.raise(this$1.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this$1.finishNode(decl, \"VariableDeclarator\"));\n    if (!this$1.eat(types.comma)) { break }\n  }\n  return node\n};\n\npp$1.parseVarId = function(decl, kind) {\n  decl.id = this.parseBindingAtom(kind);\n  this.checkLVal(decl.id, kind, false);\n};\n\n// Parse a function declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseFunction = function(node, isStatement, allowExpressionBody, isAsync) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync)\n    { node.generator = this.eat(types.star); }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  if (isStatement) {\n    node.id = isStatement === \"nullableID\" && this.type !== types.name ? null : this.parseIdent();\n    if (node.id) {\n      this.checkLVal(node.id, this.inModule && !this.inFunction ? \"let\" : \"var\");\n    }\n  }\n\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n  this.inGenerator = node.generator;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  this.enterFunctionScope();\n\n  if (!isStatement)\n    { node.id = this.type === types.name ? this.parseIdent() : null; }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\npp$1.parseFunctionParams = function(node) {\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseClass = function(node, isStatement) {\n  var this$1 = this;\n\n  this.next();\n\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    var member = this$1.parseClassMember(classBody);\n    if (member && member.type === \"MethodDefinition\" && member.kind === \"constructor\") {\n      if (hadConstructor) { this$1.raise(member.start, \"Duplicate constructor in the same class\"); }\n      hadConstructor = true;\n    }\n  }\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\npp$1.parseClassMember = function(classBody) {\n  var this$1 = this;\n\n  if (this.eat(types.semi)) { return null }\n\n  var method = this.startNode();\n  var tryContextual = function (k, noLineBreak) {\n    if ( noLineBreak === void 0 ) noLineBreak = false;\n\n    var start = this$1.start, startLoc = this$1.startLoc;\n    if (!this$1.eatContextual(k)) { return false }\n    if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n    if (method.key) { this$1.unexpected(); }\n    method.computed = false;\n    method.key = this$1.startNodeAt(start, startLoc);\n    method.key.name = k;\n    this$1.finishNode(method.key, \"Identifier\");\n    return false\n  };\n\n  method.kind = \"method\";\n  method.static = tryContextual(\"static\");\n  var isGenerator = this.eat(types.star);\n  var isAsync = false;\n  if (!isGenerator) {\n    if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    } else if (tryContextual(\"get\")) {\n      method.kind = \"get\";\n    } else if (tryContextual(\"set\")) {\n      method.kind = \"set\";\n    }\n  }\n  if (!method.key) { this.parsePropertyName(method); }\n  var key = method.key;\n  if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n      key.type === \"Literal\" && key.value === \"constructor\")) {\n    if (method.kind !== \"method\") { this.raise(key.start, \"Constructor can't have get/set modifier\"); }\n    if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n    if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n    method.kind = \"constructor\";\n  } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n    this.raise(key.start, \"Classes may not have a static property named prototype\");\n  }\n  this.parseClassMethod(classBody, method, isGenerator, isAsync);\n  if (method.kind === \"get\" && method.value.params.length !== 0)\n    { this.raiseRecoverable(method.value.start, \"getter should have no params\"); }\n  if (method.kind === \"set\" && method.value.params.length !== 1)\n    { this.raiseRecoverable(method.value.start, \"setter should have exactly one param\"); }\n  if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n    { this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n  return method\n};\n\npp$1.parseClassMethod = function(classBody, method, isGenerator, isAsync) {\n  method.value = this.parseMethod(isGenerator, isAsync);\n  classBody.body.push(this.finishNode(method, \"MethodDefinition\"));\n};\n\npp$1.parseClassId = function(node, isStatement) {\n  node.id = this.type === types.name ? this.parseIdent() : isStatement === true ? this.unexpected() : null;\n};\n\npp$1.parseClassSuper = function(node) {\n  node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n};\n\n// Parses module export declaration.\n\npp$1.parseExport = function(node, exports) {\n  var this$1 = this;\n\n  this.next();\n  // export * from '...'\n  if (this.eat(types.star)) {\n    this.expectContextual(\"from\");\n    if (this.type !== types.string) { this.unexpected(); }\n    node.source = this.parseExprAtom();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(types._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    var isAsync;\n    if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      node.declaration = this.parseFunction(fNode, \"nullableID\", false, isAsync);\n    } else if (this.type === types._class) {\n      var cNode = this.startNode();\n      node.declaration = this.parseClass(cNode, \"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(true);\n    if (node.declaration.type === \"VariableDeclaration\")\n      { this.checkVariableExport(exports, node.declaration.declarations); }\n    else\n      { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n    node.specifiers = [];\n    node.source = null;\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      if (this.type !== types.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n    } else {\n      // check for keywords used as local names\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        var spec = list[i];\n\n        this$1.checkUnreserved(spec.local);\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\npp$1.checkExport = function(exports, name, pos) {\n  if (!exports) { return }\n  if (has(exports, name))\n    { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n  exports[name] = true;\n};\n\npp$1.checkPatternExport = function(exports, pat) {\n  var this$1 = this;\n\n  var type = pat.type;\n  if (type === \"Identifier\")\n    { this.checkExport(exports, pat.name, pat.start); }\n  else if (type === \"ObjectPattern\")\n    { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n      {\n        var prop = list[i];\n\n        this$1.checkPatternExport(exports, prop);\n      } }\n  else if (type === \"ArrayPattern\")\n    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n        if (elt) { this$1.checkPatternExport(exports, elt); }\n    } }\n  else if (type === \"Property\")\n    { this.checkPatternExport(exports, pat.value); }\n  else if (type === \"AssignmentPattern\")\n    { this.checkPatternExport(exports, pat.left); }\n  else if (type === \"RestElement\")\n    { this.checkPatternExport(exports, pat.argument); }\n  else if (type === \"ParenthesizedExpression\")\n    { this.checkPatternExport(exports, pat.expression); }\n};\n\npp$1.checkVariableExport = function(exports, decls) {\n  var this$1 = this;\n\n  if (!exports) { return }\n  for (var i = 0, list = decls; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    this$1.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$1.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n};\n\n// Parses a comma-separated list of module exports.\n\npp$1.parseExportSpecifiers = function(exports) {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node = this$1.startNode();\n    node.local = this$1.parseIdent(true);\n    node.exported = this$1.eatContextual(\"as\") ? this$1.parseIdent(true) : node.local;\n    this$1.checkExport(exports, node.exported.name, node.exported.start);\n    nodes.push(this$1.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes\n};\n\n// Parses import declaration.\n\npp$1.parseImport = function(node) {\n  this.next();\n  // import '...'\n  if (this.type === types.string) {\n    node.specifiers = empty;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\n// Parses a comma-separated list of module imports.\n\npp$1.parseImportSpecifiers = function() {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  if (this.type === types.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLVal(node.local, \"let\");\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(types.comma)) { return nodes }\n  }\n  if (this.type === types.star) {\n    var node$1 = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node$1.local = this.parseIdent();\n    this.checkLVal(node$1.local, \"let\");\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n    return nodes\n  }\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node$2 = this$1.startNode();\n    node$2.imported = this$1.parseIdent(true);\n    if (this$1.eatContextual(\"as\")) {\n      node$2.local = this$1.parseIdent();\n    } else {\n      this$1.checkUnreserved(node$2.imported);\n      node$2.local = node$2.imported;\n    }\n    this$1.checkLVal(node$2.local, \"let\");\n    nodes.push(this$1.finishNode(node$2, \"ImportSpecifier\"));\n  }\n  return nodes\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$1.adaptDirectivePrologue = function(statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$1.isDirectiveCandidate = function(statement) {\n  return (\n    statement.type === \"ExpressionStatement\" &&\n    statement.expression.type === \"Literal\" &&\n    typeof statement.expression.value === \"string\" &&\n    // Reject parenthesized strings.\n    (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n  )\n};\n\nvar pp$2 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {\n  var this$1 = this;\n\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        { this.raise(node.start, \"Can not use 'await' as identifier inside an async function\"); }\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n    case \"RestElement\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this$1.toAssignable(prop, isBinding);\n        // Early error:\n        //   AssignmentRestProperty[Yield, Await] :\n        //     `...` DestructuringAssignmentTarget[Yield, Await]\n        //\n        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n        if (\n          prop.type === \"RestElement\" &&\n          (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n        ) {\n          this$1.raise(prop.argument.start, \"Unexpected token\");\n        }\n      }\n      break\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n      this.toAssignable(node.value, isBinding);\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      this.toAssignableList(node.elements, isBinding);\n      break\n\n    case \"SpreadElement\":\n      node.type = \"RestElement\";\n      this.toAssignable(node.argument, isBinding);\n      if (node.argument.type === \"AssignmentPattern\")\n        { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n      node.type = \"AssignmentPattern\";\n      delete node.operator;\n      this.toAssignable(node.left, isBinding);\n      // falls through to AssignmentPattern\n\n    case \"AssignmentPattern\":\n      break\n\n    case \"ParenthesizedExpression\":\n      this.toAssignable(node.expression, isBinding);\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) { break }\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\");\n    }\n  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n  return node\n};\n\n// Convert list of expression atoms to binding list.\n\npp$2.toAssignableList = function(exprList, isBinding) {\n  var this$1 = this;\n\n  var end = exprList.length;\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) { this$1.toAssignable(elt, isBinding); }\n  }\n  if (end) {\n    var last = exprList[end - 1];\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      { this.unexpected(last.argument.start); }\n  }\n  return exprList\n};\n\n// Parses spread element.\n\npp$2.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\")\n};\n\npp$2.parseRestBinding = function() {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types.name)\n    { this.unexpected(); }\n\n  node.argument = this.parseBindingAtom();\n\n  return this.finishNode(node, \"RestElement\")\n};\n\n// Parses lvalue (assignable) atom.\n\npp$2.parseBindingAtom = function() {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n    case types.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\")\n\n    case types.braceL:\n      return this.parseObj(true)\n    }\n  }\n  return this.parseIdent()\n};\n\npp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (first) { first = false; }\n    else { this$1.expect(types.comma); }\n    if (allowEmpty && this$1.type === types.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this$1.afterTrailingComma(close)) {\n      break\n    } else if (this$1.type === types.ellipsis) {\n      var rest = this$1.parseRestBinding();\n      this$1.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n      this$1.expect(close);\n      break\n    } else {\n      var elem = this$1.parseMaybeDefault(this$1.start, this$1.startLoc);\n      this$1.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n  return elts\n};\n\npp$2.parseBindingListItem = function(param) {\n  return param\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\")\n};\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n// bindingType can be either:\n// 'var' indicating that the lval creates a 'var' binding\n// 'let' indicating that the lval creates a lexical ('let' or 'const') binding\n// 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references\n\npp$2.checkLVal = function(expr, bindingType, checkClashes) {\n  var this$1 = this;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n    if (checkClashes) {\n      if (has(checkClashes, expr.name))\n        { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n      checkClashes[expr.name] = true;\n    }\n    if (bindingType && bindingType !== \"none\") {\n      if (\n        bindingType === \"var\" && !this.canDeclareVarName(expr.name) ||\n        bindingType !== \"var\" && !this.canDeclareLexicalName(expr.name)\n      ) {\n        this.raiseRecoverable(expr.start, (\"Identifier '\" + (expr.name) + \"' has already been declared\"));\n      }\n      if (bindingType === \"var\") {\n        this.declareVarName(expr.name);\n      } else {\n        this.declareLexicalName(expr.name);\n      }\n    }\n    break\n\n  case \"MemberExpression\":\n    if (bindingType) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n    break\n\n  case \"ObjectPattern\":\n    for (var i = 0, list = expr.properties; i < list.length; i += 1)\n      {\n    var prop = list[i];\n\n    this$1.checkLVal(prop, bindingType, checkClashes);\n  }\n    break\n\n  case \"Property\":\n    // AssignmentProperty has type === \"Property\"\n    this.checkLVal(expr.value, bindingType, checkClashes);\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n      var elem = list$1[i$1];\n\n    if (elem) { this$1.checkLVal(elem, bindingType, checkClashes); }\n    }\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLVal(expr.left, bindingType, checkClashes);\n    break\n\n  case \"RestElement\":\n    this.checkLVal(expr.argument, bindingType, checkClashes);\n    break\n\n  case \"ParenthesizedExpression\":\n    this.checkLVal(expr.expression, bindingType, checkClashes);\n    break\n\n  default:\n    this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nvar pp$3 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n    { return }\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    { return }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) {\n        if (refDestructuringErrors && refDestructuringErrors.doubleProto < 0) { refDestructuringErrors.doubleProto = key.start; }\n        // Backwards-compat kludge. Can be removed in version 6.0\n        else { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n      }\n      propHash.proto = true;\n    }\n    return\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition)\n      { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$3.parseExpression = function(noIn, refDestructuringErrors) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n  if (this.type === types.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types.comma)) { node.expressions.push(this$1.parseMaybeAssign(noIn, refDestructuringErrors)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n  if (this.inGenerator && this.isContextual(\"yield\")) { return this.parseYield() }\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors;\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start, startLoc = this.startLoc;\n  if (this.type === types.parenL || this.type === types.name)\n    { this.potentialArrowAt = this.start; }\n  var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n    if (!ownDestructuringErrors) { DestructuringErrors.call(refDestructuringErrors); }\n    refDestructuringErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n    this.checkLVal(left);\n    this.next();\n    node.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n  }\n  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n  return left\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprOps(noIn, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  if (this.eat(types.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types.colon);\n    node.alternate = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\n// Start the precedence parser.\n\npp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.type.binop;\n  if (prec != null && (!noIn || this.type !== types._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n      var op = this.value;\n      this.next();\n      var startPos = this.start, startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n    }\n  }\n  return left\n};\n\npp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, expr;\n  if (this.isContextual(\"await\") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n    expr = this.parseAwait();\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === types.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) { this.checkLVal(node.argument); }\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n    else { sawUnary = true; }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.operator = this$1.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this$1.checkLVal(expr);\n      this$1.next();\n      expr = this$1.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!sawUnary && this.eat(types.starstar))\n    { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n  else\n    { return expr }\n};\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$3.parseExprSubscripts = function(refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors);\n  var skipArrowSubscripts = expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\";\n  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) { return expr }\n  var result = this.parseSubscripts(expr, startPos, startLoc);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n  }\n  return result\n};\n\npp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n  var this$1 = this;\n\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === \"async\";\n  for (var computed = (void 0);;) {\n    if ((computed = this$1.eat(types.bracketL)) || this$1.eat(types.dot)) {\n      var node = this$1.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this$1.parseExpression() : this$1.parseIdent(true);\n      node.computed = !!computed;\n      if (computed) { this$1.expect(types.bracketR); }\n      base = this$1.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this$1.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this$1.yieldPos, oldAwaitPos = this$1.awaitPos;\n      this$1.yieldPos = 0;\n      this$1.awaitPos = 0;\n      var exprList = this$1.parseExprList(types.parenR, this$1.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !this$1.canInsertSemicolon() && this$1.eat(types.arrow)) {\n        this$1.checkPatternErrors(refDestructuringErrors, false);\n        this$1.checkYieldAwaitInDefaultParams();\n        this$1.yieldPos = oldYieldPos;\n        this$1.awaitPos = oldAwaitPos;\n        return this$1.parseArrowExpression(this$1.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this$1.checkExpressionErrors(refDestructuringErrors, true);\n      this$1.yieldPos = oldYieldPos || this$1.yieldPos;\n      this$1.awaitPos = oldAwaitPos || this$1.awaitPos;\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      base = this$1.finishNode(node$1, \"CallExpression\");\n    } else if (this$1.type === types.backQuote) {\n      var node$2 = this$1.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this$1.parseTemplate({isTagged: true});\n      base = this$1.finishNode(node$2, \"TaggedTemplateExpression\");\n    } else {\n      return base\n    }\n  }\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$3.parseExprAtom = function(refDestructuringErrors) {\n  var node, canBeArrow = this.potentialArrowAt === this.start;\n  switch (this.type) {\n  case types._super:\n    if (!this.inFunction)\n      { this.raise(this.start, \"'super' outside of function or class\"); }\n    node = this.startNode();\n    this.next();\n    // The `super` keyword can appear at below:\n    // SuperProperty:\n    //     super [ Expression ]\n    //     super . IdentifierName\n    // SuperCall:\n    //     super Arguments\n    if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n      { this.unexpected(); }\n    return this.finishNode(node, \"Super\")\n\n  case types._this:\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"ThisExpression\")\n\n  case types.name:\n    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n    var id = this.parseIdent(this.type !== types.name);\n    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n      { return this.parseFunction(this.startNodeAt(startPos, startLoc), false, false, true) }\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(types.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n        id = this.parseIdent();\n        if (this.canInsertSemicolon() || !this.eat(types.arrow))\n          { this.unexpected(); }\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n      }\n    }\n    return id\n\n  case types.regexp:\n    var value = this.value;\n    node = this.parseLiteral(value.value);\n    node.regex = {pattern: value.pattern, flags: value.flags};\n    return node\n\n  case types.num: case types.string:\n    return this.parseLiteral(this.value)\n\n  case types._null: case types._true: case types._false:\n    node = this.startNode();\n    node.value = this.type === types._null ? null : this.type === types._true;\n    node.raw = this.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case types.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        { refDestructuringErrors.parenthesizedAssign = start; }\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        { refDestructuringErrors.parenthesizedBind = start; }\n    }\n    return expr\n\n  case types.bracketL:\n    node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case types.braceL:\n    return this.parseObj(false, refDestructuringErrors)\n\n  case types._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, false)\n\n  case types._class:\n    return this.parseClass(this.startNode(), false)\n\n  case types._new:\n    return this.parseNew()\n\n  case types.backQuote:\n    return this.parseTemplate()\n\n  default:\n    this.unexpected();\n  }\n};\n\npp$3.parseLiteral = function(value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  this.next();\n  return this.finishNode(node, \"Literal\")\n};\n\npp$3.parseParenExpression = function() {\n  this.expect(types.parenL);\n  var val = this.parseExpression();\n  this.expect(types.parenR);\n  return val\n};\n\npp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc;\n    var exprList = [], first = true, lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    while (this.type !== types.parenR) {\n      first ? first = false : this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(types.parenR, true)) {\n        lastIsComma = true;\n        break\n      } else if (this$1.type === types.ellipsis) {\n        spreadStart = this$1.start;\n        exprList.push(this$1.parseParenItem(this$1.parseRestBinding()));\n        if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n        break\n      } else {\n        exprList.push(this$1.parseMaybeAssign(false, refDestructuringErrors, this$1.parseParenItem));\n      }\n    }\n    var innerEndPos = this.start, innerEndLoc = this.startLoc;\n    this.expect(types.parenR);\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList)\n    }\n\n    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n    if (spreadStart) { this.unexpected(spreadStart); }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n};\n\npp$3.parseParenItem = function(item) {\n  return item\n};\n\npp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty$1 = [];\n\npp$3.parseNew = function() {\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n    node.meta = meta;\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\" || containsEsc)\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\"); }\n    if (!this.inFunction)\n      { this.raiseRecoverable(node.start, \"new.target can only be used in functions\"); }\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n  else { node.arguments = empty$1; }\n  return this.finishNode(node, \"NewExpression\")\n};\n\n// Parse template expression.\n\npp$3.parseTemplateElement = function(ref) {\n  var isTagged = ref.isTagged;\n\n  var elem = this.startNode();\n  if (this.type === types.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\npp$3.parseTemplate = function(ref) {\n  var this$1 = this;\n  if ( ref === void 0 ) ref = {};\n  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({isTagged: isTagged});\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    if (this$1.type === types.eof) { this$1.raise(this$1.pos, \"Unterminated template literal\"); }\n    this$1.expect(types.dollarBraceL);\n    node.expressions.push(this$1.parseExpression());\n    this$1.expect(types.braceR);\n    node.quasis.push(curElt = this$1.parseTemplateElement({isTagged: isTagged}));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\npp$3.isAsyncProp = function(prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n    (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&\n    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\n// Parse an object literal or binding pattern.\n\npp$3.parseObj = function(isPattern, refDestructuringErrors) {\n  var this$1 = this;\n\n  var node = this.startNode(), first = true, propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var prop = this$1.parseProperty(isPattern, refDestructuringErrors);\n    if (!isPattern) { this$1.checkPropClash(prop, propHash, refDestructuringErrors); }\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n};\n\npp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n  if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n      if (this.type === types.comma) {\n        this.raise(this.start, \"Comma is not permitted after the rest element\");\n      }\n      return this.finishNode(prop, \"RestElement\")\n    }\n    // To disallow parenthesized identifier via `this.toAssignable()`.\n    if (this.type === types.parenL && refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0) {\n        refDestructuringErrors.parenthesizedAssign = this.start;\n      }\n      if (refDestructuringErrors.parenthesizedBind < 0) {\n        refDestructuringErrors.parenthesizedBind = this.start;\n      }\n    }\n    // Parse argument.\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    // To disallow trailing comma via `this.toAssignable()`.\n    if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    }\n    // Finish\n    return this.finishNode(prop, \"SpreadElement\")\n  }\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern)\n      { isGenerator = this.eat(types.star); }\n  }\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    this.parsePropertyName(prop, refDestructuringErrors);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, \"Property\")\n};\n\npp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types.colon)\n    { this.unexpected(); }\n\n  if (this.eat(types.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n    if (isPattern) { this.unexpected(); }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern && !containsEsc &&\n             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type !== types.comma && this.type !== types.braceR)) {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    this.checkUnreserved(prop.key);\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else if (this.type === types.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        { refDestructuringErrors.shorthandAssign = this.start; }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else {\n      prop.value = prop.key;\n    }\n    prop.shorthand = true;\n  } else { this.unexpected(); }\n};\n\npp$3.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types.bracketR);\n      return prop.key\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(true)\n};\n\n// Initialize empty function node.\n\npp$3.initFunction = function(node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = false;\n    node.expression = false;\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = false; }\n};\n\n// Parse object or class method.\n\npp$3.parseMethod = function(isGenerator, isAsync) {\n  var node = this.startNode(), oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.inGenerator = node.generator;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  this.enterFunctionScope();\n\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\n// Parse arrow function expression with given parameters.\n\npp$3.parseArrowExpression = function(node, params, isAsync) {\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n\n  this.enterFunctionScope();\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.inGenerator = false;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\n// Parse function body and check parameters.\n\npp$3.parseFunctionBody = function(node, isArrowFunction) {\n  var isExpression = isArrowFunction && this.type !== types.braceL;\n  var oldStrict = this.strict, useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign();\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) { this.strict = true; }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && this.isSimpleParamList(node.params));\n    node.body = this.parseBlock(false);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitFunctionScope();\n\n  if (this.strict && node.id) {\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    this.checkLVal(node.id, \"none\");\n  }\n  this.strict = oldStrict;\n};\n\npp$3.isSimpleParamList = function(params) {\n  for (var i = 0, list = params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") { return false\n  } }\n  return true\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$3.checkParams = function(node, allowDuplicates) {\n  var this$1 = this;\n\n  var nameHash = {};\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    this$1.checkLVal(param, \"var\", allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(close)) { break }\n    } else { first = false; }\n\n    var elt = (void 0);\n    if (allowEmpty && this$1.type === types.comma)\n      { elt = null; }\n    else if (this$1.type === types.ellipsis) {\n      elt = this$1.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this$1.type === types.comma && refDestructuringErrors.trailingComma < 0)\n        { refDestructuringErrors.trailingComma = this$1.start; }\n    } else {\n      elt = this$1.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts\n};\n\npp$3.checkUnreserved = function(ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\")\n    { this.raiseRecoverable(start, \"Can not use 'yield' as identifier inside a generator\"); }\n  if (this.inAsync && name === \"await\")\n    { this.raiseRecoverable(start, \"Can not use 'await' as identifier inside an async function\"); }\n  if (this.isKeyword(name))\n    { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n  if (this.options.ecmaVersion < 6 &&\n    this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name)) {\n    if (!this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Can not use keyword 'await' outside an async function\"); }\n    this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n  }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$3.parseIdent = function(liberal, isBinding) {\n  var node = this.startNode();\n  if (liberal && this.options.allowReserved === \"never\") { liberal = false; }\n  if (this.type === types.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") &&\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) { this.checkUnreserved(node); }\n  return node\n};\n\n// Parses yield expression inside generator.\n\npp$3.parseYield = function() {\n  if (!this.yieldPos) { this.yieldPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types.star);\n    node.argument = this.parseMaybeAssign();\n  }\n  return this.finishNode(node, \"YieldExpression\")\n};\n\npp$3.parseAwait = function() {\n  if (!this.awaitPos) { this.awaitPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true);\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n  throw err\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n};\n\nvar pp$5 = Parser.prototype;\n\n// Object.assign polyfill\nvar assign = Object.assign || function(target) {\n  var sources = [], len = arguments.length - 1;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n  for (var i = 0, list = sources; i < list.length; i += 1) {\n    var source = list[i];\n\n    for (var key in source) {\n      if (has(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$5.enterFunctionScope = function() {\n  // var: a hash of var-declared names in the current lexical scope\n  // lexical: a hash of lexically-declared names in the current lexical scope\n  // childVar: a hash of var-declared names in all child lexical scopes of the current lexical scope (within the current function scope)\n  // parentLexical: a hash of lexically-declared names in all parent lexical scopes of the current lexical scope (within the current function scope)\n  this.scopeStack.push({var: {}, lexical: {}, childVar: {}, parentLexical: {}});\n};\n\npp$5.exitFunctionScope = function() {\n  this.scopeStack.pop();\n};\n\npp$5.enterLexicalScope = function() {\n  var parentScope = this.scopeStack[this.scopeStack.length - 1];\n  var childScope = {var: {}, lexical: {}, childVar: {}, parentLexical: {}};\n\n  this.scopeStack.push(childScope);\n  assign(childScope.parentLexical, parentScope.lexical, parentScope.parentLexical);\n};\n\npp$5.exitLexicalScope = function() {\n  var childScope = this.scopeStack.pop();\n  var parentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  assign(parentScope.childVar, childScope.var, childScope.childVar);\n};\n\n/**\n * A name can be declared with `var` if there are no variables with the same name declared with `let`/`const`\n * in the current lexical scope or any of the parent lexical scopes in this function.\n */\npp$5.canDeclareVarName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  return !has(currentScope.lexical, name) && !has(currentScope.parentLexical, name)\n};\n\n/**\n * A name can be declared with `let`/`const` if there are no variables with the same name declared with `let`/`const`\n * in the current scope, and there are no variables with the same name declared with `var` in the current scope or in\n * any child lexical scopes in this function.\n */\npp$5.canDeclareLexicalName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  return !has(currentScope.lexical, name) && !has(currentScope.var, name) && !has(currentScope.childVar, name)\n};\n\npp$5.declareVarName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].var[name] = true;\n};\n\npp$5.declareLexicalName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].lexical[name] = true;\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations)\n    { this.loc = new SourceLocation(parser, loc); }\n  if (parser.options.directSourceFile)\n    { this.sourceFile = parser.options.directSourceFile; }\n  if (parser.options.ranges)\n    { this.range = [pos, 0]; }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$6 = Parser.prototype;\n\npp$6.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n};\n\npp$6.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations)\n    { node.loc.end = loc; }\n  if (this.options.ranges)\n    { node.range[1] = pos; }\n  return node\n}\n\npp$6.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n};\n\n// Finish node at given position\n\npp$6.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types$1 = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\n\nvar pp$7 = Parser.prototype;\n\npp$7.initialContext = function() {\n  return [types$1.b_stat]\n};\n\npp$7.braceIsBlock = function(prevType) {\n  var parent = this.curContext();\n  if (parent === types$1.f_expr || parent === types$1.f_stat)\n    { return true }\n  if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n    { return !parent.isExpr }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types._return || prevType === types.name && this.exprAllowed)\n    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n  if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)\n    { return true }\n  if (prevType === types.braceL)\n    { return parent === types$1.b_stat }\n  if (prevType === types._var || prevType === types.name)\n    { return false }\n  return !this.exprAllowed\n};\n\npp$7.inGeneratorContext = function() {\n  var this$1 = this;\n\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this$1.context[i];\n    if (context.token === \"function\")\n      { return context.generator }\n  }\n  return false\n};\n\npp$7.updateContext = function(prevType) {\n  var update, type = this.type;\n  if (type.keyword && prevType === types.dot)\n    { this.exprAllowed = false; }\n  else if (update = type.updateContext)\n    { update.call(this, prevType); }\n  else\n    { this.exprAllowed = type.beforeExpr; }\n};\n\n// Token-specific context update code\n\ntypes.parenR.updateContext = types.braceR.updateContext = function() {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return\n  }\n  var out = this.context.pop();\n  if (out === types$1.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function() {\n  this.context.push(types$1.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntypes._function.updateContext = types._class.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n      !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n    { this.context.push(types$1.f_expr); }\n  else\n    { this.context.push(types$1.f_stat); }\n  this.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function() {\n  if (this.curContext() === types$1.q_tmpl)\n    { this.context.pop(); }\n  else\n    { this.context.push(types$1.q_tmpl); }\n  this.exprAllowed = false;\n};\n\ntypes.star.updateContext = function(prevType) {\n  if (prevType === types._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types$1.f_expr)\n      { this.context[index] = types$1.f_expr_gen; }\n    else\n      { this.context[index] = types$1.f_gen; }\n  }\n  this.exprAllowed = true;\n};\n\ntypes.name.updateContext = function(prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n    if (this.value === \"of\" && !this.exprAllowed ||\n        this.value === \"yield\" && this.inGeneratorContext())\n      { allowed = true; }\n  }\n  this.exprAllowed = allowed;\n};\n\nvar data = {\n  \"$LONE\": [\n    \"ASCII\",\n    \"ASCII_Hex_Digit\",\n    \"AHex\",\n    \"Alphabetic\",\n    \"Alpha\",\n    \"Any\",\n    \"Assigned\",\n    \"Bidi_Control\",\n    \"Bidi_C\",\n    \"Bidi_Mirrored\",\n    \"Bidi_M\",\n    \"Case_Ignorable\",\n    \"CI\",\n    \"Cased\",\n    \"Changes_When_Casefolded\",\n    \"CWCF\",\n    \"Changes_When_Casemapped\",\n    \"CWCM\",\n    \"Changes_When_Lowercased\",\n    \"CWL\",\n    \"Changes_When_NFKC_Casefolded\",\n    \"CWKCF\",\n    \"Changes_When_Titlecased\",\n    \"CWT\",\n    \"Changes_When_Uppercased\",\n    \"CWU\",\n    \"Dash\",\n    \"Default_Ignorable_Code_Point\",\n    \"DI\",\n    \"Deprecated\",\n    \"Dep\",\n    \"Diacritic\",\n    \"Dia\",\n    \"Emoji\",\n    \"Emoji_Component\",\n    \"Emoji_Modifier\",\n    \"Emoji_Modifier_Base\",\n    \"Emoji_Presentation\",\n    \"Extender\",\n    \"Ext\",\n    \"Grapheme_Base\",\n    \"Gr_Base\",\n    \"Grapheme_Extend\",\n    \"Gr_Ext\",\n    \"Hex_Digit\",\n    \"Hex\",\n    \"IDS_Binary_Operator\",\n    \"IDSB\",\n    \"IDS_Trinary_Operator\",\n    \"IDST\",\n    \"ID_Continue\",\n    \"IDC\",\n    \"ID_Start\",\n    \"IDS\",\n    \"Ideographic\",\n    \"Ideo\",\n    \"Join_Control\",\n    \"Join_C\",\n    \"Logical_Order_Exception\",\n    \"LOE\",\n    \"Lowercase\",\n    \"Lower\",\n    \"Math\",\n    \"Noncharacter_Code_Point\",\n    \"NChar\",\n    \"Pattern_Syntax\",\n    \"Pat_Syn\",\n    \"Pattern_White_Space\",\n    \"Pat_WS\",\n    \"Quotation_Mark\",\n    \"QMark\",\n    \"Radical\",\n    \"Regional_Indicator\",\n    \"RI\",\n    \"Sentence_Terminal\",\n    \"STerm\",\n    \"Soft_Dotted\",\n    \"SD\",\n    \"Terminal_Punctuation\",\n    \"Term\",\n    \"Unified_Ideograph\",\n    \"UIdeo\",\n    \"Uppercase\",\n    \"Upper\",\n    \"Variation_Selector\",\n    \"VS\",\n    \"White_Space\",\n    \"space\",\n    \"XID_Continue\",\n    \"XIDC\",\n    \"XID_Start\",\n    \"XIDS\"\n  ],\n  \"General_Category\": [\n    \"Cased_Letter\",\n    \"LC\",\n    \"Close_Punctuation\",\n    \"Pe\",\n    \"Connector_Punctuation\",\n    \"Pc\",\n    \"Control\",\n    \"Cc\",\n    \"cntrl\",\n    \"Currency_Symbol\",\n    \"Sc\",\n    \"Dash_Punctuation\",\n    \"Pd\",\n    \"Decimal_Number\",\n    \"Nd\",\n    \"digit\",\n    \"Enclosing_Mark\",\n    \"Me\",\n    \"Final_Punctuation\",\n    \"Pf\",\n    \"Format\",\n    \"Cf\",\n    \"Initial_Punctuation\",\n    \"Pi\",\n    \"Letter\",\n    \"L\",\n    \"Letter_Number\",\n    \"Nl\",\n    \"Line_Separator\",\n    \"Zl\",\n    \"Lowercase_Letter\",\n    \"Ll\",\n    \"Mark\",\n    \"M\",\n    \"Combining_Mark\",\n    \"Math_Symbol\",\n    \"Sm\",\n    \"Modifier_Letter\",\n    \"Lm\",\n    \"Modifier_Symbol\",\n    \"Sk\",\n    \"Nonspacing_Mark\",\n    \"Mn\",\n    \"Number\",\n    \"N\",\n    \"Open_Punctuation\",\n    \"Ps\",\n    \"Other\",\n    \"C\",\n    \"Other_Letter\",\n    \"Lo\",\n    \"Other_Number\",\n    \"No\",\n    \"Other_Punctuation\",\n    \"Po\",\n    \"Other_Symbol\",\n    \"So\",\n    \"Paragraph_Separator\",\n    \"Zp\",\n    \"Private_Use\",\n    \"Co\",\n    \"Punctuation\",\n    \"P\",\n    \"punct\",\n    \"Separator\",\n    \"Z\",\n    \"Space_Separator\",\n    \"Zs\",\n    \"Spacing_Mark\",\n    \"Mc\",\n    \"Surrogate\",\n    \"Cs\",\n    \"Symbol\",\n    \"S\",\n    \"Titlecase_Letter\",\n    \"Lt\",\n    \"Unassigned\",\n    \"Cn\",\n    \"Uppercase_Letter\",\n    \"Lu\"\n  ],\n  \"Script\": [\n    \"Adlam\",\n    \"Adlm\",\n    \"Ahom\",\n    \"Anatolian_Hieroglyphs\",\n    \"Hluw\",\n    \"Arabic\",\n    \"Arab\",\n    \"Armenian\",\n    \"Armn\",\n    \"Avestan\",\n    \"Avst\",\n    \"Balinese\",\n    \"Bali\",\n    \"Bamum\",\n    \"Bamu\",\n    \"Bassa_Vah\",\n    \"Bass\",\n    \"Batak\",\n    \"Batk\",\n    \"Bengali\",\n    \"Beng\",\n    \"Bhaiksuki\",\n    \"Bhks\",\n    \"Bopomofo\",\n    \"Bopo\",\n    \"Brahmi\",\n    \"Brah\",\n    \"Braille\",\n    \"Brai\",\n    \"Buginese\",\n    \"Bugi\",\n    \"Buhid\",\n    \"Buhd\",\n    \"Canadian_Aboriginal\",\n    \"Cans\",\n    \"Carian\",\n    \"Cari\",\n    \"Caucasian_Albanian\",\n    \"Aghb\",\n    \"Chakma\",\n    \"Cakm\",\n    \"Cham\",\n    \"Cherokee\",\n    \"Cher\",\n    \"Common\",\n    \"Zyyy\",\n    \"Coptic\",\n    \"Copt\",\n    \"Qaac\",\n    \"Cuneiform\",\n    \"Xsux\",\n    \"Cypriot\",\n    \"Cprt\",\n    \"Cyrillic\",\n    \"Cyrl\",\n    \"Deseret\",\n    \"Dsrt\",\n    \"Devanagari\",\n    \"Deva\",\n    \"Duployan\",\n    \"Dupl\",\n    \"Egyptian_Hieroglyphs\",\n    \"Egyp\",\n    \"Elbasan\",\n    \"Elba\",\n    \"Ethiopic\",\n    \"Ethi\",\n    \"Georgian\",\n    \"Geor\",\n    \"Glagolitic\",\n    \"Glag\",\n    \"Gothic\",\n    \"Goth\",\n    \"Grantha\",\n    \"Gran\",\n    \"Greek\",\n    \"Grek\",\n    \"Gujarati\",\n    \"Gujr\",\n    \"Gurmukhi\",\n    \"Guru\",\n    \"Han\",\n    \"Hani\",\n    \"Hangul\",\n    \"Hang\",\n    \"Hanunoo\",\n    \"Hano\",\n    \"Hatran\",\n    \"Hatr\",\n    \"Hebrew\",\n    \"Hebr\",\n    \"Hiragana\",\n    \"Hira\",\n    \"Imperial_Aramaic\",\n    \"Armi\",\n    \"Inherited\",\n    \"Zinh\",\n    \"Qaai\",\n    \"Inscriptional_Pahlavi\",\n    \"Phli\",\n    \"Inscriptional_Parthian\",\n    \"Prti\",\n    \"Javanese\",\n    \"Java\",\n    \"Kaithi\",\n    \"Kthi\",\n    \"Kannada\",\n    \"Knda\",\n    \"Katakana\",\n    \"Kana\",\n    \"Kayah_Li\",\n    \"Kali\",\n    \"Kharoshthi\",\n    \"Khar\",\n    \"Khmer\",\n    \"Khmr\",\n    \"Khojki\",\n    \"Khoj\",\n    \"Khudawadi\",\n    \"Sind\",\n    \"Lao\",\n    \"Laoo\",\n    \"Latin\",\n    \"Latn\",\n    \"Lepcha\",\n    \"Lepc\",\n    \"Limbu\",\n    \"Limb\",\n    \"Linear_A\",\n    \"Lina\",\n    \"Linear_B\",\n    \"Linb\",\n    \"Lisu\",\n    \"Lycian\",\n    \"Lyci\",\n    \"Lydian\",\n    \"Lydi\",\n    \"Mahajani\",\n    \"Mahj\",\n    \"Malayalam\",\n    \"Mlym\",\n    \"Mandaic\",\n    \"Mand\",\n    \"Manichaean\",\n    \"Mani\",\n    \"Marchen\",\n    \"Marc\",\n    \"Masaram_Gondi\",\n    \"Gonm\",\n    \"Meetei_Mayek\",\n    \"Mtei\",\n    \"Mende_Kikakui\",\n    \"Mend\",\n    \"Meroitic_Cursive\",\n    \"Merc\",\n    \"Meroitic_Hieroglyphs\",\n    \"Mero\",\n    \"Miao\",\n    \"Plrd\",\n    \"Modi\",\n    \"Mongolian\",\n    \"Mong\",\n    \"Mro\",\n    \"Mroo\",\n    \"Multani\",\n    \"Mult\",\n    \"Myanmar\",\n    \"Mymr\",\n    \"Nabataean\",\n    \"Nbat\",\n    \"New_Tai_Lue\",\n    \"Talu\",\n    \"Newa\",\n    \"Nko\",\n    \"Nkoo\",\n    \"Nushu\",\n    \"Nshu\",\n    \"Ogham\",\n    \"Ogam\",\n    \"Ol_Chiki\",\n    \"Olck\",\n    \"Old_Hungarian\",\n    \"Hung\",\n    \"Old_Italic\",\n    \"Ital\",\n    \"Old_North_Arabian\",\n    \"Narb\",\n    \"Old_Permic\",\n    \"Perm\",\n    \"Old_Persian\",\n    \"Xpeo\",\n    \"Old_South_Arabian\",\n    \"Sarb\",\n    \"Old_Turkic\",\n    \"Orkh\",\n    \"Oriya\",\n    \"Orya\",\n    \"Osage\",\n    \"Osge\",\n    \"Osmanya\",\n    \"Osma\",\n    \"Pahawh_Hmong\",\n    \"Hmng\",\n    \"Palmyrene\",\n    \"Palm\",\n    \"Pau_Cin_Hau\",\n    \"Pauc\",\n    \"Phags_Pa\",\n    \"Phag\",\n    \"Phoenician\",\n    \"Phnx\",\n    \"Psalter_Pahlavi\",\n    \"Phlp\",\n    \"Rejang\",\n    \"Rjng\",\n    \"Runic\",\n    \"Runr\",\n    \"Samaritan\",\n    \"Samr\",\n    \"Saurashtra\",\n    \"Saur\",\n    \"Sharada\",\n    \"Shrd\",\n    \"Shavian\",\n    \"Shaw\",\n    \"Siddham\",\n    \"Sidd\",\n    \"SignWriting\",\n    \"Sgnw\",\n    \"Sinhala\",\n    \"Sinh\",\n    \"Sora_Sompeng\",\n    \"Sora\",\n    \"Soyombo\",\n    \"Soyo\",\n    \"Sundanese\",\n    \"Sund\",\n    \"Syloti_Nagri\",\n    \"Sylo\",\n    \"Syriac\",\n    \"Syrc\",\n    \"Tagalog\",\n    \"Tglg\",\n    \"Tagbanwa\",\n    \"Tagb\",\n    \"Tai_Le\",\n    \"Tale\",\n    \"Tai_Tham\",\n    \"Lana\",\n    \"Tai_Viet\",\n    \"Tavt\",\n    \"Takri\",\n    \"Takr\",\n    \"Tamil\",\n    \"Taml\",\n    \"Tangut\",\n    \"Tang\",\n    \"Telugu\",\n    \"Telu\",\n    \"Thaana\",\n    \"Thaa\",\n    \"Thai\",\n    \"Tibetan\",\n    \"Tibt\",\n    \"Tifinagh\",\n    \"Tfng\",\n    \"Tirhuta\",\n    \"Tirh\",\n    \"Ugaritic\",\n    \"Ugar\",\n    \"Vai\",\n    \"Vaii\",\n    \"Warang_Citi\",\n    \"Wara\",\n    \"Yi\",\n    \"Yiii\",\n    \"Zanabazar_Square\",\n    \"Zanb\"\n  ]\n};\nArray.prototype.push.apply(data.$LONE, data.General_Category);\ndata.gc = data.General_Category;\ndata.sc = data.Script_Extensions = data.scx = data.Script;\n\nvar pp$9 = Parser.prototype;\n\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n  this.source = \"\";\n  this.flags = \"\";\n  this.start = 0;\n  this.switchU = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = \"\";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = [];\n  this.backReferenceNames = [];\n};\n\nRegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n  var unicode = flags.indexOf(\"u\") !== -1;\n  this.start = start | 0;\n  this.source = pattern + \"\";\n  this.flags = flags;\n  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n};\n\nRegExpValidationState.prototype.raise = function raise (message) {\n  this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n};\n\n// If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\nRegExpValidationState.prototype.at = function at (i) {\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return -1\n  }\n  var c = s.charCodeAt(i);\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c\n  }\n  return (c << 10) + s.charCodeAt(i + 1) - 0x35FDC00\n};\n\nRegExpValidationState.prototype.nextIndex = function nextIndex (i) {\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return l\n  }\n  var c = s.charCodeAt(i);\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return i + 1\n  }\n  return i + 2\n};\n\nRegExpValidationState.prototype.current = function current () {\n  return this.at(this.pos)\n};\n\nRegExpValidationState.prototype.lookahead = function lookahead () {\n  return this.at(this.nextIndex(this.pos))\n};\n\nRegExpValidationState.prototype.advance = function advance () {\n  this.pos = this.nextIndex(this.pos);\n};\n\nRegExpValidationState.prototype.eat = function eat (ch) {\n  if (this.current() === ch) {\n    this.advance();\n    return true\n  }\n  return false\n};\n\nfunction codePointToString$1(ch) {\n  if (ch <= 0xFFFF) { return String.fromCharCode(ch) }\n  ch -= 0x10000;\n  return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)\n}\n\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$9.validateRegExpFlags = function(state) {\n  var this$1 = this;\n\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n    if (validFlags.indexOf(flag) === -1) {\n      this$1.raise(state.start, \"Invalid regular expression flag\");\n    }\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this$1.raise(state.start, \"Duplicate regular expression flag\");\n    }\n  }\n};\n\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$9.validateRegExpPattern = function(state) {\n  this.regexp_pattern(state);\n\n  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\npp$9.regexp_pattern = function(state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = \"\";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames.length = 0;\n  state.backReferenceNames.length = 0;\n\n  this.regexp_disjunction(state);\n\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29 /* ) */)) {\n      state.raise(\"Unmatched ')'\");\n    }\n    if (state.eat(0x5D /* [ */) || state.eat(0x7D /* } */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise(\"Invalid escape\");\n  }\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n\n    if (state.groupNames.indexOf(name) === -1) {\n      state.raise(\"Invalid named capture referenced\");\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\npp$9.regexp_disjunction = function(state) {\n  var this$1 = this;\n\n  this.regexp_alternative(state);\n  while (state.eat(0x7C /* | */)) {\n    this$1.regexp_alternative(state);\n  }\n\n  // Make the same message as V8.\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  if (state.eat(0x7B /* { */)) {\n    state.raise(\"Lone quantifier brackets\");\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\npp$9.regexp_alternative = function(state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state))\n    {  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\npp$9.regexp_eatTerm = function(state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise(\"Invalid quantifier\");\n      }\n    }\n    return true\n  }\n\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\npp$9.regexp_eatAssertion = function(state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false;\n\n  // ^, $\n  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n    return true\n  }\n\n  // \\b \\B\n  if (state.eat(0x5C /* \\ */)) {\n    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  // Lookahead / Lookbehind\n  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n    var lookbehind = false;\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C /* < */);\n    }\n    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n      this.regexp_disjunction(state);\n      if (!state.eat(0x29 /* ) */)) {\n        state.raise(\"Unterminated group\");\n      }\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true\n    }\n  }\n\n  state.pos = start;\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\npp$9.regexp_eatQuantifier = function(state, noError) {\n  if ( noError === void 0 ) noError = false;\n\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F /* ? */);\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\npp$9.regexp_eatQuantifierPrefix = function(state, noError) {\n  return (\n    state.eat(0x2A /* * */) ||\n    state.eat(0x2B /* + */) ||\n    state.eat(0x3F /* ? */) ||\n    this.regexp_eatBracedQuantifier(state, noError)\n  )\n};\npp$9.regexp_eatBracedQuantifier = function(state, noError) {\n  var start = state.pos;\n  if (state.eat(0x7B /* { */)) {\n    var min = 0, max = -1;\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n      if (state.eat(0x7D /* } */)) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise(\"numbers out of order in {} quantifier\");\n        }\n        return true\n      }\n    }\n    if (state.switchU && !noError) {\n      state.raise(\"Incomplete quantifier\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\npp$9.regexp_eatAtom = function(state) {\n  return (\n    this.regexp_eatPatternCharacters(state) ||\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state)\n  )\n};\npp$9.regexp_eatReverseSolidusAtomEscape = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatUncapturingGroup = function(state) {\n  var start = state.pos;\n  if (state.eat(0x28 /* ( */)) {\n    if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatCapturingGroup = function(state) {\n  if (state.eat(0x28 /* ( */)) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F /* ? */) {\n      state.raise(\"Invalid group\");\n    }\n    this.regexp_disjunction(state);\n    if (state.eat(0x29 /* ) */)) {\n      state.numCapturingParens += 1;\n      return true\n    }\n    state.raise(\"Unterminated group\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\npp$9.regexp_eatExtendedAtom = function(state) {\n  return (\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state) ||\n    this.regexp_eatInvalidBracedQuantifier(state) ||\n    this.regexp_eatExtendedPatternCharacter(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\npp$9.regexp_eatInvalidBracedQuantifier = function(state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\npp$9.regexp_eatSyntaxCharacter = function(state) {\n  var ch = state.current();\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isSyntaxCharacter(ch) {\n  return (\n    ch === 0x24 /* $ */ ||\n    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n    ch === 0x2E /* . */ ||\n    ch === 0x3F /* ? */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\npp$9.regexp_eatPatternCharacters = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n  return state.pos !== start\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\npp$9.regexp_eatExtendedPatternCharacter = function(state) {\n  var ch = state.current();\n  if (\n    ch !== -1 &&\n    ch !== 0x24 /* $ */ &&\n    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n    ch !== 0x2E /* . */ &&\n    ch !== 0x3F /* ? */ &&\n    ch !== 0x5B /* [ */ &&\n    ch !== 0x5E /* ^ */ &&\n    ch !== 0x7C /* | */\n  ) {\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// GroupSpecifier[U] ::\n//   [empty]\n//   `?` GroupName[?U]\npp$9.regexp_groupSpecifier = function(state) {\n  if (state.eat(0x3F /* ? */)) {\n    if (this.regexp_eatGroupName(state)) {\n      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n        state.raise(\"Duplicate capture group name\");\n      }\n      state.groupNames.push(state.lastStringValue);\n      return\n    }\n    state.raise(\"Invalid group\");\n  }\n};\n\n// GroupName[U] ::\n//   `<` RegExpIdentifierName[?U] `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$9.regexp_eatGroupName = function(state) {\n  state.lastStringValue = \"\";\n  if (state.eat(0x3C /* < */)) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n      return true\n    }\n    state.raise(\"Invalid capture group name\");\n  }\n  return false\n};\n\n// RegExpIdentifierName[U] ::\n//   RegExpIdentifierStart[?U]\n//   RegExpIdentifierName[?U] RegExpIdentifierPart[?U]\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$9.regexp_eatRegExpIdentifierName = function(state) {\n  state.lastStringValue = \"\";\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString$1(state.lastIntValue);\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString$1(state.lastIntValue);\n    }\n    return true\n  }\n  return false\n};\n\n// RegExpIdentifierStart[U] ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\npp$9.regexp_eatRegExpIdentifierStart = function(state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n}\n\n// RegExpIdentifierPart[U] ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\n//   <ZWNJ>\n//   <ZWJ>\npp$9.regexp_eatRegExpIdentifierPart = function(state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\npp$9.regexp_eatAtomEscape = function(state) {\n  if (\n    this.regexp_eatBackReference(state) ||\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state) ||\n    (state.switchN && this.regexp_eatKGroupName(state))\n  ) {\n    return true\n  }\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63 /* c */) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.raise(\"Invalid escape\");\n  }\n  return false\n};\npp$9.regexp_eatBackReference = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n      return true\n    }\n    if (n <= state.numCapturingParens) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatKGroupName = function(state) {\n  if (state.eat(0x6B /* k */)) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true\n    }\n    state.raise(\"Invalid named reference\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\npp$9.regexp_eatCharacterEscape = function(state) {\n  return (\n    this.regexp_eatControlEscape(state) ||\n    this.regexp_eatCControlLetter(state) ||\n    this.regexp_eatZero(state) ||\n    this.regexp_eatHexEscapeSequence(state) ||\n    this.regexp_eatRegExpUnicodeEscapeSequence(state) ||\n    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n    this.regexp_eatIdentityEscape(state)\n  )\n};\npp$9.regexp_eatCControlLetter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x63 /* c */)) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatZero = function(state) {\n  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\npp$9.regexp_eatControlEscape = function(state) {\n  var ch = state.current();\n  if (ch === 0x74 /* t */) {\n    state.lastIntValue = 0x09; /* \\t */\n    state.advance();\n    return true\n  }\n  if (ch === 0x6E /* n */) {\n    state.lastIntValue = 0x0A; /* \\n */\n    state.advance();\n    return true\n  }\n  if (ch === 0x76 /* v */) {\n    state.lastIntValue = 0x0B; /* \\v */\n    state.advance();\n    return true\n  }\n  if (ch === 0x66 /* f */) {\n    state.lastIntValue = 0x0C; /* \\f */\n    state.advance();\n    return true\n  }\n  if (ch === 0x72 /* r */) {\n    state.lastIntValue = 0x0D; /* \\r */\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\npp$9.regexp_eatControlLetter = function(state) {\n  var ch = state.current();\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isControlLetter(ch) {\n  return (\n    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\npp$9.regexp_eatRegExpUnicodeEscapeSequence = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x75 /* u */)) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n      if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n        if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true\n          }\n        }\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n      return true\n    }\n    if (\n      state.switchU &&\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatHexDigits(state) &&\n      state.eat(0x7D /* } */) &&\n      isValidUnicode(state.lastIntValue)\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.pos = start;\n  }\n\n  return false\n};\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\npp$9.regexp_eatIdentityEscape = function(state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true\n    }\n    if (state.eat(0x2F /* / */)) {\n      state.lastIntValue = 0x2F; /* / */\n      return true\n    }\n    return false\n  }\n\n  var ch = state.current();\n  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\npp$9.regexp_eatDecimalEscape = function(state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n    do {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\npp$9.regexp_eatCharacterClassEscape = function(state) {\n  var ch = state.current();\n\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return true\n  }\n\n  if (\n    state.switchU &&\n    this.options.ecmaVersion >= 9 &&\n    (ch === 0x50 /* P */ || ch === 0x70 /* p */)\n  ) {\n    state.lastIntValue = -1;\n    state.advance();\n    if (\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatUnicodePropertyValueExpression(state) &&\n      state.eat(0x7D /* } */)\n    ) {\n      return true\n    }\n    state.raise(\"Invalid property name\");\n  }\n\n  return false\n};\nfunction isCharacterClassEscape(ch) {\n  return (\n    ch === 0x64 /* d */ ||\n    ch === 0x44 /* D */ ||\n    ch === 0x73 /* s */ ||\n    ch === 0x53 /* S */ ||\n    ch === 0x77 /* w */ ||\n    ch === 0x57 /* W */\n  )\n}\n\n// UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\npp$9.regexp_eatUnicodePropertyValueExpression = function(state) {\n  var start = state.pos;\n\n  // UnicodePropertyName `=` UnicodePropertyValue\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n    var name = state.lastStringValue;\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return true\n    }\n  }\n  state.pos = start;\n\n  // LoneUnicodePropertyNameOrValue\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n    return true\n  }\n  return false\n};\npp$9.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n  if (!data.hasOwnProperty(name) || data[name].indexOf(value) === -1) {\n    state.raise(\"Invalid property name\");\n  }\n};\npp$9.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n  if (data.$LONE.indexOf(nameOrValue) === -1) {\n    state.raise(\"Invalid property name\");\n  }\n};\n\n// UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\npp$9.regexp_eatUnicodePropertyName = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString$1(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F /* _ */\n}\n\n// UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\npp$9.regexp_eatUnicodePropertyValue = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString$1(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n}\n\n// LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\npp$9.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n  return this.regexp_eatUnicodePropertyValue(state)\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\npp$9.regexp_eatCharacterClass = function(state) {\n  if (state.eat(0x5B /* [ */)) {\n    state.eat(0x5E /* ^ */);\n    this.regexp_classRanges(state);\n    if (state.eat(0x5D /* [ */)) {\n      return true\n    }\n    // Unreachable since it threw \"unterminated regular expression\" error before.\n    state.raise(\"Unterminated character class\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\npp$9.regexp_classRanges = function(state) {\n  var this$1 = this;\n\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this$1.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise(\"Invalid character class\");\n      }\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\npp$9.regexp_eatClassAtom = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n        state.raise(\"Invalid class escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n\n  var ch = state.current();\n  if (ch !== 0x5D /* [ */) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\npp$9.regexp_eatClassEscape = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x62 /* b */)) {\n    state.lastIntValue = 0x08; /* <BS> */\n    return true\n  }\n\n  if (state.switchU && state.eat(0x2D /* - */)) {\n    state.lastIntValue = 0x2D; /* - */\n    return true\n  }\n\n  if (!state.switchU && state.eat(0x63 /* c */)) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  return (\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\npp$9.regexp_eatClassControlLetter = function(state) {\n  var ch = state.current();\n  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$9.regexp_eatHexEscapeSequence = function(state) {\n  var start = state.pos;\n  if (state.eat(0x78 /* x */)) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\npp$9.regexp_eatDecimalDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\npp$9.regexp_eatHexDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isHexDigit(ch) {\n  return (\n    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n  )\n}\nfunction hexToInt(ch) {\n  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n    return 10 + (ch - 0x41 /* A */)\n  }\n  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n    return 10 + (ch - 0x61 /* a */)\n  }\n  return ch - 0x30 /* 0 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\npp$9.regexp_eatLegacyOctalEscapeSequence = function(state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\npp$9.regexp_eatOctalDigit = function(state) {\n  var ch = state.current();\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30; /* 0 */\n    state.advance();\n    return true\n  }\n  state.lastIntValue = 0;\n  return false\n};\nfunction isOctalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$9.regexp_eatFixedHexDigits = function(state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false\n    }\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return true\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations)\n    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n  if (p.options.ranges)\n    { this.range = [p.start, p.end]; }\n};\n\n// ## Tokenizer\n\nvar pp$8 = Parser.prototype;\n\n// Move to the next token\n\npp$8.next = function() {\n  if (this.options.onToken)\n    { this.options.onToken(new Token(this)); }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp$8.getToken = function() {\n  this.next();\n  return new Token(this)\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  { pp$8[Symbol.iterator] = function() {\n    var this$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1.getToken();\n        return {\n          done: token.type === types.eof,\n          value: token\n        }\n      }\n    }\n  }; }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\npp$8.curContext = function() {\n  return this.context[this.context.length - 1]\n};\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp$8.nextToken = function() {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n  this.start = this.pos;\n  if (this.options.locations) { this.startLoc = this.curPosition(); }\n  if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n  if (curContext.override) { return curContext.override(this) }\n  else { this.readToken(this.fullCharCodeAtPos()); }\n};\n\npp$8.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    { return this.readWord() }\n\n  return this.getTokenFromCode(code)\n};\n\npp$8.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xe000) { return code }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return (code << 10) + next - 0x35fdc00\n};\n\npp$8.skipBlockComment = function() {\n  var this$1 = this;\n\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    lineBreakG.lastIndex = start;\n    var match;\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this$1.curLine;\n      this$1.lineStart = match.index + match[0].length;\n    }\n  }\n  if (this.options.onComment)\n    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\npp$8.skipLineComment = function(startSkip) {\n  var this$1 = this;\n\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this$1.input.charCodeAt(++this$1.pos);\n  }\n  if (this.options.onComment)\n    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp$8.skipSpace = function() {\n  var this$1 = this;\n\n  loop: while (this.pos < this.input.length) {\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this$1.pos;\n      break\n    case 13:\n      if (this$1.input.charCodeAt(this$1.pos + 1) === 10) {\n        ++this$1.pos;\n      }\n    case 10: case 8232: case 8233:\n      ++this$1.pos;\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      break\n    case 47: // '/'\n      switch (this$1.input.charCodeAt(this$1.pos + 1)) {\n      case 42: // '*'\n        this$1.skipBlockComment();\n        break\n      case 47:\n        this$1.skipLineComment(2);\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this$1.pos;\n      } else {\n        break loop\n      }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp$8.finishToken = function(type, val) {\n  this.end = this.pos;\n  if (this.options.locations) { this.endLoc = this.curPosition(); }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp$8.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) { return this.readNumber(true) }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types.ellipsis)\n  } else {\n    ++this.pos;\n    return this.finishToken(types.dot)\n  }\n};\n\npp$8.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.slash, 1)\n};\n\npp$8.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types.star : types.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) { return this.finishOp(types.assign, size + 1) }\n  return this.finishOp(tokentype, size)\n};\n\npp$8.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) { return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n};\n\npp$8.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.bitwiseXOR, 1)\n};\n\npp$8.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    return this.finishOp(types.incDec, 2)\n  }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.plusMin, 1)\n};\n\npp$8.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(types.bitShift, size)\n  }\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n      this.input.charCodeAt(this.pos + 3) === 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken()\n  }\n  if (next === 61) { size = 2; }\n  return this.finishOp(types.relational, size)\n};\n\npp$8.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2;\n    return this.finishToken(types.arrow)\n  }\n  return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n};\n\npp$8.getTokenFromCode = function(code) {\n  switch (code) {\n  // The interpretation of a dot depends on whether it is followed\n  // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n  // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(types.parenL)\n  case 41: ++this.pos; return this.finishToken(types.parenR)\n  case 59: ++this.pos; return this.finishToken(types.semi)\n  case 44: ++this.pos; return this.finishToken(types.comma)\n  case 91: ++this.pos; return this.finishToken(types.bracketL)\n  case 93: ++this.pos; return this.finishToken(types.bracketR)\n  case 123: ++this.pos; return this.finishToken(types.braceL)\n  case 125: ++this.pos; return this.finishToken(types.braceR)\n  case 58: ++this.pos; return this.finishToken(types.colon)\n  case 63: ++this.pos; return this.finishToken(types.question)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) { break }\n    ++this.pos;\n    return this.finishToken(types.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n    }\n\n  // Anything else beginning with a digit is an integer, octal\n  // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n  // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n  // Operators are parsed inline in tiny state machines. '=' (61) is\n  // often referred to. `finishOp` simply skips the amount of\n  // characters it is given as second argument, and returns a token\n  // of the type given by its first argument.\n\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 126: // '~'\n    return this.finishOp(types.prefix, 1)\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp$8.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str)\n};\n\npp$8.readRegexp = function() {\n  var this$1 = this;\n\n  var escaped, inClass, start = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(start, \"Unterminated regular expression\"); }\n    var ch = this$1.input.charAt(this$1.pos);\n    if (lineBreak.test(ch)) { this$1.raise(start, \"Unterminated regular expression\"); }\n    if (!escaped) {\n      if (ch === \"[\") { inClass = true; }\n      else if (ch === \"]\" && inClass) { inClass = false; }\n      else if (ch === \"/\" && !inClass) { break }\n      escaped = ch === \"\\\\\";\n    } else { escaped = false; }\n    ++this$1.pos;\n  }\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n  if (this.containsEsc) { this.unexpected(flagsStart); }\n\n  // Validate pattern\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state);\n\n  // Create Literal#value property value.\n  var value = null;\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {\n    // ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n\n  return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp$8.readInt = function(radix, len) {\n  var this$1 = this;\n\n  var start = this.pos, total = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    var code = this$1.input.charCodeAt(this$1.pos), val = (void 0);\n    if (code >= 97) { val = code - 97 + 10; } // a\n    else if (code >= 65) { val = code - 65 + 10; } // A\n    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n    else { val = Infinity; }\n    if (val >= radix) { break }\n    ++this$1.pos;\n    total = total * radix + val;\n  }\n  if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n  return total\n};\n\npp$8.readRadixNumber = function(radix) {\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n  return this.finishToken(types.num, val)\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp$8.readNumber = function(startsWithDot) {\n  var start = this.pos;\n  if (!startsWithDot && this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n  if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n  var next = this.input.charCodeAt(this.pos);\n  if (next === 46 && !octal) { // '.'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) { ++this.pos; } // '+-'\n    if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n  var str = this.input.slice(start, this.pos);\n  var val = octal ? parseInt(str, 8) : parseFloat(str);\n  return this.finishToken(types.num, val)\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp$8.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code;\n\n  if (ch === 123) { // '{'\n    if (this.options.ecmaVersion < 6) { this.unexpected(); }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code\n};\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) { return String.fromCharCode(code) }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\npp$8.readString = function(quote) {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = ++this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === quote) { break }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(false);\n      chunkStart = this$1.pos;\n    } else {\n      if (isNewLine(ch, this$1.options.ecmaVersion >= 10)) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n      ++this$1.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types.string, out)\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp$8.tryReadTemplateToken = function() {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp$8.invalidStringToken = function(position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp$8.readTmplToken = function() {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated template\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === 96 || ch === 36 && this$1.input.charCodeAt(this$1.pos + 1) === 123) { // '`', '${'\n      if (this$1.pos === this$1.start && (this$1.type === types.template || this$1.type === types.invalidTemplate)) {\n        if (ch === 36) {\n          this$1.pos += 2;\n          return this$1.finishToken(types.dollarBraceL)\n        } else {\n          ++this$1.pos;\n          return this$1.finishToken(types.backQuote)\n        }\n      }\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      return this$1.finishToken(types.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(true);\n      chunkStart = this$1.pos;\n    } else if (isNewLine(ch)) {\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      ++this$1.pos;\n      switch (ch) {\n      case 13:\n        if (this$1.input.charCodeAt(this$1.pos) === 10) { ++this$1.pos; }\n      case 10:\n        out += \"\\n\";\n        break\n      default:\n        out += String.fromCharCode(ch);\n        break\n      }\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      chunkStart = this$1.pos;\n    } else {\n      ++this$1.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp$8.readInvalidTemplateToken = function() {\n  var this$1 = this;\n\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this$1.input[this$1.pos]) {\n    case \"\\\\\":\n      ++this$1.pos;\n      break\n\n    case \"$\":\n      if (this$1.input[this$1.pos + 1] !== \"{\") {\n        break\n      }\n    // falls through\n\n    case \"`\":\n      return this$1.finishToken(types.invalidTemplate, this$1.input.slice(this$1.start, this$1.pos))\n\n    // no default\n    }\n  }\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp$8.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n    return \"\"\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n      var octal = parseInt(octalStr, 8);\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1);\n        octal = parseInt(octalStr, 8);\n      }\n      this.pos += octalStr.length - 1;\n      ch = this.input.charCodeAt(this.pos);\n      if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n        this.invalidStringToken(\n          this.pos - 1 - octalStr.length,\n          inTemplate\n            ? \"Octal literal in template string\"\n            : \"Octal literal in strict mode\"\n        );\n      }\n      return String.fromCharCode(octal)\n    }\n    return String.fromCharCode(ch)\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp$8.readHexChar = function(len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n  return n\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp$8.readWord1 = function() {\n  var this$1 = this;\n\n  this.containsEsc = false;\n  var word = \"\", first = true, chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this$1.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this$1.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) { // \"\\\"\n      this$1.containsEsc = true;\n      word += this$1.input.slice(chunkStart, this$1.pos);\n      var escStart = this$1.pos;\n      if (this$1.input.charCodeAt(++this$1.pos) !== 117) // \"u\"\n        { this$1.invalidStringToken(this$1.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n      ++this$1.pos;\n      var esc = this$1.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        { this$1.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n      word += codePointToString(esc);\n      chunkStart = this$1.pos;\n    } else {\n      break\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp$8.readWord = function() {\n  var word = this.readWord1();\n  var type = types.name;\n  if (this.keywords.test(word)) {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + word); }\n    type = keywords$1[word];\n  }\n  return this.finishToken(type, word)\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/acornjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/acornjs/acorn/issues\n//\n// This file defines the main parser interface. The library also comes\n// with a [error-tolerant parser][dammit] and an\n// [abstract syntax tree walker][walk], defined in other files.\n//\n// [dammit]: acorn_loose.js\n// [walk]: util/walk.js\n\nvar version = \"5.7.3\";\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return new Parser(options, input).parse()\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  var p = new Parser(options, input, pos);\n  p.nextToken();\n  return p.parseExpression()\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return new Parser(options, input)\n}\n\n// This is a terrible kludge to support the existing, pre-ES6\n// interface where the loose parser module retroactively adds exports\n// to this module.\nvar parse_dammit;\nvar LooseParser;\nvar pluginsLoose; // eslint-disable-line camelcase\nfunction addLooseExports(parse, Parser$$1, plugins$$1) {\n  parse_dammit = parse; // eslint-disable-line camelcase\n  LooseParser = Parser$$1;\n  pluginsLoose = plugins$$1;\n}\n\nexport { version, parse, parseExpressionAt, tokenizer, parse_dammit, LooseParser, pluginsLoose, addLooseExports, Parser, plugins, defaultOptions, Position, SourceLocation, getLineInfo, Node, TokenType, types as tokTypes, keywords$1 as keywordTypes, TokContext, types$1 as tokContexts, isIdentifierChar, isIdentifierStart, Token, isNewLine, lineBreak, lineBreakG, nonASCIIwhitespace };\n","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = require('../core/utils');\nvar acorn = require('acorn');\n\nmodule.exports = function () {\n\n\t/**\n  * @constructor FunctionNodeBase\n  * \n  * @desc Represents a single function, inside JS, webGL, or openGL.\n  * \n  * <p>This handles all the raw state, converted state, etc. Of a single function.</p>\n  * \n  * @prop {String} functionName - Name of the function\n  * @prop {Function} jsFunction - The JS Function the node represents\n  * @prop {String} jsFunctionString - jsFunction.toString()\n  * @prop {String[]} paramNames - Parameter names of the function\n  * @prop {String[]} paramTypes - Shader land parameters type assumption\n  * @prop {Boolean} isRootKernel - Special indicator, for kernel function\n  * @prop {String} webglFunctionString - webgl converted function string\n  * @prop {String} openglFunctionString - opengl converted function string\n  * @prop {String[]} calledFunctions - List of all the functions called\n  * @param {String} functionName - Function name to assume, if its null, it attempts to extract from the function\n  * @param {Function|String} jsFunction - JS Function to do conversion\n  * @param {Object} options\n  *\n  */\n\tfunction BaseFunctionNode(functionName, jsFunction, options) {\n\t\t_classCallCheck(this, BaseFunctionNode);\n\n\t\tthis.calledFunctions = [];\n\t\tthis.calledFunctionsArguments = {};\n\t\tthis.builder = null;\n\t\tthis.isRootKernel = false;\n\t\tthis.isSubKernel = false;\n\t\tthis.parent = null;\n\t\tthis.debug = null;\n\t\tthis.prototypeOnly = null;\n\t\tthis.constants = null;\n\t\tthis.output = null;\n\t\tthis.declarations = {};\n\t\tthis.states = [];\n\t\tthis.fixIntegerDivisionAccuracy = null;\n\n\t\tvar paramTypes = void 0;\n\t\tvar returnType = void 0;\n\t\tif (options) {\n\t\t\tif (options.hasOwnProperty('debug')) {\n\t\t\t\tthis.debug = options.debug;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('prototypeOnly')) {\n\t\t\t\tthis.prototypeOnly = options.prototypeOnly;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('constants')) {\n\t\t\t\tthis.constants = options.constants;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('output')) {\n\t\t\t\tthis.output = options.output;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('loopMaxIterations')) {\n\t\t\t\tthis.loopMaxIterations = options.loopMaxIterations;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('paramTypes')) {\n\t\t\t\tthis.paramTypes = paramTypes = options.paramTypes;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('constantTypes')) {\n\t\t\t\tthis.constantTypes = options.constantTypes;\n\t\t\t} else {\n\t\t\t\tthis.constantTypes = {};\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('returnType')) {\n\t\t\t\treturnType = options.returnType;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('fixIntegerDivisionAccuracy')) {\n\t\t\t\tthis.fixIntegerDivisionAccuracy = options.fixIntegerDivisionAccuracy;\n\t\t\t}\n\t\t}\n\n\t\t//\n\t\t// Missing jsFunction object exception\n\t\t//\n\t\tif (!jsFunction) {\n\t\t\tthrow 'jsFunction, parameter is missing';\n\t\t}\n\n\t\t//\n\t\t// Setup jsFunction and its string property + validate them\n\t\t//\n\t\tthis.jsFunctionString = jsFunction.toString();\n\t\tif (!utils.isFunctionString(this.jsFunctionString)) {\n\t\t\tconsole.error('jsFunction, to string conversion check failed: not a function?', this.jsFunctionString);\n\t\t\tthrow 'jsFunction, to string conversion check failed: not a function?';\n\t\t}\n\n\t\tif (!utils.isFunction(jsFunction)) {\n\t\t\t//throw 'jsFunction, is not a valid JS Function';\n\t\t\tthis.jsFunction = null;\n\t\t} else {\n\t\t\tthis.jsFunction = jsFunction;\n\t\t}\n\n\t\t//\n\t\t// Setup the function name property\n\t\t//\n\t\tthis.functionName = functionName || jsFunction && jsFunction.name || utils.getFunctionNameFromString(this.jsFunctionString);\n\n\t\tif (!this.functionName) {\n\t\t\tthrow 'jsFunction, missing name argument or value';\n\t\t}\n\n\t\t//\n\t\t// Extract parameter name, and its argument types\n\t\t//\n\t\tthis.paramNames = utils.getParamNamesFromString(this.jsFunctionString);\n\t\tif (paramTypes) {\n\t\t\tif (Array.isArray(paramTypes)) {\n\t\t\t\tif (paramTypes.length !== this.paramNames.length) {\n\t\t\t\t\tthrow 'Invalid argument type array length, against function length -> (' + paramTypes.length + ',' + this.paramNames.length + ')';\n\t\t\t\t}\n\t\t\t\tthis.paramTypes = paramTypes;\n\t\t\t} else if ((typeof paramTypes === 'undefined' ? 'undefined' : _typeof(paramTypes)) === 'object') {\n\t\t\t\tvar paramVariableNames = Object.keys(paramTypes);\n\t\t\t\tif (paramTypes.hasOwnProperty('returns')) {\n\t\t\t\t\tthis.returnType = paramTypes.returns;\n\t\t\t\t\tparamVariableNames.splice(paramVariableNames.indexOf('returns'), 1);\n\t\t\t\t}\n\t\t\t\tif (paramVariableNames.length > 0 && paramVariableNames.length !== this.paramNames.length) {\n\t\t\t\t\tthrow 'Invalid argument type array length, against function length -> (' + paramVariableNames.length + ',' + this.paramNames.length + ')';\n\t\t\t\t} else {\n\t\t\t\t\tthis.paramTypes = this.paramNames.map(function (key) {\n\t\t\t\t\t\tif (paramTypes.hasOwnProperty(key)) {\n\t\t\t\t\t\t\treturn paramTypes[key];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Number';\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.paramTypes = [];\n\t\t}\n\n\t\t//\n\t\t// Return type handling\n\t\t//\n\t\tif (!this.returnType) {\n\t\t\tthis.returnType = returnType || 'Number';\n\t\t}\n\t}\n\n\t_createClass(BaseFunctionNode, [{\n\t\tkey: 'isIdentifierConstant',\n\t\tvalue: function isIdentifierConstant(paramName) {\n\t\t\tif (!this.constants) return false;\n\t\t\treturn this.constants.hasOwnProperty(paramName);\n\t\t}\n\t}, {\n\t\tkey: 'isInput',\n\t\tvalue: function isInput(paramName) {\n\t\t\treturn this.paramTypes[this.paramNames.indexOf(paramName)] === 'Input';\n\t\t}\n\t}, {\n\t\tkey: 'setBuilder',\n\t\tvalue: function setBuilder(builder) {\n\t\t\tthis.builder = builder;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'pushState',\n\t\tvalue: function pushState(state) {\n\t\t\tthis.states.push(state);\n\t\t}\n\t}, {\n\t\tkey: 'popState',\n\t\tvalue: function popState(state) {\n\t\t\tif (this.state !== state) {\n\t\t\t\tthrow new Error('Cannot popState ' + state + ' when in ' + this.state);\n\t\t\t}\n\t\t\tthis.states.pop();\n\t\t}\n\t}, {\n\t\tkey: 'isState',\n\t\tvalue: function isState(state) {\n\t\t\treturn this.state === state;\n\t\t}\n\t}, {\n\t\tkey: 'getJsFunction',\n\n\t\t/**\n   * \n   * Core Functions\n   * \n   */\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getJSFunction\n   *\n   * @desc Gets and return the stored JS Function.\n   * Note: that this internally eval the function, if only the string was provided on construction\n   *\n   * @returns {Function} The function object\n   *\n   */\n\t\tvalue: function getJsFunction() {\n\t\t\tif (this.jsFunction) {\n\t\t\t\treturn this.jsFunction;\n\t\t\t}\n\n\t\t\tif (this.jsFunctionString) {\n\t\t\t\tthis.jsFunction = eval(this.jsFunctionString);\n\t\t\t\treturn this.jsFunction;\n\t\t\t}\n\n\t\t\tthrow 'Missing jsFunction, and jsFunctionString parameter';\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name astMemberExpressionUnroll\n   * @desc Parses the abstract syntax tree for binary expression.\n   *\n   * <p>Utility function for astCallExpression.</p>\n   *\n   * @param {Object} ast - the AST object to parse\n   *\n   * @returns {String} the function namespace call, unrolled\n   */\n\n\t}, {\n\t\tkey: 'astMemberExpressionUnroll',\n\t\tvalue: function astMemberExpressionUnroll(ast) {\n\t\t\tif (ast.type === 'Identifier') {\n\t\t\t\treturn ast.name;\n\t\t\t} else if (ast.type === 'ThisExpression') {\n\t\t\t\treturn 'this';\n\t\t\t}\n\n\t\t\tif (ast.type === 'MemberExpression') {\n\t\t\t\tif (ast.object && ast.property) {\n\t\t\t\t\t//babel sniffing\n\t\t\t\t\tif (ast.object.hasOwnProperty('name') && ast.object.name[0] === '_') {\n\t\t\t\t\t\treturn this.astMemberExpressionUnroll(ast.property);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.astMemberExpressionUnroll(ast.object) + '.' + this.astMemberExpressionUnroll(ast.property);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//babel sniffing\n\t\t\tif (ast.hasOwnProperty('expressions')) {\n\t\t\t\tvar firstExpression = ast.expressions[0];\n\t\t\t\tif (firstExpression.type === 'Literal' && firstExpression.value === 0 && ast.expressions.length === 2) {\n\t\t\t\t\treturn this.astMemberExpressionUnroll(ast.expressions[1]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Failure, unknown expression\n\t\t\tthrow this.astErrorOutput('Unknown CallExpression_unroll', ast);\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getJsAST\n   *\n   * @desc Parses the class function JS, and returns its Abstract Syntax Tree object.\n   *\n   * This is used internally to convert to shader code\n   *\n   * @param {Object} [inParser] - Parser to use, assumes in scope 'parser' if null or undefined\n   *\n   * @returns {Object} The function AST Object, note that result is cached under this.jsFunctionAST;\n   *\n   */\n\n\t}, {\n\t\tkey: 'getJsAST',\n\t\tvalue: function getJsAST(inParser) {\n\t\t\tif (this.jsFunctionAST) {\n\t\t\t\treturn this.jsFunctionAST;\n\t\t\t}\n\n\t\t\tinParser = inParser || acorn;\n\t\t\tif (inParser === null) {\n\t\t\t\tthrow 'Missing JS to AST parser';\n\t\t\t}\n\n\t\t\tvar ast = inParser.parse('var ' + this.functionName + ' = ' + this.jsFunctionString + ';', {\n\t\t\t\tlocations: true\n\t\t\t});\n\t\t\tif (ast === null) {\n\t\t\t\tthrow 'Failed to parse JS code';\n\t\t\t}\n\n\t\t\t// take out the function object, outside the var declarations\n\t\t\tvar funcAST = ast.body[0].declarations[0].init;\n\t\t\tthis.jsFunctionAST = funcAST;\n\n\t\t\treturn funcAST;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getFunctionString\n   *\n   * @desc Returns the converted webgl shader function equivalent of the JS function\n   *\n   * @returns {String} webgl function string, result is cached under this.webGlFunctionString\n   *\n   */\n\n\t}, {\n\t\tkey: 'getFunctionString',\n\t\tvalue: function getFunctionString() {\n\t\t\tthis.generate();\n\t\t\treturn this.functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name setFunctionString\n   *\n   * @desc Set the functionString value, overwriting it\n   *\n   * @param {String} functionString - Shader code string, representing the function\n   *\n   */\n\n\t}, {\n\t\tkey: 'setFunctionString',\n\t\tvalue: function setFunctionString(functionString) {\n\t\t\tthis.functionString = functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getParamType\n   *\n   * @desc Return the type of parameter sent to subKernel/Kernel.\n   *\n   * @param {String} paramName - Name of the parameter\n   *\n   * @returns {String} Type of the parameter\n   *\n   */\n\n\t}, {\n\t\tkey: 'getParamType',\n\t\tvalue: function getParamType(paramName) {\n\t\t\tvar paramIndex = this.paramNames.indexOf(paramName);\n\t\t\tif (paramIndex === -1) {\n\t\t\t\tif (this.declarations.hasOwnProperty(paramName)) {\n\t\t\t\t\treturn this.declarations[paramName];\n\t\t\t\t} else {\n\t\t\t\t\treturn 'Number';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!this.parent) {\n\t\t\t\t\tif (this.paramTypes[paramIndex]) return this.paramTypes[paramIndex];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.paramTypes[paramIndex]) return this.paramTypes[paramIndex];\n\t\t\t\t\tvar calledFunctionArguments = this.parent.calledFunctionsArguments[this.functionName];\n\t\t\t\t\tfor (var i = 0; i < calledFunctionArguments.length; i++) {\n\t\t\t\t\t\tvar calledFunctionArgument = calledFunctionArguments[i];\n\t\t\t\t\t\tif (calledFunctionArgument[paramIndex] !== null) {\n\t\t\t\t\t\t\treturn this.paramTypes[paramIndex] = calledFunctionArgument[paramIndex].type;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn 'Number';\n\t\t}\n\t}, {\n\t\tkey: 'getConstantType',\n\t\tvalue: function getConstantType(constantName) {\n\t\t\tif (this.constantTypes[constantName]) {\n\t\t\t\treturn this.constantTypes[constantName];\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getUserParamName\n   *\n   * @desc Return the name of the *user parameter*(subKernel parameter) corresponding \n   * to the parameter supplied to the kernel\n   *\n   * @param {String} paramName - Name of the parameter\n   *\n   * @returns {String} Name of the parameter\n   *\n   */\n\n\t}, {\n\t\tkey: 'getUserParamName',\n\t\tvalue: function getUserParamName(paramName) {\n\t\t\tvar paramIndex = this.paramNames.indexOf(paramName);\n\t\t\tif (paramIndex === -1) return null;\n\t\t\tif (!this.parent || !this.isSubKernel) return null;\n\t\t\tvar calledFunctionArguments = this.parent.calledFunctionsArguments[this.functionName];\n\t\t\tfor (var i = 0; i < calledFunctionArguments.length; i++) {\n\t\t\t\tvar calledFunctionArgument = calledFunctionArguments[i];\n\t\t\t\tvar param = calledFunctionArgument[paramIndex];\n\t\t\t\tif (param !== null && param.type !== 'Integer') {\n\t\t\t\t\treturn param.name;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}, {\n\t\tkey: 'generate',\n\t\tvalue: function generate(options) {\n\t\t\tthrow new Error('generate not defined on BaseFunctionNode');\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name astGeneric\n   *\n   * @desc Parses the abstract syntax tree for generically to its respective function\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed string array\n   */\n\n\t}, {\n\t\tkey: 'astGeneric',\n\t\tvalue: function astGeneric(ast, retArr) {\n\t\t\tif (ast === null) {\n\t\t\t\tthrow this.astErrorOutput('NULL ast', ast);\n\t\t\t} else {\n\t\t\t\tif (Array.isArray(ast)) {\n\t\t\t\t\tfor (var i = 0; i < ast.length; i++) {\n\t\t\t\t\t\tthis.astGeneric(ast[i], retArr);\n\t\t\t\t\t}\n\t\t\t\t\treturn retArr;\n\t\t\t\t}\n\n\t\t\t\tswitch (ast.type) {\n\t\t\t\t\tcase 'FunctionDeclaration':\n\t\t\t\t\t\treturn this.astFunctionDeclaration(ast, retArr);\n\t\t\t\t\tcase 'FunctionExpression':\n\t\t\t\t\t\treturn this.astFunctionExpression(ast, retArr);\n\t\t\t\t\tcase 'ReturnStatement':\n\t\t\t\t\t\treturn this.astReturnStatement(ast, retArr);\n\t\t\t\t\tcase 'Literal':\n\t\t\t\t\t\treturn this.astLiteral(ast, retArr);\n\t\t\t\t\tcase 'BinaryExpression':\n\t\t\t\t\t\treturn this.astBinaryExpression(ast, retArr);\n\t\t\t\t\tcase 'Identifier':\n\t\t\t\t\t\treturn this.astIdentifierExpression(ast, retArr);\n\t\t\t\t\tcase 'AssignmentExpression':\n\t\t\t\t\t\treturn this.astAssignmentExpression(ast, retArr);\n\t\t\t\t\tcase 'ExpressionStatement':\n\t\t\t\t\t\treturn this.astExpressionStatement(ast, retArr);\n\t\t\t\t\tcase 'EmptyStatement':\n\t\t\t\t\t\treturn this.astEmptyStatement(ast, retArr);\n\t\t\t\t\tcase 'BlockStatement':\n\t\t\t\t\t\treturn this.astBlockStatement(ast, retArr);\n\t\t\t\t\tcase 'IfStatement':\n\t\t\t\t\t\treturn this.astIfStatement(ast, retArr);\n\t\t\t\t\tcase 'BreakStatement':\n\t\t\t\t\t\treturn this.astBreakStatement(ast, retArr);\n\t\t\t\t\tcase 'ContinueStatement':\n\t\t\t\t\t\treturn this.astContinueStatement(ast, retArr);\n\t\t\t\t\tcase 'ForStatement':\n\t\t\t\t\t\treturn this.astForStatement(ast, retArr);\n\t\t\t\t\tcase 'WhileStatement':\n\t\t\t\t\t\treturn this.astWhileStatement(ast, retArr);\n\t\t\t\t\tcase 'DoWhileStatement':\n\t\t\t\t\t\treturn this.astDoWhileStatement(ast, retArr);\n\t\t\t\t\tcase 'VariableDeclaration':\n\t\t\t\t\t\treturn this.astVariableDeclaration(ast, retArr);\n\t\t\t\t\tcase 'VariableDeclarator':\n\t\t\t\t\t\treturn this.astVariableDeclarator(ast, retArr);\n\t\t\t\t\tcase 'ThisExpression':\n\t\t\t\t\t\treturn this.astThisExpression(ast, retArr);\n\t\t\t\t\tcase 'SequenceExpression':\n\t\t\t\t\t\treturn this.astSequenceExpression(ast, retArr);\n\t\t\t\t\tcase 'UnaryExpression':\n\t\t\t\t\t\treturn this.astUnaryExpression(ast, retArr);\n\t\t\t\t\tcase 'UpdateExpression':\n\t\t\t\t\t\treturn this.astUpdateExpression(ast, retArr);\n\t\t\t\t\tcase 'LogicalExpression':\n\t\t\t\t\t\treturn this.astLogicalExpression(ast, retArr);\n\t\t\t\t\tcase 'MemberExpression':\n\t\t\t\t\t\treturn this.astMemberExpression(ast, retArr);\n\t\t\t\t\tcase 'CallExpression':\n\t\t\t\t\t\treturn this.astCallExpression(ast, retArr);\n\t\t\t\t\tcase 'ArrayExpression':\n\t\t\t\t\t\treturn this.astArrayExpression(ast, retArr);\n\t\t\t\t\tcase 'DebuggerStatement':\n\t\t\t\t\t\treturn this.astDebuggerStatement(ast, retArr);\n\t\t\t\t}\n\n\t\t\t\tthrow this.astErrorOutput('Unknown ast type : ' + ast.type, ast);\n\t\t\t}\n\t\t}\n\t\t/**\n   * @function\n   * @name astErrorOutput\n   * @ignore\n   * @desc To throw the AST error, with its location.\n   *\n   * @todo add location support fpr the AST error\n   *\n   * @param {Object} error - the error message output\n   * @param {Object} ast - the AST object where the error is\n   */\n\n\t}, {\n\t\tkey: 'astErrorOutput',\n\t\tvalue: function astErrorOutput(error, ast) {\n\t\t\tconsole.error(utils.getAstString(this.jsFunctionString, ast));\n\t\t\tconsole.error(error, ast, this);\n\t\t\treturn error;\n\t\t}\n\t}, {\n\t\tkey: 'astDebuggerStatement',\n\t\tvalue: function astDebuggerStatement(arrNode, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astFunctionDeclaration',\n\t\tvalue: function astFunctionDeclaration(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astFunctionExpression',\n\t\tvalue: function astFunctionExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astReturnStatement',\n\t\tvalue: function astReturnStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astLiteral',\n\t\tvalue: function astLiteral(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astBinaryExpression',\n\t\tvalue: function astBinaryExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astIdentifierExpression',\n\t\tvalue: function astIdentifierExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astAssignmentExpression',\n\t\tvalue: function astAssignmentExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astExpressionStatement',\n\t\tvalue: function astExpressionStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astEmptyStatement',\n\t\tvalue: function astEmptyStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astBlockStatement',\n\t\tvalue: function astBlockStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astIfStatement',\n\t\tvalue: function astIfStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astBreakStatement',\n\t\tvalue: function astBreakStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astContinueStatement',\n\t\tvalue: function astContinueStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astForStatement',\n\t\tvalue: function astForStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astWhileStatement',\n\t\tvalue: function astWhileStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astDoWhileStatement',\n\t\tvalue: function astDoWhileStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astVariableDeclaration',\n\t\tvalue: function astVariableDeclaration(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astVariableDeclarator',\n\t\tvalue: function astVariableDeclarator(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astThisExpression',\n\t\tvalue: function astThisExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astSequenceExpression',\n\t\tvalue: function astSequenceExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astUnaryExpression',\n\t\tvalue: function astUnaryExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astUpdateExpression',\n\t\tvalue: function astUpdateExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astLogicalExpression',\n\t\tvalue: function astLogicalExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astMemberExpression',\n\t\tvalue: function astMemberExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astCallExpression',\n\t\tvalue: function astCallExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astArrayExpression',\n\t\tvalue: function astArrayExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @ignore\n   * @function\n   * @name pushParameter\n   *\n   * @desc [INTERNAL] pushes a fn parameter onto retArr and 'casts' to int if necessary\n   *  i.e. deal with force-int-parameter state\n   * \t\t\t\n   * @param {Array} retArr - return array string\n   * @param {String} parameter - the parameter name  \n   *\n   */\n\n\t}, {\n\t\tkey: 'pushParameter',\n\t\tvalue: function pushParameter(retArr, parameter) {\n\t\t\tif (this.isState('in-get-call-parameters')) {\n\t\t\t\tretArr.push('int(' + parameter + ')');\n\t\t\t} else {\n\t\t\t\tretArr.push(parameter);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'state',\n\t\tget: function get() {\n\t\t\treturn this.states[this.states.length - 1];\n\t\t}\n\t}]);\n\n\treturn BaseFunctionNode;\n}();","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FunctionNodeBase = require('../function-node-base');\nvar utils = require('../../core/utils');\n// Closure capture for the ast function, prevent collision with existing AST functions\n// The prefixes to use\nvar jsMathPrefix = 'Math.';\nvar localPrefix = 'this.';\nvar constantsPrefix = 'this.constants.';\n\nvar DECODE32_ENCODE32 = /decode32\\(\\s+encode32\\(/g;\nvar ENCODE32_DECODE32 = /encode32\\(\\s+decode32\\(/g;\n\n// these debugs were hugely usefull...\n// TODO: optimise out - webpack/babel options? maybe some generic logging support in core/utils?\n// const debugLog = console.log\nvar debugLog = function debugLog() {};\n/**\n * @class WebGLFunctionNode\n *\n * @desc [INTERNAL] Takes in a function node, and does all the AST voodoo required to generate its respective webGL code.\n *\n * @extends FunctionNodeBase\n *\n * @param {functionNode} inNode - The function node object\n *\n * @returns the converted webGL function string\n *\n */\nmodule.exports = function (_FunctionNodeBase) {\n\t_inherits(WebGLFunctionNode, _FunctionNodeBase);\n\n\tfunction WebGLFunctionNode() {\n\t\t_classCallCheck(this, WebGLFunctionNode);\n\n\t\treturn _possibleConstructorReturn(this, (WebGLFunctionNode.__proto__ || Object.getPrototypeOf(WebGLFunctionNode)).apply(this, arguments));\n\t}\n\n\t_createClass(WebGLFunctionNode, [{\n\t\tkey: 'generate',\n\t\tvalue: function generate() {\n\t\t\tif (this.debug) {\n\t\t\t\tdebugLog(this);\n\t\t\t}\n\t\t\tif (this.prototypeOnly) {\n\t\t\t\treturn this.astFunctionPrototype(this.getJsAST(), []).join('').trim();\n\t\t\t} else {\n\t\t\t\tthis.functionStringArray = this.astGeneric(this.getJsAST(), []);\n\t\t\t}\n\t\t\tthis.functionString = webGlRegexOptimize(this.functionStringArray.join('').trim());\n\t\t\treturn this.functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astFunctionDeclaration\n   *\n   * @desc Parses the abstract syntax tree for to its *named function declaration*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astFunctionDeclaration',\n\t\tvalue: function astFunctionDeclaration(ast, retArr) {\n\t\t\tthis.builder.addFunction(null, utils.getAstString(this.jsFunctionString, ast));\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astFunctionPrototype\n   * @static\n   *\n   * @desc Parses the abstract syntax tree for to its *named function prototype*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astFunctionPrototype',\n\t\tvalue: function astFunctionPrototype(ast, retArr) {\n\t\t\t// Setup function return type and name\n\t\t\tif (this.isRootKernel || this.isSubKernel) {\n\t\t\t\treturn retArr;\n\t\t\t}\n\n\t\t\tvar returnType = this.returnType;\n\t\t\tvar type = typeMap[returnType];\n\t\t\tif (!type) {\n\t\t\t\tthrow new Error('unknown type ' + returnType);\n\t\t\t}\n\t\t\tretArr.push(type);\n\t\t\tretArr.push(' ');\n\t\t\tretArr.push(this.functionName);\n\t\t\tretArr.push('(');\n\n\t\t\t// Arguments handling\n\t\t\tfor (var i = 0; i < this.paramNames.length; ++i) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(', ');\n\t\t\t\t}\n\n\t\t\t\tretArr.push(this.paramTypes[i]);\n\t\t\t\tretArr.push(' ');\n\t\t\t\tretArr.push('user_');\n\t\t\t\tretArr.push(this.paramNames[i]);\n\t\t\t}\n\n\t\t\tretArr.push(');\\n');\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astFunctionExpression\n   *\n   * @desc Parses the abstract syntax tree for to its *named function*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astFunctionExpression',\n\t\tvalue: function astFunctionExpression(ast, retArr) {\n\n\t\t\t// Setup function return type and name\n\t\t\tif (this.isRootKernel) {\n\t\t\t\tretArr.push('void');\n\t\t\t} else {\n\t\t\t\tvar returnType = this.returnType;\n\t\t\t\tvar type = typeMap[returnType];\n\t\t\t\tif (!type) {\n\t\t\t\t\tthrow new Error('unknown type ' + returnType);\n\t\t\t\t}\n\t\t\t\tretArr.push(type);\n\t\t\t}\n\t\t\tretArr.push(' ');\n\t\t\tretArr.push(this.functionName);\n\t\t\tretArr.push('(');\n\n\t\t\tif (!this.isRootKernel) {\n\t\t\t\t// Arguments handling\n\t\t\t\tfor (var i = 0; i < this.paramNames.length; ++i) {\n\t\t\t\t\tvar paramName = this.paramNames[i];\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tretArr.push(', ');\n\t\t\t\t\t}\n\t\t\t\t\tvar paramType = this.getParamType(paramName);\n\t\t\t\t\tvar _type = typeMap[paramType];\n\t\t\t\t\tif (!_type) {\n\t\t\t\t\t\tthrow new Error('unknown type ' + paramType);\n\t\t\t\t\t}\n\t\t\t\t\tretArr.push(_type);\n\t\t\t\t\tretArr.push(' ');\n\t\t\t\t\tretArr.push('user_');\n\t\t\t\t\tretArr.push(paramName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Function opening\n\t\t\tretArr.push(') {\\n');\n\n\t\t\t// Body statement iteration\n\t\t\tfor (var _i = 0; _i < ast.body.body.length; ++_i) {\n\t\t\t\tthis.astGeneric(ast.body.body[_i], retArr);\n\t\t\t\tretArr.push('\\n');\n\t\t\t}\n\n\t\t\t// Function closing\n\t\t\tretArr.push('}\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astReturnStatement\n   *\n   * @desc Parses the abstract syntax tree for to *return* statement\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astReturnStatement',\n\t\tvalue: function astReturnStatement(ast, retArr) {\n\t\t\tif (this.isRootKernel) {\n\t\t\t\tretArr.push('kernelResult = ');\n\t\t\t\tthis.astGeneric(ast.argument, retArr);\n\t\t\t\tretArr.push(';');\n\t\t\t\tretArr.push('return;');\n\t\t\t} else if (this.isSubKernel) {\n\t\t\t\tretArr.push(this.functionName + 'Result = ');\n\t\t\t\tthis.astGeneric(ast.argument, retArr);\n\t\t\t\tretArr.push(';');\n\t\t\t\tretArr.push('return ' + this.functionName + 'Result;');\n\t\t\t} else {\n\t\t\t\tretArr.push('return ');\n\t\t\t\tthis.astGeneric(ast.argument, retArr);\n\t\t\t\tretArr.push(';');\n\t\t\t}\n\n\t\t\t//throw this.astErrorOutput(\n\t\t\t//\t'Non main function return, is not supported : '+this.currentFunctionNamespace,\n\t\t\t//\tast\n\t\t\t//);\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astLiteral\n   *\n   * @desc Parses the abstract syntax tree for *literal value*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astLiteral',\n\t\tvalue: function astLiteral(ast, retArr) {\n\n\t\t\t// Reject non numeric literals\n\t\t\tif (isNaN(ast.value)) {\n\t\t\t\tthrow this.astErrorOutput('Non-numeric literal not supported : ' + ast.value, ast);\n\t\t\t}\n\n\t\t\t// Push the literal value as a float/int\n\t\t\tretArr.push(ast.value);\n\n\t\t\tvar inGetParams = this.isState('in-get-call-parameters');\n\t\t\t// If it was an int, node made a float if necessary\n\t\t\tif (Number.isInteger(ast.value)) {\n\t\t\t\tif (!inGetParams) {\n\t\t\t\t\tretArr.push('.0');\n\t\t\t\t}\n\t\t\t} else if (inGetParams) {\n\t\t\t\t// or cast to an int as we are addressing an input array\n\t\t\t\tretArr.pop();\n\t\t\t\tretArr.push('int(');\n\t\t\t\tretArr.push(ast.value);\n\t\t\t\tretArr.push(')');\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astBinaryExpression\n   *\n   * @desc Parses the abstract syntax tree for *binary* expression\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astBinaryExpression',\n\t\tvalue: function astBinaryExpression(ast, retArr) {\n\t\t\tvar inGetParams = this.isState('in-get-call-parameters');\n\t\t\tif (inGetParams) {\n\t\t\t\tthis.pushState('not-in-get-call-parameters');\n\t\t\t\tretArr.push('int');\n\t\t\t}\n\t\t\tretArr.push('(');\n\n\t\t\tif (ast.operator === '%') {\n\t\t\t\tretArr.push('mod(');\n\t\t\t\tthis.astGeneric(ast.left, retArr);\n\t\t\t\tretArr.push(',');\n\t\t\t\tthis.astGeneric(ast.right, retArr);\n\t\t\t\tretArr.push(')');\n\t\t\t} else if (ast.operator === '===') {\n\t\t\t\tthis.astGeneric(ast.left, retArr);\n\t\t\t\tretArr.push('==');\n\t\t\t\tthis.astGeneric(ast.right, retArr);\n\t\t\t} else if (ast.operator === '!==') {\n\t\t\t\tthis.astGeneric(ast.left, retArr);\n\t\t\t\tretArr.push('!=');\n\t\t\t\tthis.astGeneric(ast.right, retArr);\n\t\t\t} else if (this.fixIntegerDivisionAccuracy && ast.operator === '/') {\n\t\t\t\tretArr.push('div_with_int_check(');\n\t\t\t\tthis.astGeneric(ast.left, retArr);\n\t\t\t\tretArr.push(', ');\n\t\t\t\tthis.astGeneric(ast.right, retArr);\n\t\t\t\tretArr.push(')');\n\t\t\t} else {\n\t\t\t\tthis.astGeneric(ast.left, retArr);\n\t\t\t\tretArr.push(ast.operator);\n\t\t\t\tthis.astGeneric(ast.right, retArr);\n\t\t\t}\n\n\t\t\tretArr.push(')');\n\n\t\t\tif (inGetParams) {\n\t\t\t\tthis.popState('not-in-get-call-parameters');\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astIdentifierExpression\n   *\n   * @desc Parses the abstract syntax tree for *identifier* expression\n   *\n   * @param {Object} idtNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astIdentifierExpression',\n\t\tvalue: function astIdentifierExpression(idtNode, retArr) {\n\t\t\tif (idtNode.type !== 'Identifier') {\n\t\t\t\tthrow this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n\t\t\t}\n\t\t\t// do we need to cast addressing vales to float?\n\t\t\tvar castFloat = !this.isState('in-get-call-parameters');\n\n\t\t\tswitch (idtNode.name) {\n\t\t\t\tcase 'gpu_threadX':\n\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\tretArr.push('threadId.x');\n\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadY':\n\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\tretArr.push('threadId.y');\n\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadZ':\n\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\tretArr.push('threadId.z');\n\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputX':\n\t\t\t\t\tretArr.push('uOutputDim.x');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputY':\n\t\t\t\t\tretArr.push('uOutputDim.y');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputZ':\n\t\t\t\t\tretArr.push('uOutputDim.z');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Infinity':\n\t\t\t\t\t// https://stackoverflow.com/a/47543127/1324039\n\t\t\t\t\tretArr.push('3.402823466e+38');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tvar userParamName = this.getUserParamName(idtNode.name);\n\t\t\t\t\tif (userParamName !== null) {\n\t\t\t\t\t\tthis.pushParameter(retArr, 'user_' + userParamName);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.pushParameter(retArr, 'user_' + idtNode.name);\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astForStatement\n   *\n   * @desc Parses the abstract syntax tree forfor *for-loop* expression\n   *\n   * @param {Object} forNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed webgl string\n   */\n\n\t}, {\n\t\tkey: 'astForStatement',\n\t\tvalue: function astForStatement(forNode, retArr) {\n\t\t\tif (forNode.type !== 'ForStatement') {\n\t\t\t\tthrow this.astErrorOutput('Invalid for statment', forNode);\n\t\t\t}\n\n\t\t\tif (forNode.test && forNode.test.type === 'BinaryExpression') {\n\t\t\t\tif (forNode.test.right.type === 'Identifier' && forNode.test.operator === '<' && this.isIdentifierConstant(forNode.test.right.name) === false) {\n\n\t\t\t\t\tif (!this.loopMaxIterations) {\n\t\t\t\t\t\tconsole.warn('Warning: loopMaxIterations is not set! Using default of 1000 which may result in unintended behavior.');\n\t\t\t\t\t\tconsole.warn('Set loopMaxIterations or use a for loop of fixed length to silence this message.');\n\t\t\t\t\t}\n\n\t\t\t\t\tretArr.push('for (');\n\t\t\t\t\tthis.astGeneric(forNode.init, retArr);\n\t\t\t\t\tthis.astGeneric(forNode.test.left, retArr);\n\t\t\t\t\tretArr.push(forNode.test.operator);\n\t\t\t\t\tretArr.push('LOOP_MAX');\n\t\t\t\t\tretArr.push(';');\n\t\t\t\t\tthis.astGeneric(forNode.update, retArr);\n\t\t\t\t\tretArr.push(')');\n\n\t\t\t\t\tretArr.push('{\\n');\n\t\t\t\t\tretArr.push('if (');\n\t\t\t\t\tthis.astGeneric(forNode.test.left, retArr);\n\t\t\t\t\tretArr.push(forNode.test.operator);\n\t\t\t\t\tthis.astGeneric(forNode.test.right, retArr);\n\t\t\t\t\tretArr.push(') {\\n');\n\t\t\t\t\tif (forNode.body.type === 'BlockStatement') {\n\t\t\t\t\t\tfor (var i = 0; i < forNode.body.body.length; i++) {\n\t\t\t\t\t\t\tthis.astGeneric(forNode.body.body[i], retArr);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.astGeneric(forNode.body, retArr);\n\t\t\t\t\t}\n\t\t\t\t\tretArr.push('\\n} else {\\n');\n\t\t\t\t\tretArr.push('break;\\n');\n\t\t\t\t\tretArr.push('}\\n');\n\t\t\t\t\tretArr.push('}\\n');\n\n\t\t\t\t\treturn retArr;\n\t\t\t\t} else {\n\t\t\t\t\tvar declarations = JSON.parse(JSON.stringify(forNode.init.declarations));\n\t\t\t\t\tvar updateArgument = forNode.update.argument;\n\t\t\t\t\tif (!Array.isArray(declarations) || declarations.length < 1) {\n\t\t\t\t\t\tdebugLog(this.jsFunctionString);\n\t\t\t\t\t\tthrow new Error('Error: Incompatible for loop declaration');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (declarations.length > 1) {\n\t\t\t\t\t\tvar initArgument = null;\n\t\t\t\t\t\tfor (var _i2 = 0; _i2 < declarations.length; _i2++) {\n\t\t\t\t\t\t\tvar declaration = declarations[_i2];\n\t\t\t\t\t\t\tif (declaration.id.name === updateArgument.name) {\n\t\t\t\t\t\t\t\tinitArgument = declaration;\n\t\t\t\t\t\t\t\tdeclarations.splice(_i2, 1);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tretArr.push('float ');\n\t\t\t\t\t\t\t\tthis.astGeneric(declaration, retArr);\n\t\t\t\t\t\t\t\tretArr.push(';');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tretArr.push('for (float ');\n\t\t\t\t\t\tthis.astGeneric(initArgument, retArr);\n\t\t\t\t\t\tretArr.push(';');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tretArr.push('for (');\n\t\t\t\t\t\tthis.astGeneric(forNode.init, retArr);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.astGeneric(forNode.test, retArr);\n\t\t\t\t\tretArr.push(';');\n\t\t\t\t\tthis.astGeneric(forNode.update, retArr);\n\t\t\t\t\tretArr.push(')');\n\t\t\t\t\tthis.astGeneric(forNode.body, retArr);\n\t\t\t\t\treturn retArr;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow this.astErrorOutput('Invalid for statement', forNode);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astWhileStatement\n   *\n   * @desc Parses the abstract syntax tree for *while* loop\n   *\n   *\n   * @param {Object} whileNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed webgl string\n   */\n\n\t}, {\n\t\tkey: 'astWhileStatement',\n\t\tvalue: function astWhileStatement(whileNode, retArr) {\n\t\t\tif (whileNode.type !== 'WhileStatement') {\n\t\t\t\tthrow this.astErrorOutput('Invalid while statment', whileNode);\n\t\t\t}\n\n\t\t\tretArr.push('for (float i = 0.0; i < LOOP_MAX; i++) {');\n\t\t\tretArr.push('if (');\n\t\t\tthis.astGeneric(whileNode.test, retArr);\n\t\t\tretArr.push(') {\\n');\n\t\t\tthis.astGeneric(whileNode.body, retArr);\n\t\t\tretArr.push('} else {\\n');\n\t\t\tretArr.push('break;\\n');\n\t\t\tretArr.push('}\\n');\n\t\t\tretArr.push('}\\n');\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astWhileStatement\n   *\n   * @desc Parses the abstract syntax tree for *do while* loop\n   *\n   *\n   * @param {Object} doWhileNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed webgl string\n   */\n\n\t}, {\n\t\tkey: 'astDoWhileStatement',\n\t\tvalue: function astDoWhileStatement(doWhileNode, retArr) {\n\t\t\tif (doWhileNode.type !== 'DoWhileStatement') {\n\t\t\t\tthrow this.astErrorOutput('Invalid while statment', doWhileNode);\n\t\t\t}\n\n\t\t\tretArr.push('for (float i = 0.0; i < LOOP_MAX; i++) {');\n\t\t\tthis.astGeneric(doWhileNode.body, retArr);\n\t\t\tretArr.push('if (!');\n\t\t\tthis.astGeneric(doWhileNode.test, retArr);\n\t\t\tretArr.push(') {\\n');\n\t\t\tretArr.push('break;\\n');\n\t\t\tretArr.push('}\\n');\n\t\t\tretArr.push('}\\n');\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astAssignmentExpression\n   *\n   * @desc Parses the abstract syntax tree for *Assignment* Expression\n   *\n   * @param {Object} assNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astAssignmentExpression',\n\t\tvalue: function astAssignmentExpression(assNode, retArr) {\n\t\t\tif (assNode.operator === '%=') {\n\t\t\t\tthis.astGeneric(assNode.left, retArr);\n\t\t\t\tretArr.push('=');\n\t\t\t\tretArr.push('mod(');\n\t\t\t\tthis.astGeneric(assNode.left, retArr);\n\t\t\t\tretArr.push(',');\n\t\t\t\tthis.astGeneric(assNode.right, retArr);\n\t\t\t\tretArr.push(')');\n\t\t\t} else {\n\t\t\t\tthis.astGeneric(assNode.left, retArr);\n\t\t\t\tretArr.push(assNode.operator);\n\t\t\t\tthis.astGeneric(assNode.right, retArr);\n\t\t\t\treturn retArr;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astEmptyStatement\n   *\n   * @desc Parses the abstract syntax tree for an *Empty* Statement\n   *\n   * @param {Object} eNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astEmptyStatement',\n\t\tvalue: function astEmptyStatement(eNode, retArr) {\n\t\t\t//retArr.push(';\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astBlockStatement\n   *\n   * @desc Parses the abstract syntax tree for *Block* statement\n   *\n   * @param {Object} bNode - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astBlockStatement',\n\t\tvalue: function astBlockStatement(bNode, retArr) {\n\t\t\tretArr.push('{\\n');\n\t\t\tfor (var i = 0; i < bNode.body.length; i++) {\n\t\t\t\tthis.astGeneric(bNode.body[i], retArr);\n\t\t\t}\n\t\t\tretArr.push('}\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astExpressionStatement\n   *\n   * @desc Parses the abstract syntax tree for *generic expression* statement\n   *\n   * @param {Object} esNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astExpressionStatement',\n\t\tvalue: function astExpressionStatement(esNode, retArr) {\n\t\t\tthis.astGeneric(esNode.expression, retArr);\n\t\t\tretArr.push(';');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astVariableDeclaration\n   *\n   * @desc Parses the abstract syntax tree for *Variable Declaration*\n   *\n   * @param {Object} vardecNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astVariableDeclaration',\n\t\tvalue: function astVariableDeclaration(vardecNode, retArr) {\n\t\t\tfor (var i = 0; i < vardecNode.declarations.length; i++) {\n\t\t\t\tvar declaration = vardecNode.declarations[i];\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(',');\n\t\t\t\t}\n\t\t\t\tvar retDeclaration = [];\n\t\t\t\tthis.astGeneric(declaration, retDeclaration);\n\t\t\t\tvar declarationType = 'Number';\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tvar init = declaration.init;\n\t\t\t\t\tif (init) {\n\t\t\t\t\t\tif (init.object) {\n\t\t\t\t\t\t\tif (init.object.type === 'MemberExpression' && init.object.object) {\n\t\t\t\t\t\t\t\t// this.thread.x, this.thread.y, this.thread.z\n\t\t\t\t\t\t\t\tif (init.object.object.type === 'ThisExpression' && init.object.property && (init.object.property.name === 'thread' || init.object.property.name === 'output')) {\n\t\t\t\t\t\t\t\t\tdeclarationType = 'Integer';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// param[]\n\t\t\t\t\t\t\t\telse if (init.object.object.type === 'Identifier') {\n\t\t\t\t\t\t\t\t\t\tvar _type2 = this.getParamType(init.object.object.name);\n\t\t\t\t\t\t\t\t\t\tdeclarationType = typeLookupMap[_type2];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// param[][]\n\t\t\t\t\t\t\t\t\telse if (init.object.object.object && init.object.object.object.type === 'Identifier') {\n\t\t\t\t\t\t\t\t\t\t\tvar _type3 = this.getParamType(init.object.object.object.name);\n\t\t\t\t\t\t\t\t\t\t\tdeclarationType = typeLookupMap[_type3];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// this.constants.param[]\n\t\t\t\t\t\t\t\t\t\telse if (init.object.object.object && init.object.object.object.object && init.object.object.object.object.type === 'ThisExpression' && init.object.object.object.property.name === 'constants') {\n\t\t\t\t\t\t\t\t\t\t\t\tvar _type4 = this.getConstantType(init.object.object.property.name);\n\t\t\t\t\t\t\t\t\t\t\t\tdeclarationType = typeLookupMap[_type4];\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t// this.constants.param[][]\n\t\t\t\t\t\t\t\t\t\t\telse if (init.object.object.object && init.object.object.object.object && init.object.object.object.object.object && init.object.object.object.object.object.type === 'ThisExpression' && init.object.object.object.object.property.name === 'constants') {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar _type5 = this.getConstantType(init.object.object.object.property.name);\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeclarationType = typeLookupMap[_type5];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!declarationType) {\n\t\t\t\t\t\t\t\tthrow new Error('unknown lookup type ' + typeLookupMap);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (init.name && this.declarations[init.name]) {\n\t\t\t\t\t\t\t\tdeclarationType = this.declarations[init.name];\n\t\t\t\t\t\t\t} else if (init.type === 'ArrayExpression') {\n\t\t\t\t\t\t\t\tdeclarationType = 'Array(' + init.elements.length + ')';\n\t\t\t\t\t\t\t} else if (init.type === 'CallExpression') {\n\t\t\t\t\t\t\t\tvar node = this.builder.nodeMap[init.callee.name];\n\t\t\t\t\t\t\t\tif (node && node.returnType) {\n\t\t\t\t\t\t\t\t\tdeclarationType = node.returnType;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar type = typeMap[declarationType];\n\t\t\t\t\tif (!type) {\n\t\t\t\t\t\tthrow new Error('type ' + declarationType + ' not handled');\n\t\t\t\t\t}\n\t\t\t\t\tretArr.push(type + ' ');\n\t\t\t\t}\n\t\t\t\tthis.declarations[declaration.id.name] = declarationType;\n\t\t\t\tretArr.push.apply(retArr, retDeclaration);\n\t\t\t}\n\t\t\tretArr.push(';');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astVariableDeclarator\n   *\n   * @desc Parses the abstract syntax tree for *Variable Declarator*\n   *\n   * @param {Object} ivardecNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astVariableDeclarator',\n\t\tvalue: function astVariableDeclarator(ivardecNode, retArr) {\n\t\t\tthis.astGeneric(ivardecNode.id, retArr);\n\t\t\tif (ivardecNode.init !== null) {\n\t\t\t\tretArr.push('=');\n\t\t\t\tthis.astGeneric(ivardecNode.init, retArr);\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astIfStatement\n   *\n   * @desc Parses the abstract syntax tree for *If* Statement\n   *\n   * @param {Object} ifNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astIfStatement',\n\t\tvalue: function astIfStatement(ifNode, retArr) {\n\t\t\tretArr.push('if (');\n\t\t\tthis.astGeneric(ifNode.test, retArr);\n\t\t\tretArr.push(')');\n\t\t\tif (ifNode.consequent.type === 'BlockStatement') {\n\t\t\t\tthis.astGeneric(ifNode.consequent, retArr);\n\t\t\t} else {\n\t\t\t\tretArr.push(' {\\n');\n\t\t\t\tthis.astGeneric(ifNode.consequent, retArr);\n\t\t\t\tretArr.push('\\n}\\n');\n\t\t\t}\n\n\t\t\tif (ifNode.alternate) {\n\t\t\t\tretArr.push('else ');\n\t\t\t\tif (ifNode.alternate.type === 'BlockStatement') {\n\t\t\t\t\tthis.astGeneric(ifNode.alternate, retArr);\n\t\t\t\t} else {\n\t\t\t\t\tretArr.push(' {\\n');\n\t\t\t\t\tthis.astGeneric(ifNode.alternate, retArr);\n\t\t\t\t\tretArr.push('\\n}\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astBreakStatement\n   *\n   * @desc Parses the abstract syntax tree for *Break* Statement\n   *\n   * @param {Object} brNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astBreakStatement',\n\t\tvalue: function astBreakStatement(brNode, retArr) {\n\t\t\tretArr.push('break;\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astContinueStatement\n   *\n   * @desc Parses the abstract syntax tree for *Continue* Statement\n   *\n   * @param {Object} crNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astContinueStatement',\n\t\tvalue: function astContinueStatement(crNode, retArr) {\n\t\t\tretArr.push('continue;\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astLogicalExpression\n   *\n   * @desc Parses the abstract syntax tree for *Logical* Expression\n   *\n   * @param {Object} logNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astLogicalExpression',\n\t\tvalue: function astLogicalExpression(logNode, retArr) {\n\t\t\tretArr.push('(');\n\t\t\tthis.astGeneric(logNode.left, retArr);\n\t\t\tretArr.push(logNode.operator);\n\t\t\tthis.astGeneric(logNode.right, retArr);\n\t\t\tretArr.push(')');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astUpdateExpression\n   *\n   * @desc Parses the abstract syntax tree for *Update* Expression\n   *\n   * @param {Object} uNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astUpdateExpression',\n\t\tvalue: function astUpdateExpression(uNode, retArr) {\n\t\t\tif (uNode.prefix) {\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t} else {\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astUnaryExpression\n   *\n   * @desc Parses the abstract syntax tree for *Unary* Expression\n   *\n   * @param {Object} uNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astUnaryExpression',\n\t\tvalue: function astUnaryExpression(uNode, retArr) {\n\t\t\tif (uNode.prefix) {\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t} else {\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astThisExpression\n   *\n   * @desc Parses the abstract syntax tree for *This* expression\n   *\n   * @param {Object} tNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astThisExpression',\n\t\tvalue: function astThisExpression(tNode, retArr) {\n\t\t\tretArr.push('this');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astMemberExpression\n   *\n   * @desc Parses the abstract syntax tree for *Member* Expression\n   *\n   * @param {Object} mNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astMemberExpression',\n\t\tvalue: function astMemberExpression(mNode, retArr) {\n\t\t\tdebugLog(\"[in] astMemberExpression \" + mNode.object.type);\n\t\t\tif (mNode.computed) {\n\t\t\t\tif (mNode.object.type === 'Identifier' || mNode.object.type === 'MemberExpression' &&\n\t\t\t\t// mNode.object.object &&\n\t\t\t\tmNode.object.object.object && mNode.object.object.object.type === 'ThisExpression' && mNode.object.object.property.name === 'constants') {\n\t\t\t\t\t// Working logger\n\t\t\t\t\tvar reqName = mNode.object.name;\n\t\t\t\t\tvar funcName = this.functionName || 'kernel';\n\t\t\t\t\tvar assumeNotTexture = false;\n\n\t\t\t\t\t// Possibly an array request - handle it as such\n\t\t\t\t\tif (this.paramNames) {\n\t\t\t\t\t\tvar idx = this.paramNames.indexOf(reqName);\n\t\t\t\t\t\tif (idx >= 0 && this.paramTypes[idx] === 'Number') {\n\t\t\t\t\t\t\tassumeNotTexture = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdebugLog(\"- astMemberExpression \" + reqName + \" \" + funcName);\n\t\t\t\t\tif (assumeNotTexture) {\n\t\t\t\t\t\t// Get from array\n\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\tretArr.push('[int(');\n\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\tretArr.push(')]');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar isInGetParams = this.isState('in-get-call-parameters');\n\t\t\t\t\t\tvar multiMemberExpression = this.isState('multi-member-expression');\n\t\t\t\t\t\tif (multiMemberExpression) {\n\t\t\t\t\t\t\tthis.popState('multi-member-expression');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.pushState('not-in-get-call-parameters');\n\n\t\t\t\t\t\t// This normally refers to the global read only input vars\n\t\t\t\t\t\tvar variableType = null;\n\t\t\t\t\t\tif (mNode.object.name) {\n\t\t\t\t\t\t\tif (this.declarations[mNode.object.name]) {\n\t\t\t\t\t\t\t\tvariableType = this.declarations[mNode.object.name];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvariableType = this.getParamType(mNode.object.name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (mNode.object && mNode.object.object && mNode.object.object.object && mNode.object.object.object.type === 'ThisExpression') {\n\t\t\t\t\t\t\tvariableType = this.getConstantType(mNode.object.property.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tswitch (variableType) {\n\t\t\t\t\t\t\tcase 'Array(2)':\n\t\t\t\t\t\t\tcase 'Array(3)':\n\t\t\t\t\t\t\tcase 'Array(4)':\n\t\t\t\t\t\t\t\t// Get from local vec4\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('[');\n\t\t\t\t\t\t\t\tretArr.push(mNode.property.raw);\n\t\t\t\t\t\t\t\tretArr.push(']');\n\t\t\t\t\t\t\t\tif (multiMemberExpression) {\n\t\t\t\t\t\t\t\t\tthis.popState('not-in-get-call-parameters');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'HTMLImageArray':\n\t\t\t\t\t\t\t\t// Get from image\n\t\t\t\t\t\t\t\tretArr.push('getImage3D(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push(', ivec2(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Size[0],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Size[1]), ivec3(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[0],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[1],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[2]');\n\t\t\t\t\t\t\t\tretArr.push('), ');\n\t\t\t\t\t\t\t\tthis.popState('not-in-get-call-parameters');\n\t\t\t\t\t\t\t\tthis.pushState('in-get-call-parameters');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\t\t\tif (!multiMemberExpression) {\n\t\t\t\t\t\t\t\t\tthis.popState('in-get-call-parameters');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tretArr.push(')');\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'ArrayTexture(4)':\n\t\t\t\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t\t\t\t// Get from image\n\t\t\t\t\t\t\t\tretArr.push('getImage2D(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push(', ivec2(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Size[0],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Size[1]), ivec3(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[0],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[1],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[2]');\n\t\t\t\t\t\t\t\tretArr.push('), ');\n\t\t\t\t\t\t\t\tthis.popState('not-in-get-call-parameters');\n\t\t\t\t\t\t\t\tthis.pushState('in-get-call-parameters');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\t\t\tif (!multiMemberExpression) {\n\t\t\t\t\t\t\t\t\tthis.popState('in-get-call-parameters');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tretArr.push(')');\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t// Get from texture\n\t\t\t\t\t\t\t\tif (isInGetParams) {\n\t\t\t\t\t\t\t\t\tretArr.push('int(');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tretArr.push('get(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push(', ivec2(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Size[0],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Size[1]), ivec3(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[0],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[1],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[2]');\n\t\t\t\t\t\t\t\tretArr.push('), ');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('BitRatio');\n\t\t\t\t\t\t\t\tretArr.push(', ');\n\t\t\t\t\t\t\t\tthis.popState('not-in-get-call-parameters');\n\t\t\t\t\t\t\t\tthis.pushState('in-get-call-parameters');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\t\t\tif (!multiMemberExpression) {\n\t\t\t\t\t\t\t\t\tthis.popState('in-get-call-parameters');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tretArr.push(')');\n\t\t\t\t\t\t\t\tif (isInGetParams) {\n\t\t\t\t\t\t\t\t\tretArr.push(')');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\n\t\t\t\t\tdebugLog(\"- astMemberExpression obj:\", mNode.object);\n\t\t\t\t\tvar stateStackDepth = this.states.length;\n\t\t\t\t\tvar startedInGetParamsState = this.isState('in-get-call-parameters');\n\t\t\t\t\tif (!startedInGetParamsState) {\n\t\t\t\t\t\tthis.pushState('multi-member-expression');\n\t\t\t\t\t}\n\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\tif (this.isState('multi-member-expression')) {\n\t\t\t\t\t\tthis.popState('multi-member-expression');\n\t\t\t\t\t}\n\t\t\t\t\tvar changedGetParamsState = !startedInGetParamsState && this.isState('in-get-call-parameters');\n\t\t\t\t\tvar last = retArr.pop();\n\t\t\t\t\tretArr.push(',');\n\t\t\t\t\tdebugLog(\"- astMemberExpression prop:\", mNode.property);\n\t\t\t\t\tvar shouldPopParamState = this.isState('should-pop-in-get-call-parameters');\n\t\t\t\t\tif (shouldPopParamState) {\n\t\t\t\t\t\t// go back to in-get-call-parameters state\n\t\t\t\t\t\tthis.popState('should-pop-in-get-call-parameters');\n\t\t\t\t\t}\n\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\tretArr.push(last);\n\n\t\t\t\t\tif (changedGetParamsState) {\n\t\t\t\t\t\t// calling memberExpression should pop...\n\t\t\t\t\t\tthis.pushState('should-pop-in-get-call-parameters');\n\t\t\t\t\t} else if (shouldPopParamState) {\n\t\t\t\t\t\t// do the popping!\n\t\t\t\t\t\tthis.popState('in-get-call-parameters');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Unroll the member expression\n\t\t\t\tvar unrolled = this.astMemberExpressionUnroll(mNode);\n\t\t\t\tvar unrolled_lc = unrolled.toLowerCase();\n\t\t\t\tdebugLog(\"- astMemberExpression unrolled:\", unrolled);\n\t\t\t\t// Its a constant, remove this.constants.\n\t\t\t\tif (unrolled.indexOf(constantsPrefix) === 0) {\n\t\t\t\t\tunrolled = 'constants_' + unrolled.slice(constantsPrefix.length);\n\t\t\t\t}\n\n\t\t\t\t// do we need to cast addressing vales to float?\n\t\t\t\tvar castFloat = !this.isState('in-get-call-parameters');\n\n\t\t\t\tswitch (unrolled_lc) {\n\t\t\t\t\tcase 'this.thread.x':\n\t\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\t\tretArr.push('threadId.x');\n\t\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'this.thread.y':\n\t\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\t\tretArr.push('threadId.y');\n\t\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'this.thread.z':\n\t\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\t\tretArr.push('threadId.z');\n\t\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'this.output.x':\n\t\t\t\t\t\tretArr.push(this.output[0] + '.0');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'this.output.y':\n\t\t\t\t\t\tretArr.push(this.output[1] + '.0');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'this.output.z':\n\t\t\t\t\t\tretArr.push(this.output[2] + '.0');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (mNode.object && mNode.object.name && this.declarations[mNode.object.name]) {\n\t\t\t\t\t\t\tretArr.push('user_');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tretArr.push(unrolled);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdebugLog(\"[out] astMemberExpression \" + mNode.object.type);\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astSequenceExpression',\n\t\tvalue: function astSequenceExpression(sNode, retArr) {\n\t\t\tfor (var i = 0; i < sNode.expressions.length; i++) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(',');\n\t\t\t\t}\n\t\t\t\tthis.astGeneric(sNode.expressions, retArr);\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astCallExpression\n   *\n   * @desc Parses the abstract syntax tree for *call* expression\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns  {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astCallExpression',\n\t\tvalue: function astCallExpression(ast, retArr) {\n\t\t\tif (ast.callee) {\n\t\t\t\t// Get the full function call, unrolled\n\t\t\t\tvar funcName = this.astMemberExpressionUnroll(ast.callee);\n\n\t\t\t\t// Its a math operator, remove the prefix\n\t\t\t\tif (funcName.indexOf(jsMathPrefix) === 0) {\n\t\t\t\t\tfuncName = funcName.slice(jsMathPrefix.length);\n\t\t\t\t}\n\n\t\t\t\t// Its a local function, remove this\n\t\t\t\tif (funcName.indexOf(localPrefix) === 0) {\n\t\t\t\t\tfuncName = funcName.slice(localPrefix.length);\n\t\t\t\t}\n\n\t\t\t\t// if this if grows to more than one, lets use a switch\n\t\t\t\tif (funcName === 'atan2') {\n\t\t\t\t\tfuncName = 'atan';\n\t\t\t\t}\n\n\t\t\t\t// Register the function into the called registry\n\t\t\t\tif (this.calledFunctions.indexOf(funcName) < 0) {\n\t\t\t\t\tthis.calledFunctions.push(funcName);\n\t\t\t\t}\n\t\t\t\tif (!this.hasOwnProperty('funcName')) {\n\t\t\t\t\tthis.calledFunctionsArguments[funcName] = [];\n\t\t\t\t}\n\n\t\t\t\tvar functionArguments = [];\n\t\t\t\tthis.calledFunctionsArguments[funcName].push(functionArguments);\n\n\t\t\t\t// Call the function\n\t\t\t\tretArr.push(funcName);\n\n\t\t\t\t// Open arguments space\n\t\t\t\tretArr.push('(');\n\n\t\t\t\t// Add the vars\n\t\t\t\tfor (var i = 0; i < ast.arguments.length; ++i) {\n\t\t\t\t\tvar argument = ast.arguments[i];\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tretArr.push(', ');\n\t\t\t\t\t}\n\t\t\t\t\tthis.astGeneric(argument, retArr);\n\t\t\t\t\tif (argument.type === 'Identifier') {\n\t\t\t\t\t\tvar paramIndex = this.paramNames.indexOf(argument.name);\n\t\t\t\t\t\tif (paramIndex === -1) {\n\t\t\t\t\t\t\tfunctionArguments.push(null);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfunctionArguments.push({\n\t\t\t\t\t\t\t\tname: argument.name,\n\t\t\t\t\t\t\t\ttype: this.paramTypes[paramIndex] || 'Number'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfunctionArguments.push(null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Close arguments space\n\t\t\t\tretArr.push(')');\n\n\t\t\t\treturn retArr;\n\t\t\t}\n\n\t\t\t// Failure, unknown expression\n\t\t\tthrow this.astErrorOutput('Unknown CallExpression', ast);\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astArrayExpression\n   *\n   * @desc Parses the abstract syntax tree for *Array* Expression\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astArrayExpression',\n\t\tvalue: function astArrayExpression(arrNode, retArr) {\n\t\t\tvar arrLen = arrNode.elements.length;\n\n\t\t\tretArr.push('vec' + arrLen + '(');\n\t\t\tfor (var i = 0; i < arrLen; ++i) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(', ');\n\t\t\t\t}\n\t\t\t\tvar subNode = arrNode.elements[i];\n\t\t\t\tthis.astGeneric(subNode, retArr);\n\t\t\t}\n\t\t\tretArr.push(')');\n\n\t\t\treturn retArr;\n\n\t\t\t// // Failure, unknown expression\n\t\t\t// throw this.astErrorOutput(\n\t\t\t// \t'Unknown  ArrayExpression',\n\t\t\t// \tarrNode\n\t\t\t//);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name getFunctionPrototypeString\n   *\n   * @desc Returns the converted webgl shader function equivalent of the JS function\n   *\n   * @returns {String} webgl function string, result is cached under this.getFunctionPrototypeString\n   *\n   */\n\n\t}, {\n\t\tkey: 'getFunctionPrototypeString',\n\t\tvalue: function getFunctionPrototypeString() {\n\t\t\tif (this.webGlFunctionPrototypeString) {\n\t\t\t\treturn this.webGlFunctionPrototypeString;\n\t\t\t}\n\t\t\treturn this.webGlFunctionPrototypeString = this.generate();\n\t\t}\n\t}, {\n\t\tkey: 'build',\n\t\tvalue: function build() {\n\t\t\treturn this.getFunctionPrototypeString().length > 0;\n\t\t}\n\t}]);\n\n\treturn WebGLFunctionNode;\n}(FunctionNodeBase);\n\nvar typeMap = {\n\t'Array': 'sampler2D',\n\t'Array(2)': 'vec2',\n\t'Array(3)': 'vec3',\n\t'Array(4)': 'vec4',\n\t'Array2D': 'sampler2D',\n\t'Array3D': 'sampler2D',\n\t'Float': 'float',\n\t'Input': 'sampler2D',\n\t'Integer': 'float',\n\t'Number': 'float',\n\t'NumberTexture': 'sampler2D',\n\t'ArrayTexture(4)': 'sampler2D'\n};\n\nvar typeLookupMap = {\n\t'Array': 'Number',\n\t'Array2D': 'Number',\n\t'Array3D': 'Number',\n\t'HTMLImage': 'Array(4)',\n\t'HTMLImageArray': 'Array(4)',\n\t'NumberTexture': 'Number',\n\t'ArrayTexture(4)': 'Array(4)'\n};\n\n/**\n * @ignore\n * @function\n * @name webgl_regex_optimize\n *\n * @desc [INTERNAL] Takes the near final webgl function string, and do regex search and replacments.\n * For voodoo optimize out the following:\n *\n * - decode32(encode32( <br>\n * - encode32(decode32( <br>\n *\n * @param {String} inStr - The webGl function String\n *\n */\nfunction webGlRegexOptimize(inStr) {\n\treturn inStr.replace(DECODE32_ENCODE32, '((').replace(ENCODE32_DECODE32, '((');\n}","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FunctionBuilderBase = require('../function-builder-base');\nvar WebGLFunctionNode = require('./function-node');\n\n/**\n * @class WebGLFunctionBuilder\n *\n * @extends FunctionBuilderBase\n *\n * @desc Builds webGl functions (shaders) from JavaScript function Strings\n *\n */\nmodule.exports = function (_FunctionBuilderBase) {\n\t_inherits(WebGLFunctionBuilder, _FunctionBuilderBase);\n\n\tfunction WebGLFunctionBuilder() {\n\t\t_classCallCheck(this, WebGLFunctionBuilder);\n\n\t\tvar _this = _possibleConstructorReturn(this, (WebGLFunctionBuilder.__proto__ || Object.getPrototypeOf(WebGLFunctionBuilder)).call(this));\n\n\t\t_this.Node = WebGLFunctionNode;\n\t\treturn _this;\n\t}\n\n\t//---------------------------------------------------------\n\t//\n\t//  Polyfill stuff\n\t//\n\t//---------------------------------------------------------\n\n\t// Round function used in polyfill\n\n\n\t_createClass(WebGLFunctionBuilder, [{\n\t\tkey: 'polyfillStandardFunctions',\n\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name polyfillStandardFunctions\n   *\n   * @desc Polyfill in the missing Math functions (round)\n   *\n   */\n\t\tvalue: function polyfillStandardFunctions() {\n\t\t\tthis.addFunction('round', _round);\n\t\t}\n\t}], [{\n\t\tkey: 'round',\n\t\tvalue: function round(a) {\n\t\t\treturn _round(a);\n\t\t}\n\t}]);\n\n\treturn WebGLFunctionBuilder;\n}(FunctionBuilderBase);\n\nfunction _round(a) {\n\treturn Math.floor(a + 0.5);\n}","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RunnerBase = require('../runner-base');\nvar WebGLKernel = require('./kernel');\nvar WebGLFunctionBuilder = require('./function-builder');\n\nmodule.exports = function (_RunnerBase) {\n\t_inherits(WebGLRunner, _RunnerBase);\n\n\t/**\n  * @constructor WebGLRunner\n  *\n \t * @extends RunnerBase\n  \t * @desc Instantiates a Runner instance for the kernel.\n  * \n  * @param {Object} settings - Settings to instantiate properties in RunnerBase, with given values\n  *\n  */\n\tfunction WebGLRunner(settings) {\n\t\t_classCallCheck(this, WebGLRunner);\n\n\t\tvar _this = _possibleConstructorReturn(this, (WebGLRunner.__proto__ || Object.getPrototypeOf(WebGLRunner)).call(this, new WebGLFunctionBuilder(), settings));\n\n\t\t_this.Kernel = WebGLKernel;\n\t\t_this.kernel = null;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @memberOf WebGLRunner#\n  * @function\n  * @name getMode\n  *\n  * @desc Return the current mode in which gpu.js is executing.\n  * \n  * @returns {String} The current mode; \"cpu\".\n  *\n  */\n\n\n\t_createClass(WebGLRunner, [{\n\t\tkey: 'getMode',\n\t\tvalue: function getMode() {\n\t\t\treturn 'gpu';\n\t\t}\n\t}]);\n\n\treturn WebGLRunner;\n}(RunnerBase);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WebGLFunctionNode = require('../web-gl/function-node');\nvar DECODE32_ENCODE32 = /decode32\\(\\s+encode32\\(/g;\nvar ENCODE32_DECODE32 = /encode32\\(\\s+decode32\\(/g;\n\n/** \n * @class WebGL2FunctionNode\n *\n * @desc [INTERNAL] Takes in a function node, and does all the AST voodoo required to generate its respective webGL code.\n *\n * @extends WebGLFunctionNode\n *\n * @returns the converted webGL function string\n *\n */\nmodule.exports = function (_WebGLFunctionNode) {\n\t_inherits(WebGL2FunctionNode, _WebGLFunctionNode);\n\n\tfunction WebGL2FunctionNode() {\n\t\t_classCallCheck(this, WebGL2FunctionNode);\n\n\t\treturn _possibleConstructorReturn(this, (WebGL2FunctionNode.__proto__ || Object.getPrototypeOf(WebGL2FunctionNode)).apply(this, arguments));\n\t}\n\n\t_createClass(WebGL2FunctionNode, [{\n\t\tkey: 'generate',\n\t\tvalue: function generate() {\n\t\t\tif (this.debug) {\n\t\t\t\tconsole.log(this);\n\t\t\t}\n\t\t\tif (this.prototypeOnly) {\n\t\t\t\treturn this.astFunctionPrototype(this.getJsAST(), []).join('').trim();\n\t\t\t} else {\n\t\t\t\tthis.functionStringArray = this.astGeneric(this.getJsAST(), []);\n\t\t\t}\n\t\t\tthis.functionString = webGlRegexOptimize(this.functionStringArray.join('').trim());\n\t\t\treturn this.functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2FunctionNode#\n   * @function\n   * @name astIdentifierExpression\n   *\n   * @desc Parses the abstract syntax tree for *identifier* expression\n   *\n   * @param {Object} idtNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astIdentifierExpression',\n\t\tvalue: function astIdentifierExpression(idtNode, retArr) {\n\t\t\tif (idtNode.type !== 'Identifier') {\n\t\t\t\tthrow this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n\t\t\t}\n\n\t\t\t// do we need to cast addressing vales to float?\n\t\t\tvar castFloat = !this.isState('in-get-call-parameters');\n\n\t\t\tswitch (idtNode.name) {\n\t\t\t\tcase 'gpu_threadX':\n\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\tretArr.push('threadId.x');\n\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadY':\n\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\tretArr.push('threadId.y');\n\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadZ':\n\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\tretArr.push('threadId.z');\n\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputX':\n\t\t\t\t\tretArr.push('uOutputDim.x');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputY':\n\t\t\t\t\tretArr.push('uOutputDim.y');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputZ':\n\t\t\t\t\tretArr.push('uOutputDim.z');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Infinity':\n\t\t\t\t\tretArr.push('intBitsToFloat(2139095039)');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tvar userParamName = this.getUserParamName(idtNode.name);\n\t\t\t\t\tif (userParamName !== null) {\n\t\t\t\t\t\tthis.pushParameter(retArr, 'user_' + userParamName);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.pushParameter(retArr, 'user_' + idtNode.name);\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\t}]);\n\n\treturn WebGL2FunctionNode;\n}(WebGLFunctionNode);\n\n/**\n * @ignore\n * @function\n * @name webgl_regex_optimize\n *\n * @desc [INTERNAL] Takes the near final webgl function string, and do regex search and replacments.\n * For voodoo optimize out the following: \n *\n * - decode32(encode32( <br>\n * - encode32(decode32( <br>\n *\n * @param {String} inStr - The webGl function String\n *\n */\nfunction webGlRegexOptimize(inStr) {\n\treturn inStr.replace(DECODE32_ENCODE32, '((').replace(ENCODE32_DECODE32, '((');\n}","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FunctionBuilderBase = require('../function-builder-base');\nvar WebGL2FunctionNode = require('./function-node');\n\n/**\n * @class WebGLFunctionBuilder\n *\n * @extends FunctionBuilderBase\n *\n * @desc Builds webGl functions (shaders) from JavaScript function Strings\n *\n */\nmodule.exports = function (_FunctionBuilderBase) {\n  _inherits(WebGL2FunctionBuilder, _FunctionBuilderBase);\n\n  function WebGL2FunctionBuilder() {\n    _classCallCheck(this, WebGL2FunctionBuilder);\n\n    var _this = _possibleConstructorReturn(this, (WebGL2FunctionBuilder.__proto__ || Object.getPrototypeOf(WebGL2FunctionBuilder)).call(this));\n\n    _this.Node = WebGL2FunctionNode;\n    return _this;\n  }\n\n  return WebGL2FunctionBuilder;\n}(FunctionBuilderBase);","\"use strict\";\n\nmodule.exports = \"#version 300 es\\n__HEADER__;\\nprecision highp float;\\nprecision highp int;\\nprecision highp sampler2D;\\n\\nconst float LOOP_MAX = __LOOP_MAX__;\\n\\n__CONSTANTS__;\\n\\nin vec2 vTexCoord;\\n\\nvec2 integerMod(vec2 x, float y) {\\n  vec2 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nvec3 integerMod(vec3 x, float y) {\\n  vec3 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nvec4 integerMod(vec4 x, vec4 y) {\\n  vec4 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nfloat integerMod(float x, float y) {\\n  float res = floor(mod(x, y));\\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\\n}\\n\\nint integerMod(int x, int y) {\\n  return x - (y * int(x/y));\\n}\\n\\n__DIVIDE_WITH_INTEGER_CHECK__;\\n\\n// Here be dragons!\\n// DO NOT OPTIMIZE THIS CODE\\n// YOU WILL BREAK SOMETHING ON SOMEBODY'S MACHINE\\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\\nfloat decode32(vec4 rgba) {\\n  __DECODE32_ENDIANNESS__;\\n  rgba *= 255.0;\\n  vec2 gte128;\\n  gte128.x = rgba.b >= 128.0 ? 1.0 : 0.0;\\n  gte128.y = rgba.a >= 128.0 ? 1.0 : 0.0;\\n  float exponent = 2.0 * rgba.a - 127.0 + dot(gte128, MAGIC_VEC);\\n  float res = exp2(round(exponent));\\n  rgba.b = rgba.b - 128.0 * gte128.x;\\n  res = dot(rgba, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\\n  res *= gte128.y * -2.0 + 1.0;\\n  return res;\\n}\\n\\nvec4 encode32(float f) {\\n  float F = abs(f);\\n  float sign = f < 0.0 ? 1.0 : 0.0;\\n  float exponent = floor(log2(F));\\n  float mantissa = (exp2(-exponent) * F);\\n  // exponent += floor(log2(mantissa));\\n  vec4 rgba = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\\n  rgba.rg = integerMod(rgba.rg, 256.0);\\n  rgba.b = integerMod(rgba.b, 128.0);\\n  rgba.a = exponent*0.5 + 63.5;\\n  rgba.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\\n  rgba = floor(rgba);\\n  rgba *= 0.003921569; // 1/255\\n  __ENCODE32_ENDIANNESS__;\\n  return rgba;\\n}\\n// Dragons end here\\n\\nfloat decode(vec4 rgba, int x, int bitRatio) {\\n  if (bitRatio == 1) {\\n    return decode32(rgba);\\n  }\\n  __DECODE32_ENDIANNESS__;\\n  int channel = integerMod(x, bitRatio);\\n  if (bitRatio == 4) {\\n    return rgba[channel] * 255.0;\\n  }\\n  else {\\n    return rgba[channel*2] * 255.0 + rgba[channel*2 + 1] * 65280.0;\\n  }\\n}\\n\\nint index;\\nivec3 threadId;\\n\\nivec3 indexTo3D(int idx, ivec3 texDim) {\\n  int z = int(idx / (texDim.x * texDim.y));\\n  idx -= z * int(texDim.x * texDim.y);\\n  int y = int(idx / texDim.x);\\n  int x = int(integerMod(idx, texDim.x));\\n  return ivec3(x, y, z);\\n}\\n\\nfloat get(sampler2D tex, ivec2 texSize, ivec3 texDim, int bitRatio,  int z, int y, int x) {\\n  ivec3 xyz = ivec3(x, y, z);\\n  __GET_WRAPAROUND__;\\n  int index = xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z);\\n  __GET_TEXTURE_CHANNEL__;\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  __GET_TEXTURE_INDEX__;\\n  vec4 texel = texture(tex, st / vec2(texSize));\\n  __GET_RESULT__;\\n  \\n}\\n\\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  ivec3 xyz = ivec3(x, y, z);\\n  __GET_WRAPAROUND__;\\n  int index = xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z);\\n  __GET_TEXTURE_CHANNEL__;\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  __GET_TEXTURE_INDEX__;\\n  return texture(tex, st / vec2(texSize));\\n}\\n\\nvec4 getImage3D(sampler2DArray tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  ivec3 xyz = ivec3(x, y, z);\\n  __GET_WRAPAROUND__;\\n  int index = xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z);\\n  __GET_TEXTURE_CHANNEL__;\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  __GET_TEXTURE_INDEX__;\\n  return texture(tex, vec3(st / vec2(texSize), z));\\n}\\n\\nfloat get(sampler2D tex, ivec2 texSize, ivec3 texDim, int bitRatio, int y, int x) {\\n  return get(tex, texSize, texDim, bitRatio, 0, y, x);\\n}\\n\\nfloat get(sampler2D tex, ivec2 texSize, ivec3 texDim, int bitRatio, int x) {\\n  return get(tex, texSize, texDim, bitRatio, 0, 0, x);\\n}\\n\\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int y, int x) {\\n  return getImage2D(tex, texSize, texDim, 0, y, x);\\n}\\n\\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int x) {\\n  return getImage2D(tex, texSize, texDim, 0, 0, x);\\n}\\n\\nvec4 actualColor;\\nvoid color(float r, float g, float b, float a) {\\n  actualColor = vec4(r,g,b,a);\\n}\\n\\nvoid color(float r, float g, float b) {\\n  color(r,g,b,1.0);\\n}\\n\\n__MAIN_PARAMS__;\\n__MAIN_CONSTANTS__;\\n__KERNEL__;\\n\\nvoid main(void) {\\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\\n  __MAIN_RESULT__;\\n}\";","\"use strict\";\n\nmodule.exports = \"#version 300 es\\nprecision highp float;\\nprecision highp int;\\nprecision highp sampler2D;\\n\\nin vec2 aPos;\\nin vec2 aTexCoord;\\n\\nout vec2 vTexCoord;\\nuniform vec2 ratio;\\n\\nvoid main(void) {\\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\\n  vTexCoord = aTexCoord;\\n}\";","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WebGLKernel = require('../web-gl/kernel');\nvar utils = require('../../core/utils');\nvar Texture = require('../../core/texture');\nvar fragShaderString = require('./shader-frag');\nvar vertShaderString = require('./shader-vert');\n\nmodule.exports = function (_WebGLKernel) {\n\t_inherits(WebGL2Kernel, _WebGLKernel);\n\n\tfunction WebGL2Kernel() {\n\t\t_classCallCheck(this, WebGL2Kernel);\n\n\t\treturn _possibleConstructorReturn(this, (WebGL2Kernel.__proto__ || Object.getPrototypeOf(WebGL2Kernel)).apply(this, arguments));\n\t}\n\n\t_createClass(WebGL2Kernel, [{\n\t\tkey: 'initWebGl',\n\t\tvalue: function initWebGl() {\n\t\t\treturn utils.initWebGl2(this.getCanvas());\n\t\t}\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name validateOptions\n   *\n   * @desc Validate options related to Kernel, such as\n   * floatOutputs and Textures, texSize, output,\n   * graphical output.\n   *\n   */\n\n\t}, {\n\t\tkey: 'validateOptions',\n\t\tvalue: function validateOptions() {\n\t\t\tvar isFloatReadPixel = utils.isFloatReadPixelsSupportedWebGL2();\n\t\t\tif (this.floatOutput === true && this.floatOutputForce !== true && !isFloatReadPixel) {\n\t\t\t\tthrow new Error('Float texture outputs are not supported on this browser');\n\t\t\t} else if (this.floatTextures === undefined) {\n\t\t\t\tthis.floatTextures = true;\n\t\t\t\tthis.floatOutput = isFloatReadPixel;\n\t\t\t}\n\n\t\t\tvar hasIntegerDivisionBug = utils.hasIntegerDivisionAccuracyBug();\n\t\t\tif (this.fixIntegerDivisionAccuracy === null) {\n\t\t\t\tthis.fixIntegerDivisionAccuracy = hasIntegerDivisionBug;\n\t\t\t} else if (this.fixIntegerDivisionAccuracy && !hasIntegerDivisionBug) {\n\t\t\t\tthis.fixIntegerDivisionAccuracy = false;\n\t\t\t}\n\n\t\t\tutils.checkOutput(this.output);\n\n\t\t\tif (!this.output || this.output.length === 0) {\n\t\t\t\tif (arguments.length !== 1) {\n\t\t\t\t\tthrow new Error('Auto output only supported for kernels with only one input');\n\t\t\t\t}\n\n\t\t\t\tvar argType = utils.getArgumentType(arguments[0]);\n\t\t\t\tif (argType === 'Array') {\n\t\t\t\t\tthis.output = utils.getDimensions(argType);\n\t\t\t\t} else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\n\t\t\t\t\tthis.output = arguments[0].output;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Auto output not supported for input type: ' + argType);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.texSize = utils.dimToTexSize({\n\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t}, this.output, true);\n\n\t\t\tif (this.graphical) {\n\t\t\t\tif (this.output.length !== 2) {\n\t\t\t\t\tthrow new Error('Output must have 2 dimensions on graphical mode');\n\t\t\t\t}\n\n\t\t\t\tif (this.floatOutput) {\n\t\t\t\t\tthis.floatOutput = false;\n\t\t\t\t\tconsole.warn('Cannot use graphical mode and float output at the same time');\n\t\t\t\t}\n\n\t\t\t\tthis.texSize = utils.clone(this.output);\n\t\t\t} else if (this.floatOutput === undefined) {\n\t\t\t\tthis.floatOutput = true;\n\t\t\t}\n\n\t\t\tif (this.floatOutput || this.floatOutputForce) {\n\t\t\t\tthis._webGl.getExtension('EXT_color_buffer_float');\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name run\n   *\n   * @desc Run the kernel program, and send the output to renderOutput\n   *\n   * <p> This method calls a helper method *renderOutput* to return the result. </p>\n   *\n   * @returns {Object|Undefined} Result The final output of the program, as float, and as Textures for reuse.\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'run',\n\t\tvalue: function run() {\n\t\t\tif (this.program === null) {\n\t\t\t\tthis.build.apply(this, arguments);\n\t\t\t}\n\t\t\tvar paramNames = this.paramNames;\n\t\t\tvar paramTypes = this.paramTypes;\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar gl = this._webGl;\n\n\t\t\tgl.useProgram(this.program);\n\t\t\tgl.scissor(0, 0, texSize[0], texSize[1]);\n\n\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\tthis.setUniform3iv('uOutputDim', new Int32Array(this.threadDim));\n\t\t\t\tthis.setUniform2iv('uTexSize', texSize);\n\t\t\t}\n\n\t\t\tthis.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n\n\t\t\tthis.argumentsLength = 0;\n\t\t\tfor (var texIndex = 0; texIndex < paramNames.length; texIndex++) {\n\t\t\t\tthis._addArgument(arguments[texIndex], paramTypes[texIndex], paramNames[texIndex]);\n\t\t\t}\n\n\t\t\tif (this.graphical) {\n\t\t\t\tif (this.outputToTexture) {\n\t\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\t\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\t\t\t\t\tif (!this.outputTexture || this.outputImmutable) {\n\t\t\t\t\t\tthis._setupOutputTexture();\n\t\t\t\t\t}\n\t\t\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\t\t\t\treturn new Texture(this.outputTexture, texSize, this.threadDim, this.output, this._webGl, 'ArrayTexture(4)');\n\t\t\t\t}\n\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\t\t\tif (this.outputImmutable) {\n\t\t\t\tthis._setupOutputTexture();\n\t\t\t}\n\t\t\tvar outputTexture = this.outputTexture;\n\n\t\t\tif (this.subKernelOutputVariableNames !== null) {\n\t\t\t\tif (this.outputImmutable) {\n\t\t\t\t\tthis.subKernelOutputTextures = [];\n\t\t\t\t\tthis._setupSubOutputTextures(this.subKernelOutputVariableNames.length);\n\t\t\t\t}\n\t\t\t\tgl.drawBuffers(this.drawBuffersMap);\n\t\t\t}\n\n\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\n\t\t\tif (this.subKernelOutputTextures !== null) {\n\t\t\t\tif (this.subKernels !== null) {\n\t\t\t\t\tvar output = [];\n\t\t\t\t\toutput.result = this.renderOutput(outputTexture);\n\t\t\t\t\tfor (var i = 0; i < this.subKernels.length; i++) {\n\t\t\t\t\t\toutput.push(new Texture(this.subKernelOutputTextures[i], texSize, this.threadDim, this.output, this._webGl));\n\t\t\t\t\t}\n\t\t\t\t\treturn output;\n\t\t\t\t} else if (this.subKernelProperties !== null) {\n\t\t\t\t\tvar _output = {\n\t\t\t\t\t\tresult: this.renderOutput(outputTexture)\n\t\t\t\t\t};\n\t\t\t\t\tvar _i = 0;\n\t\t\t\t\tfor (var p in this.subKernelProperties) {\n\t\t\t\t\t\tif (!this.subKernelProperties.hasOwnProperty(p)) continue;\n\t\t\t\t\t\t_output[p] = new Texture(this.subKernelOutputTextures[_i], texSize, this.threadDim, this.output, this._webGl);\n\t\t\t\t\t\t_i++;\n\t\t\t\t\t}\n\t\t\t\t\treturn _output;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.renderOutput(outputTexture);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name getOutputTexture\n   *\n   * @desc This return defined outputTexture, which is setup in .build(), or if immutable, is defined in .run()\n   *\n   * @returns {Object} Output Texture Cache\n   *\n   */\n\n\t}, {\n\t\tkey: 'getOutputTexture',\n\t\tvalue: function getOutputTexture() {\n\t\t\treturn this.outputTexture;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _setupOutputTexture\n   * @private\n   *\n   * @desc Setup and replace output texture\n   */\n\n\t}, {\n\t\tkey: '_setupOutputTexture',\n\t\tvalue: function _setupOutputTexture() {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar texture = this.outputTexture = this._webGl.createTexture();\n\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.paramNames.length);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\tif (this.floatOutput) {\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n\t\t\t} else {\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\t\t\t}\n\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @param length\n   * @private\n   *\n   * @desc Setup and replace sub-output textures\n   */\n\n\t}, {\n\t\tkey: '_setupSubOutputTextures',\n\t\tvalue: function _setupSubOutputTextures(length) {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar drawBuffersMap = this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n\t\t\tvar textures = this.subKernelOutputTextures = [];\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar texture = this._webGl.createTexture();\n\t\t\t\ttextures.push(texture);\n\t\t\t\tdrawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.paramNames.length + i);\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\tif (this.floatOutput) {\n\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n\t\t\t\t} else {\n\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\t\t\t\t}\n\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _addArgument\n   *\n   * @desc Adds kernel parameters to the Argument Texture,\n   * binding it to the webGl instance, etc.\n   *\n   * @param {Array|Texture|Number} value - The actual argument supplied to the kernel\n   * @param {String} type - Type of the argument\n   * @param {String} name - Name of the argument\n   *\n   */\n\n\t}, {\n\t\tkey: '_addArgument',\n\t\tvalue: function _addArgument(value, type, name) {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar argumentTexture = this.getArgumentTexture(name);\n\t\t\tif (value instanceof Texture) {\n\t\t\t\ttype = value.type;\n\t\t\t}\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Array':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar dim = utils.getDimensions(value, true);\n\t\t\t\t\t\tvar size = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, dim);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar length = size[0] * size[1];\n\n\t\t\t\t\t\tvar _formatArrayTransfer = this._formatArrayTransfer(value, length),\n\t\t\t\t\t\t    valuesFlat = _formatArrayTransfer.valuesFlat,\n\t\t\t\t\t\t    bitRatio = _formatArrayTransfer.bitRatio;\n\n\t\t\t\t\t\tvar buffer = void 0;\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, size[0], size[1], 0, gl.RGBA, gl.FLOAT, valuesFlat);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbuffer = new Uint8Array(valuesFlat.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0] / bitRatio, size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', dim);\n\t\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('user_' + name + 'BitRatio', bitRatio);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Integer':\n\t\t\t\tcase 'Float':\n\t\t\t\tcase 'Number':\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setUniform1f('user_' + name, value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Input':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar input = value;\n\t\t\t\t\t\tvar _dim = input.size;\n\t\t\t\t\t\tvar _size = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, _dim);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar _length = _size[0] * _size[1];\n\n\t\t\t\t\t\tvar _formatArrayTransfer2 = this._formatArrayTransfer(value.value, _length),\n\t\t\t\t\t\t    _valuesFlat = _formatArrayTransfer2.valuesFlat,\n\t\t\t\t\t\t    _bitRatio = _formatArrayTransfer2.bitRatio;\n\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, _size[0], _size[1], 0, gl.RGBA, gl.FLOAT, inputArray);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _buffer = new Uint8Array(_valuesFlat.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, _size[0] / _bitRatio, _size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, _buffer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', _dim);\n\t\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', _size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('user_' + name + 'BitRatio', _bitRatio);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputImage = value;\n\t\t\t\t\t\tvar _dim2 = [inputImage.width, inputImage.height, 1];\n\t\t\t\t\t\tvar _size2 = [inputImage.width, inputImage.height];\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\t\t\t\t\t// Upload the image into the texture.\n\t\t\t\t\t\tvar mipLevel = 0; // the largest mip\n\t\t\t\t\t\tvar internalFormat = gl.RGBA; // format we want in the texture\n\t\t\t\t\t\tvar srcFormat = gl.RGBA; // format of data we are supplying\n\t\t\t\t\t\tvar srcType = gl.UNSIGNED_BYTE; // type of data we are supplying\n\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, mipLevel, internalFormat, srcFormat, srcType, inputImage);\n\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', _dim2);\n\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', _size2);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'HTMLImageArray':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputImages = value;\n\t\t\t\t\t\tvar _dim3 = [inputImages[0].width, inputImages[0].height, inputImages.length];\n\t\t\t\t\t\tvar _size3 = [inputImages[0].width, inputImages[0].height];\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D_ARRAY, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\t\t\t\t\t// Upload the images into the texture.\n\t\t\t\t\t\tvar _mipLevel = 0; // the largest mip\n\t\t\t\t\t\tvar _internalFormat = gl.RGBA; // format we want in the texture\n\t\t\t\t\t\tvar width = inputImages[0].width;\n\t\t\t\t\t\tvar height = inputImages[0].height;\n\t\t\t\t\t\tvar textureDepth = inputImages.length;\n\t\t\t\t\t\tvar border = 0;\n\t\t\t\t\t\tvar _srcFormat = gl.RGBA; // format of data we are supplying\n\t\t\t\t\t\tvar _srcType = gl.UNSIGNED_BYTE; // type of data we are supplying\n\t\t\t\t\t\tgl.texImage3D(gl.TEXTURE_2D_ARRAY, _mipLevel, _internalFormat, width, height, textureDepth, border, _srcFormat, _srcType, null);\n\t\t\t\t\t\tfor (var i = 0; i < inputImages.length; i++) {\n\t\t\t\t\t\t\tvar xOffset = 0;\n\t\t\t\t\t\t\tvar yOffset = 0;\n\t\t\t\t\t\t\tvar imageDepth = 1;\n\t\t\t\t\t\t\tgl.texSubImage3D(gl.TEXTURE_2D_ARRAY, _mipLevel, xOffset, yOffset, i, inputImages[i].width, inputImages[i].height, imageDepth, _srcFormat, _srcType, inputImages[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', _dim3);\n\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', _size3);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'ArrayTexture(4)':\n\t\t\t\tcase 'NumberTexture':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputTexture = value;\n\t\t\t\t\t\tvar _dim4 = inputTexture.dimensions;\n\t\t\t\t\t\tvar _size4 = inputTexture.size;\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, inputTexture.texture);\n\n\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', _dim4);\n\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', _size4);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name + 'BitRatio', 1); // always float32\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Input type not supported (WebGL): ' + value);\n\t\t\t}\n\t\t\tthis.argumentsLength++;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getMainConstantsString\n   *\n   */\n\n\t}, {\n\t\tkey: '_getMainConstantsString',\n\t\tvalue: function _getMainConstantsString() {\n\t\t\tvar result = [];\n\t\t\tif (this.constants) {\n\t\t\t\tfor (var name in this.constants) {\n\t\t\t\t\tif (!this.constants.hasOwnProperty(name)) continue;\n\t\t\t\t\tvar value = this.constants[name];\n\t\t\t\t\tvar type = utils.getArgumentType(value);\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase 'Integer':\n\t\t\t\t\t\t\tresult.push('const float constants_' + name + ' = ' + parseInt(value) + '.0');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Float':\n\t\t\t\t\t\t\tresult.push('const float constants_' + name + ' = ' + parseFloat(value));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tcase 'Input':\n\t\t\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t\tcase 'ArrayTexture(4)':\n\t\t\t\t\t\tcase 'NumberTexture':\n\t\t\t\t\t\t\tresult.push('uniform highp sampler2D constants_' + name, 'uniform highp ivec2 constants_' + name + 'Size', 'uniform highp ivec3 constants_' + name + 'Dim', 'uniform highp int constants_' + name + 'BitRatio');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'HTMLImageArray':\n\t\t\t\t\t\t\tresult.push('uniform highp sampler2DArray constants_' + name, 'uniform highp ivec2 constants_' + name + 'Size', 'uniform highp ivec3 constants_' + name + 'Dim', 'uniform highp int constants_' + name + 'BitRatio');\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error('Unsupported constant ' + name + ' type ' + type);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _addConstant\n   *\n   * @desc Adds kernel parameters to the Argument Texture,\n   * binding it to the webGl instance, etc.\n   *\n   * @param {Array|Texture|Number} value - The actual argument supplied to the kernel\n   * @param {String} type - Type of the argument\n   * @param {String} name - Name of the argument\n   *\n   */\n\n\t}, {\n\t\tkey: '_addConstant',\n\t\tvalue: function _addConstant(value, type, name) {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar argumentTexture = this.getArgumentTexture(name);\n\t\t\tif (value instanceof Texture) {\n\t\t\t\ttype = value.type;\n\t\t\t}\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Array':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar dim = utils.getDimensions(value, true);\n\t\t\t\t\t\tvar size = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, dim);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar length = size[0] * size[1];\n\n\t\t\t\t\t\tvar _formatArrayTransfer3 = this._formatArrayTransfer(value, length),\n\t\t\t\t\t\t    valuesFlat = _formatArrayTransfer3.valuesFlat,\n\t\t\t\t\t\t    bitRatio = _formatArrayTransfer3.bitRatio;\n\n\t\t\t\t\t\tvar buffer = void 0;\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0], size[1], 0, gl.RGBA, gl.FLOAT, valuesFlat);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbuffer = new Uint8Array(valuesFlat.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0] / bitRatio, size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', dim);\n\t\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name + 'BitRatio', bitRatio);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Input':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar input = value;\n\t\t\t\t\t\tvar _dim5 = input.size;\n\t\t\t\t\t\tvar _size5 = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, _dim5);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar _length2 = _size5[0] * _size5[1];\n\n\t\t\t\t\t\tvar _formatArrayTransfer4 = this._formatArrayTransfer(value.value, _length2),\n\t\t\t\t\t\t    _valuesFlat2 = _formatArrayTransfer4.valuesFlat,\n\t\t\t\t\t\t    _bitRatio2 = _formatArrayTransfer4.bitRatio;\n\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, _size5[0], _size5[1], 0, gl.RGBA, gl.FLOAT, inputArray);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _buffer2 = new Uint8Array(_valuesFlat2.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, _size5[0] / _bitRatio2, _size5[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, _buffer2);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', _dim5);\n\t\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', _size5);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name + 'BitRatio', _bitRatio2);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputImage = value;\n\t\t\t\t\t\tvar _dim6 = [inputImage.width, inputImage.height, 1];\n\t\t\t\t\t\tvar _size6 = [inputImage.width, inputImage.height];\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\t\t\t\t\t// Upload the image into the texture.\n\t\t\t\t\t\tvar mipLevel = 0; // the largest mip\n\t\t\t\t\t\tvar internalFormat = gl.RGBA; // format we want in the texture\n\t\t\t\t\t\tvar srcFormat = gl.RGBA; // format of data we are supplying\n\t\t\t\t\t\tvar srcType = gl.UNSIGNED_BYTE; // type of data we are supplying\n\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, mipLevel, internalFormat, srcFormat, srcType, inputImage);\n\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', _dim6);\n\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', _size6);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'HTMLImageArray':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputImages = value;\n\t\t\t\t\t\tvar _dim7 = [inputImages[0].width, inputImages[0].height, inputImages.length];\n\t\t\t\t\t\tvar _size7 = [inputImages[0].width, inputImages[0].height];\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D_ARRAY, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\t\t\t\t\t// Upload the images into the texture.\n\t\t\t\t\t\tvar _mipLevel2 = 0; // the largest mip\n\t\t\t\t\t\tvar _internalFormat2 = gl.RGBA; // format we want in the texture\n\t\t\t\t\t\tvar width = inputImages[0].width;\n\t\t\t\t\t\tvar height = inputImages[0].height;\n\t\t\t\t\t\tvar textureDepth = inputImages.length;\n\t\t\t\t\t\tvar border = 0;\n\t\t\t\t\t\tvar _srcFormat2 = gl.RGBA; // format of data we are supplying\n\t\t\t\t\t\tvar _srcType2 = gl.UNSIGNED_BYTE; // type of data we are supplying\n\t\t\t\t\t\tgl.texImage3D(gl.TEXTURE_2D_ARRAY, _mipLevel2, _internalFormat2, width, height, textureDepth, border, _srcFormat2, _srcType2, null);\n\t\t\t\t\t\tfor (var i = 0; i < inputImages.length; i++) {\n\t\t\t\t\t\t\tvar xOffset = 0;\n\t\t\t\t\t\t\tvar yOffset = 0;\n\t\t\t\t\t\t\tvar imageDepth = 1;\n\t\t\t\t\t\t\tgl.texSubImage3D(gl.TEXTURE_2D_ARRAY, _mipLevel2, xOffset, yOffset, i, inputImages[i].width, inputImages[i].height, imageDepth, _srcFormat2, _srcType2, inputImages[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', _dim7);\n\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', _size7);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'ArrayTexture(4)':\n\t\t\t\tcase 'NumberTexture':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputTexture = value;\n\t\t\t\t\t\tvar _dim8 = inputTexture.dimensions;\n\t\t\t\t\t\tvar _size8 = inputTexture.size;\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, inputTexture.texture);\n\n\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', _dim8);\n\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', _size8);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name + 'BitRatio', 1); // aways float32\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Integer':\n\t\t\t\tcase 'Float':\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Input type not supported (WebGL): ' + value);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getGetResultString\n   *\n   */\n\n\t}, {\n\t\tkey: '_getGetResultString',\n\t\tvalue: function _getGetResultString() {\n\t\t\tif (!this.floatTextures) {\n\t\t\t\treturn '  return decode(texel, x, bitRatio);';\n\t\t\t}\n\t\t\treturn '  return texel[channel];';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getHeaderString\n   *\n   * @desc Get the header string for the program.\n   * This returns an empty string if no sub-kernels are defined.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getHeaderString',\n\t\tvalue: function _getHeaderString() {\n\t\t\treturn '';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getTextureCoordinate\n   *\n   * @desc Get texture coordinate string for the program\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getTextureCoordinate',\n\t\tvalue: function _getTextureCoordinate() {\n\t\t\tvar names = this.subKernelOutputVariableNames;\n\t\t\tif (names === null || names.length < 1) {\n\t\t\t\treturn 'in highp vec2 vTexCoord;\\n';\n\t\t\t} else {\n\t\t\t\treturn 'out highp vec2 vTexCoord;\\n';\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getMainParamsString\n   *\n   * @desc Generate transpiled glsl Strings for user-defined parameters sent to a kernel\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getMainParamsString',\n\t\tvalue: function _getMainParamsString(args) {\n\t\t\tvar result = [];\n\t\t\tvar paramTypes = this.paramTypes;\n\t\t\tvar paramNames = this.paramNames;\n\t\t\tfor (var i = 0; i < paramNames.length; i++) {\n\t\t\t\tvar param = args[i];\n\t\t\t\tvar paramName = paramNames[i];\n\t\t\t\tvar paramType = paramTypes[i];\n\t\t\t\tif (this.hardcodeConstants) {\n\t\t\t\t\tif (paramType === 'Array' || paramType === 'NumberTexture' || paramType === 'ArrayTexture(4)') {\n\t\t\t\t\t\tvar paramDim = utils.getDimensions(param, true);\n\t\t\t\t\t\tvar paramSize = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, paramDim);\n\n\t\t\t\t\t\tresult.push('uniform highp sampler2D user_' + paramName, 'highp ivec2 user_' + paramName + 'Size = ivec2(' + paramSize[0] + ', ' + paramSize[1] + ')', 'highp ivec3 user_' + paramName + 'Dim = ivec3(' + paramDim[0] + ', ' + paramDim[1] + ', ' + paramDim[2] + ')', 'uniform highp int user_' + paramName + 'BitRatio');\n\t\t\t\t\t} else if (paramType === 'Integer') {\n\t\t\t\t\t\tresult.push('highp float user_' + paramName + ' = ' + param + '.0');\n\t\t\t\t\t} else if (paramType === 'Float') {\n\t\t\t\t\t\tresult.push('highp float user_' + paramName + ' = ' + param);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (paramType === 'Array' || paramType === 'NumberTexture' || paramType === 'ArrayTexture(4)' || paramType === 'Input' || paramType === 'HTMLImage') {\n\t\t\t\t\t\tresult.push('uniform highp sampler2D user_' + paramName, 'uniform highp ivec2 user_' + paramName + 'Size', 'uniform highp ivec3 user_' + paramName + 'Dim');\n\t\t\t\t\t\tif (paramType !== 'HTMLImage') {\n\t\t\t\t\t\t\tresult.push('uniform highp int user_' + paramName + 'BitRatio');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (paramType === 'HTMLImageArray') {\n\t\t\t\t\t\tresult.push('uniform highp sampler2DArray user_' + paramName, 'uniform highp ivec2 user_' + paramName + 'Size', 'uniform highp ivec3 user_' + paramName + 'Dim');\n\t\t\t\t\t} else if (paramType === 'Integer' || paramType === 'Float') {\n\t\t\t\t\t\tresult.push('uniform float user_' + paramName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getKernelString\n   *\n   * @desc Get Kernel program string (in *glsl*) for a kernel.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getKernelString',\n\t\tvalue: function _getKernelString() {\n\t\t\tvar result = [];\n\t\t\tvar names = this.subKernelOutputVariableNames;\n\t\t\tif (names !== null) {\n\t\t\t\tresult.push('float kernelResult = 0.0');\n\t\t\t\tresult.push('layout(location = 0) out vec4 data0');\n\t\t\t\tfor (var i = 0; i < names.length; i++) {\n\t\t\t\t\tresult.push('float ' + names[i] + ' = 0.0', 'layout(location = ' + (i + 1) + ') out vec4 data' + (i + 1));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult.push('out vec4 data0');\n\t\t\t\tresult.push('float kernelResult = 0.0');\n\t\t\t}\n\n\t\t\treturn this._linesToString(result) + this.functionBuilder.getPrototypeString('kernel');\n\t\t}\n\n\t\t/**\n   *\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getMainResultString\n   *\n   * @desc Get main result string with checks for floatOutput, graphical, subKernelsOutputs, etc.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getMainResultString',\n\t\tvalue: function _getMainResultString() {\n\t\t\tvar names = this.subKernelOutputVariableNames;\n\t\t\tvar result = [];\n\n\t\t\tif (this.floatOutput) {\n\t\t\t\tresult.push('  index *= 4');\n\t\t\t}\n\n\t\t\tif (this.graphical) {\n\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  data0 = actualColor');\n\t\t\t} else if (this.floatOutput) {\n\t\t\t\tvar channels = ['r', 'g', 'b', 'a'];\n\n\t\t\t\tfor (var i = 0; i < channels.length; ++i) {\n\t\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)');\n\t\t\t\t\tresult.push('  kernel()');\n\n\t\t\t\t\tif (names) {\n\t\t\t\t\t\tresult.push('  data0.' + channels[i] + ' = kernelResult');\n\n\t\t\t\t\t\tfor (var j = 0; j < names.length; ++j) {\n\t\t\t\t\t\t\tresult.push('  data' + (j + 1) + '.' + channels[i] + ' = ' + names[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.push('  data0.' + channels[i] + ' = kernelResult');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < channels.length - 1) {\n\t\t\t\t\t\tresult.push('  index += 1');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (names !== null) {\n\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)');\n\t\t\t\tresult.push('  kernel()');\n\t\t\t\tresult.push('  data0 = encode32(kernelResult)');\n\t\t\t\tfor (var _i2 = 0; _i2 < names.length; _i2++) {\n\t\t\t\t\tresult.push('  data' + (_i2 + 1) + ' = encode32(' + names[_i2] + ')');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  data0 = encode32(kernelResult)');\n\t\t\t}\n\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _addKernels\n   *\n   * @desc Adds all the sub-kernels supplied with this Kernel instance.\n   *\n   */\n\n\t}, {\n\t\tkey: '_addKernels',\n\t\tvalue: function _addKernels() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar builder = this.functionBuilder;\n\t\t\tvar gl = this._webGl;\n\n\t\t\tbuilder.addFunctions(this.functions, {\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output\n\t\t\t});\n\t\t\tbuilder.addNativeFunctions(this.nativeFunctions);\n\n\t\t\tbuilder.addKernel(this.fnString, {\n\t\t\t\tprototypeOnly: false,\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output,\n\t\t\t\tdebug: this.debug,\n\t\t\t\tloopMaxIterations: this.loopMaxIterations,\n\t\t\t\tparamNames: this.paramNames,\n\t\t\t\tparamTypes: this.paramTypes,\n\t\t\t\tconstantTypes: this.constantTypes,\n\t\t\t\tfixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n\t\t\t});\n\n\t\t\tif (this.subKernels !== null) {\n\t\t\t\tthis.subKernelOutputTextures = [];\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tthis.subKernels.forEach(function (subKernel) {\n\t\t\t\t\treturn _this2._addSubKernel(subKernel);\n\t\t\t\t});\n\t\t\t} else if (this.subKernelProperties !== null) {\n\t\t\t\tthis.subKernelOutputTextures = [];\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tObject.keys(this.subKernelProperties).forEach(function (property) {\n\t\t\t\t\treturn _this2._addSubKernel(_this2.subKernelProperties[property]);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getFragShaderString\n   *\n   * @desc Get the fragment shader String.\n   * If the String hasn't been compiled yet,\n   * then this method compiles it as well\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {string} Fragment Shader string\n   *\n   */\n\n\t}, {\n\t\tkey: '_getFragShaderString',\n\t\tvalue: function _getFragShaderString(args) {\n\t\t\tif (this.compiledFragShaderString !== null) {\n\t\t\t\treturn this.compiledFragShaderString;\n\t\t\t}\n\t\t\treturn this.compiledFragShaderString = this._replaceArtifacts(this.constructor.fragShaderString, this._getFragShaderArtifactMap(args));\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getVertShaderString\n   *\n   * @desc Get the vertical shader String\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {string} Vertical Shader string\n   *\n   */\n\n\t}, {\n\t\tkey: '_getVertShaderString',\n\t\tvalue: function _getVertShaderString(args) {\n\t\t\tif (this.compiledVertShaderString !== null) {\n\t\t\t\treturn this.compiledVertShaderString;\n\t\t\t}\n\t\t\treturn this.compiledVertShaderString = this.constructor.vertShaderString;\n\t\t}\n\t}], [{\n\t\tkey: 'fragShaderString',\n\t\tget: function get() {\n\t\t\treturn fragShaderString;\n\t\t}\n\t}, {\n\t\tkey: 'vertShaderString',\n\t\tget: function get() {\n\t\t\treturn vertShaderString;\n\t\t}\n\t}]);\n\n\treturn WebGL2Kernel;\n}(WebGLKernel);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RunnerBase = require('../runner-base');\nvar WebGL2FunctionBuilder = require('./function-builder');\nvar WebGL2Kernel = require('./kernel');\n\nmodule.exports = function (_RunnerBase) {\n\t_inherits(WebGL2Runner, _RunnerBase);\n\n\t/**\n  * @constructor WebGL2Runner\n  *\n  * @extends RunnerBase\n \t * @desc Instantiates a Runner instance for the kernel.\n  *\n  * @param {Object} settings - Settings to instantiate properties in RunnerBase, with given values\n  *\n  */\n\tfunction WebGL2Runner(settings) {\n\t\t_classCallCheck(this, WebGL2Runner);\n\n\t\tvar _this = _possibleConstructorReturn(this, (WebGL2Runner.__proto__ || Object.getPrototypeOf(WebGL2Runner)).call(this, new WebGL2FunctionBuilder(), settings));\n\n\t\t_this.Kernel = WebGL2Kernel;\n\t\t_this.kernel = null;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @memberOf WebGL2Runner#\n  * @function\n  * @name getMode\n  *\n  * @desc Return the current mode in which gpu.js is executing.\n  *\n  * @returns {String} The current mode; \"gpu\".\n  *\n  */\n\n\n\t_createClass(WebGL2Runner, [{\n\t\tkey: 'getMode',\n\t\tvalue: function getMode() {\n\t\t\treturn 'gpu';\n\t\t}\n\t}]);\n\n\treturn WebGL2Runner;\n}(RunnerBase);","'use strict';\n\nvar utils = require('../../core/utils');\nvar kernelRunShortcut = require('../kernel-run-shortcut');\n\nfunction removeFnNoise(fn) {\n  if (/^function /.test(fn)) {\n    fn = fn.substring(9);\n  }\n  return fn.replace(/[_]typeof/g, 'typeof');\n}\n\nfunction removeNoise(str) {\n  return str.replace(/[_]typeof/g, 'typeof');\n}\n\nmodule.exports = function (cpuKernel, name) {\n  return '() => {\\n    ' + kernelRunShortcut.toString() + ';\\n    const utils = {\\n      allPropertiesOf: ' + removeNoise(utils.allPropertiesOf.toString()) + ',\\n      clone: ' + removeNoise(utils.clone.toString()) + ',\\n      checkOutput: ' + removeNoise(utils.checkOutput.toString()) + '\\n    };\\n    const Utils = utils;\\n    let Input = function() {};\\n    class ' + (name || 'Kernel') + ' {\\n      constructor() {        \\n        this.argumentsLength = 0;\\n        this._canvas = null;\\n        this._webGl = null;\\n        this.built = false;\\n        this.program = null;\\n        this.paramNames = ' + JSON.stringify(cpuKernel.paramNames) + ';\\n        this.paramTypes = ' + JSON.stringify(cpuKernel.paramTypes) + ';\\n        this.texSize = ' + JSON.stringify(cpuKernel.texSize) + ';\\n        this.output = ' + JSON.stringify(cpuKernel.output) + ';\\n        this._kernelString = `' + cpuKernel._kernelString + '`;\\n        this.output = ' + JSON.stringify(cpuKernel.output) + ';\\n\\t\\t    this.run = function() {\\n          this.run = null;\\n          this.build();\\n          return this.run.apply(this, arguments);\\n        }.bind(this);\\n        this.thread = {\\n          x: 0,\\n          y: 0,\\n          z: 0\\n        };\\n      }\\n      setCanvas(canvas) { this._canvas = canvas; return this; }\\n      setWebGl(webGl) { this._webGl = webGl; return this; }\\n      setInput(Type) { Input = Type; }\\n      ' + removeFnNoise(cpuKernel.build.toString()) + '\\n      ' + removeFnNoise(cpuKernel.setupParams.toString()) + '\\n      ' + removeFnNoise(cpuKernel.setupConstants.toString()) + '\\n      run () { ' + cpuKernel.kernelString + ' }\\n      getKernelString() { return this._kernelString; }\\n      ' + removeFnNoise(cpuKernel.validateOptions.toString()) + '\\n    };\\n    return kernelRunShortcut(new Kernel());\\n  };';\n};","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar KernelBase = require('../kernel-base');\nvar utils = require('../../core/utils');\nvar kernelString = require('./kernel-string');\n\nmodule.exports = function (_KernelBase) {\n\t_inherits(CPUKernel, _KernelBase);\n\n\t/**\n  * @constructor CPUKernel\n  *\n  * @desc Kernel Implementation for CPU.\n  *\n  * <p>Instantiates properties to the CPU Kernel.</p>\n  *\n  * @extends KernelBase\n  *\n  * @prop {Object} thread - The thread dimensions, x, y and z\n  * @prop {Object} output - The canvas dimensions\n  * @prop {Object} functionBuilder - Function Builder instance bound to this Kernel\n  * @prop {Function} run - Method to run the kernel\n  *\n  */\n\tfunction CPUKernel(fnString, settings) {\n\t\t_classCallCheck(this, CPUKernel);\n\n\t\tvar _this = _possibleConstructorReturn(this, (CPUKernel.__proto__ || Object.getPrototypeOf(CPUKernel)).call(this, fnString, settings));\n\n\t\t_this._fn = null;\n\t\t_this.run = null;\n\t\t_this._canvasCtx = null;\n\t\t_this._imageData = null;\n\t\t_this._colorData = null;\n\t\t_this._kernelString = null;\n\t\t_this.thread = {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tz: 0\n\t\t};\n\n\t\t_this.run = function () {\n\t\t\tthis.run = null;\n\t\t\tthis.build.apply(this, arguments);\n\t\t\treturn this.run.apply(this, arguments);\n\t\t}.bind(_this);\n\t\treturn _this;\n\t}\n\n\t/**\n  * @memberOf CPUKernel#\n  * @function\n  * @name validateOptions\n  *\n  * @desc Validate options related to CPU Kernel, such as\n  * dimensions size, and auto dimension support.\n  *\n  */\n\n\n\t_createClass(CPUKernel, [{\n\t\tkey: 'validateOptions',\n\t\tvalue: function validateOptions() {\n\t\t\tif (!this.output || this.output.length === 0) {\n\t\t\t\tif (arguments.length !== 1) {\n\t\t\t\t\tthrow 'Auto dimensions only supported for kernels with only one input';\n\t\t\t\t}\n\n\t\t\t\tvar argType = utils.getArgumentType(arguments[0]);\n\t\t\t\tif (argType === 'Array') {\n\t\t\t\t\tthis.output = utils.getDimensions(argType);\n\t\t\t\t} else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\n\t\t\t\t\tthis.output = arguments[0].output;\n\t\t\t\t} else {\n\t\t\t\t\tthrow 'Auto dimensions not supported for input type: ' + argType;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tutils.checkOutput(this.output);\n\t\t}\n\n\t\t/**\n   * @memberOf CPUKernel#\n   * @function\n   * @name build\n   *\n   * @desc Builds the Kernel, by generating the kernel\n   * string using thread dimensions, and arguments\n   * supplied to the kernel.\n   *\n   * <p>If the graphical flag is enabled, canvas is used.</p>\n   *\n   */\n\n\t}, {\n\t\tkey: 'build',\n\t\tvalue: function build() {\n\t\t\tthis.setupConstants();\n\t\t\tthis.setupParams(arguments);\n\t\t\tthis.validateOptions();\n\t\t\tvar canvas = this._canvas;\n\t\t\tif (canvas) {\n\t\t\t\t// if node or canvas is not found, don't die\n\t\t\t\tthis._canvasCtx = canvas.getContext('2d');\n\t\t\t}\n\t\t\tvar threadDim = this.threadDim = utils.clone(this.output);\n\n\t\t\twhile (threadDim.length < 3) {\n\t\t\t\tthreadDim.push(1);\n\t\t\t}\n\n\t\t\tif (this.graphical) {\n\t\t\t\tvar _canvas = this._canvas;\n\t\t\t\tif (!_canvas) {\n\t\t\t\t\tthrow new Error('no canvas available for using graphical output');\n\t\t\t\t}\n\t\t\t\t_canvas.width = threadDim[0];\n\t\t\t\t_canvas.height = threadDim[1];\n\t\t\t\tthis._imageData = this._canvasCtx.createImageData(threadDim[0], threadDim[1]);\n\t\t\t\tthis._colorData = new Uint8ClampedArray(threadDim[0] * threadDim[1] * 4);\n\t\t\t}\n\n\t\t\tvar kernelString = this.getKernelString();\n\n\t\t\tif (this.debug) {\n\t\t\t\tconsole.log('Options:');\n\t\t\t\tconsole.dir(this);\n\t\t\t\tconsole.log('Function output:');\n\t\t\t\tconsole.log(kernelString);\n\t\t\t}\n\n\t\t\tthis.kernelString = kernelString;\n\t\t\tthis.run = new Function([], kernelString).bind(this)();\n\t\t}\n\t}, {\n\t\tkey: 'color',\n\t\tvalue: function color(r, g, b, a) {\n\t\t\tif (typeof a === 'undefined') {\n\t\t\t\ta = 1;\n\t\t\t}\n\n\t\t\tr = Math.floor(r * 255);\n\t\t\tg = Math.floor(g * 255);\n\t\t\tb = Math.floor(b * 255);\n\t\t\ta = Math.floor(a * 255);\n\n\t\t\tvar width = this.output[0];\n\t\t\tvar height = this.output[1];\n\n\t\t\tvar x = this.thread.x;\n\t\t\tvar y = height - this.thread.y - 1;\n\n\t\t\tvar index = x + y * width;\n\n\t\t\tthis._colorData[index * 4 + 0] = r;\n\t\t\tthis._colorData[index * 4 + 1] = g;\n\t\t\tthis._colorData[index * 4 + 2] = b;\n\t\t\tthis._colorData[index * 4 + 3] = a;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUKernel#\n   * @function\n   * @name getKernelString\n   *\n   * @desc Generates kernel string for this kernel program.\n   *\n   * <p>If sub-kernels are supplied, they are also factored in.\n   * This string can be saved by calling the `toString` method\n   * and then can be reused later.</p>\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: 'getKernelString',\n\t\tvalue: function getKernelString() {\n\t\t\tif (this._kernelString !== null) return this._kernelString;\n\n\t\t\tvar builder = this.functionBuilder;\n\n\t\t\t// Thread dim fix (to make compilable)\n\t\t\tvar threadDim = this.threadDim || (this.threadDim = utils.clone(this.output));\n\t\t\twhile (threadDim.length < 3) {\n\t\t\t\tthreadDim.push(1);\n\t\t\t}\n\n\t\t\tbuilder.addKernel(this.fnString, {\n\t\t\t\tprototypeOnly: false,\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: threadDim,\n\t\t\t\tdebug: this.debug,\n\t\t\t\tloopMaxIterations: this.loopMaxIterations,\n\t\t\t\tparamNames: this.paramNames,\n\t\t\t\tparamTypes: this.paramTypes,\n\t\t\t\tparamSizes: this.paramSizes,\n\t\t\t\tconstantTypes: this.constantTypes\n\t\t\t});\n\n\t\t\tbuilder.addFunctions(this.functions, {\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: threadDim\n\t\t\t});\n\n\t\t\tbuilder.addNativeFunctions(this.nativeFunctions);\n\n\t\t\tif (this.subKernels !== null) {\n\t\t\t\tthis.subKernelOutputTextures = [];\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tfor (var i = 0; i < this.subKernels.length; i++) {\n\t\t\t\t\tvar subKernel = this.subKernels[i];\n\t\t\t\t\tbuilder.addSubKernel(subKernel, {\n\t\t\t\t\t\tprototypeOnly: false,\n\t\t\t\t\t\tconstants: this.constants,\n\t\t\t\t\t\toutput: this.output,\n\t\t\t\t\t\tdebug: this.debug,\n\t\t\t\t\t\tloopMaxIterations: this.loopMaxIterations\n\t\t\t\t\t});\n\t\t\t\t\tthis.subKernelOutputVariableNames.push(subKernel.name + 'Result');\n\t\t\t\t}\n\t\t\t} else if (this.subKernelProperties !== null) {\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tvar _i = 0;\n\t\t\t\tfor (var p in this.subKernelProperties) {\n\t\t\t\t\tif (!this.subKernelProperties.hasOwnProperty(p)) continue;\n\t\t\t\t\tvar _subKernel = this.subKernelProperties[p];\n\t\t\t\t\tbuilder.addSubKernel(_subKernel);\n\t\t\t\t\tthis.subKernelOutputVariableNames.push(_subKernel.name + 'Result');\n\t\t\t\t\t_i++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar prototypes = builder.getPrototypes('kernel');\n\t\t\tvar kernel = null;\n\t\t\tif (prototypes.length > 1) {\n\t\t\t\tprototypes = prototypes.filter(function (fn) {\n\t\t\t\t\tif (/^function/.test(fn)) return fn;\n\t\t\t\t\tkernel = fn;\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tkernel = prototypes.shift();\n\t\t\t}\n\t\t\tvar kernelString = this._kernelString = '\\n\\t\\tvar LOOP_MAX = ' + this._getLoopMaxString() + '\\n\\t\\tvar constants = this.constants;\\n\\t\\tvar _this = this;\\n    return function (' + this.paramNames.map(function (paramName) {\n\t\t\t\treturn 'user_' + paramName;\n\t\t\t}).join(', ') + ') {\\n      ' + this._processConstants() + '\\n      ' + this._processParams() + '\\n      ' + this._kernelLoop(kernel) + '\\n      if (this.graphical) {\\n        this._imageData.data.set(this._colorData);\\n        this._canvasCtx.putImageData(this._imageData, 0, 0);\\n        return;\\n      }\\n      ' + this._kernelOutput() + '\\n      ' + (prototypes.length > 0 ? prototypes.join('\\n') : '') + '\\n    }.bind(this);';\n\t\t\treturn kernelString;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUKernel#\n   * @function\n   * @name toString\n   *\n   * @desc Returns the *pre-compiled* Kernel as a JS Object String, that can be reused.\n   *\n   */\n\n\t}, {\n\t\tkey: 'toString',\n\t\tvalue: function toString() {\n\t\t\treturn kernelString(this);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getLoopMaxString\n   *\n   * @desc Get the maximum loop size String.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getLoopMaxString',\n\t\tvalue: function _getLoopMaxString() {\n\t\t\treturn this.loopMaxIterations ? ' ' + parseInt(this.loopMaxIterations) + ';\\n' : ' 1000;\\n';\n\t\t}\n\t}, {\n\t\tkey: '_processConstants',\n\t\tvalue: function _processConstants() {\n\t\t\tif (!this.constants) return '';\n\n\t\t\tvar result = [];\n\t\t\tfor (var p in this.constants) {\n\t\t\t\tvar type = this.constantTypes[p];\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t\tresult.push('  var constants_' + p + ' = this._imageTo2DArray(this.constants.' + p + ')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'HTMLImageArray':\n\t\t\t\t\t\tresult.push('  var constants_' + p + ' = this._imageTo3DArray(this.constants.' + p + ')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Input':\n\t\t\t\t\t\tresult.push('  var constants_' + p + ' = this.constants.' + p + '.value');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tresult.push('  var constants_' + p + ' = this.constants.' + p);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result.join('\\n');\n\t\t}\n\t}, {\n\t\tkey: '_processParams',\n\t\tvalue: function _processParams() {\n\t\t\tvar result = [];\n\t\t\tfor (var i = 0; i < this.paramTypes.length; i++) {\n\t\t\t\tswitch (this.paramTypes[i]) {\n\t\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t\tresult.push('  user_' + this.paramNames[i] + ' = this._imageTo2DArray(user_' + this.paramNames[i] + ')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'HTMLImageArray':\n\t\t\t\t\t\tresult.push('  user_' + this.paramNames[i] + ' = this._imageTo3DArray(user_' + this.paramNames[i] + ')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Input':\n\t\t\t\t\t\tresult.push('  user_' + this.paramNames[i] + ' = user_' + this.paramNames[i] + '.value');\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result.join(';\\n');\n\t\t}\n\t}, {\n\t\tkey: '_imageTo2DArray',\n\t\tvalue: function _imageTo2DArray(image) {\n\t\t\tvar canvas = this._canvas;\n\t\t\tif (canvas.width < image.width) {\n\t\t\t\tcanvas.width = image.width;\n\t\t\t}\n\t\t\tif (canvas.height < image.height) {\n\t\t\t\tcanvas.height = image.height;\n\t\t\t}\n\t\t\tvar ctx = this._canvasCtx;\n\t\t\tctx.drawImage(image, 0, 0, image.width, image.height);\n\t\t\tvar pixelsData = ctx.getImageData(0, 0, image.width, image.height).data;\n\t\t\tvar imageArray = new Array(image.height);\n\t\t\tvar index = 0;\n\t\t\tfor (var y = image.height - 1; y >= 0; y--) {\n\t\t\t\timageArray[y] = new Array(image.width);\n\t\t\t\tfor (var x = 0; x < image.width; x++) {\n\t\t\t\t\tvar r = pixelsData[index++] / 255;\n\t\t\t\t\tvar g = pixelsData[index++] / 255;\n\t\t\t\t\tvar b = pixelsData[index++] / 255;\n\t\t\t\t\tvar a = pixelsData[index++] / 255;\n\t\t\t\t\tvar result = [r, g, b, a];\n\t\t\t\t\tresult.r = r;\n\t\t\t\t\tresult.g = g;\n\t\t\t\t\tresult.b = b;\n\t\t\t\t\tresult.a = a;\n\t\t\t\t\timageArray[y][x] = result;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn imageArray;\n\t\t}\n\t}, {\n\t\tkey: '_imageTo3DArray',\n\t\tvalue: function _imageTo3DArray(images) {\n\t\t\tvar imagesArray = new Array(images.length);\n\t\t\tfor (var i = 0; i < images.length; i++) {\n\t\t\t\timagesArray[i] = this._imageTo2DArray(images[i]);\n\t\t\t}\n\t\t\treturn imagesArray;\n\t\t}\n\t}, {\n\t\tkey: '_kernelLoop',\n\t\tvalue: function _kernelLoop(kernelString) {\n\t\t\tswitch (this.output.length) {\n\t\t\t\tcase 1:\n\t\t\t\t\treturn this._kernel1DLoop(kernelString);\n\t\t\t\tcase 2:\n\t\t\t\t\treturn this._kernel2DLoop(kernelString);\n\t\t\t\tcase 3:\n\t\t\t\t\treturn this._kernel3DLoop(kernelString);\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('unsupported size kernel');\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: '_kernel1DLoop',\n\t\tvalue: function _kernel1DLoop(kernelString) {\n\t\t\tvar threadDim = this.threadDim;\n\t\t\treturn '\\n    var result = new Float32Array(' + threadDim[0] + ');\\n    ' + this._mapSubKernels(function (name) {\n\t\t\t\treturn 'var result_' + name + ' = new Float32Array(' + threadDim[0] + ');\\n';\n\t\t\t}).join('') + '\\n    for (var x = 0; x < ' + threadDim[0] + '; x++) {\\n      this.thread.x = x;\\n      this.thread.y = 0;\\n      this.thread.z = 0;\\n      var kernelResult;\\n      ' + kernelString + '\\n      result[x] = kernelResult;\\n      ' + this._mapSubKernels(function (name) {\n\t\t\t\treturn 'result_' + name + '[x] = ' + name + ';\\n';\n\t\t\t}).join('') + '\\n    }';\n\t\t}\n\t}, {\n\t\tkey: '_kernel2DLoop',\n\t\tvalue: function _kernel2DLoop(kernelString) {\n\t\t\tvar threadDim = this.threadDim;\n\t\t\treturn '\\n    var result = new Array(' + threadDim[1] + ');\\n    ' + this._mapSubKernels(function (name) {\n\t\t\t\treturn 'var result_' + name + ' = new Array(' + threadDim[1] + ');\\n';\n\t\t\t}).join('') + '\\n    for (var y = 0; y < ' + threadDim[1] + '; y++) {\\n      this.thread.z = 0;\\n      this.thread.y = y;\\n      var resultX = result[y] = new Float32Array(' + threadDim[0] + ');\\n      ' + this._mapSubKernels(function (name) {\n\t\t\t\treturn 'var result_' + name + 'X = result_' + name + '[y] = new Float32Array(' + threadDim[0] + ');\\n';\n\t\t\t}).join('') + '\\n      for (var x = 0; x < ' + threadDim[0] + '; x++) {\\n      \\tthis.thread.x = x;\\n        var kernelResult;\\n        ' + kernelString + '\\n        resultX[x] = kernelResult;\\n        ' + this._mapSubKernels(function (name) {\n\t\t\t\treturn 'result_' + name + 'X[x] = ' + name + ';\\n';\n\t\t\t}).join('') + '\\n      }\\n    }';\n\t\t}\n\t}, {\n\t\tkey: '_kernel3DLoop',\n\t\tvalue: function _kernel3DLoop(kernelString) {\n\t\t\tvar threadDim = this.threadDim;\n\t\t\treturn '\\n    var result = new Array(' + threadDim[2] + ');\\n    ' + this._mapSubKernels(function (name) {\n\t\t\t\treturn 'var result_' + name + ' = new Array(' + threadDim[2] + ');\\n';\n\t\t\t}).join('') + '\\n    for (var z = 0; z < ' + threadDim[2] + '; z++) {\\n      this.thread.z = z;\\n      var resultY = result[z] = new Array(' + threadDim[1] + ');\\n      ' + this._mapSubKernels(function (name) {\n\t\t\t\treturn 'var result_' + name + 'Y = result_' + name + '[z] = new Array(' + threadDim[1] + ');\\n';\n\t\t\t}).join('') + '\\n      for (var y = 0; y < ' + threadDim[1] + '; y++) {\\n        this.thread.y = y;\\n        var resultX = resultY[y] = new Float32Array(' + threadDim[0] + ');\\n        ' + this._mapSubKernels(function (name) {\n\t\t\t\treturn 'var result_' + name + 'X = result_' + name + 'Y[y] = new Float32Array(' + threadDim[0] + ');\\n';\n\t\t\t}).join('') + '\\n        for (var x = 0; x < ' + threadDim[0] + '; x++) {\\n        \\tthis.thread.x = x;\\n          var kernelResult;\\n          ' + kernelString + '\\n          resultX[x] = kernelResult;\\n          ' + this._mapSubKernels(function (name) {\n\t\t\t\treturn 'result_' + name + 'X[x] = ' + name + ';\\n';\n\t\t\t}).join('') + '\\n        }\\n      }\\n    }';\n\t\t}\n\t}, {\n\t\tkey: '_kernelOutput',\n\t\tvalue: function _kernelOutput() {\n\t\t\tvar _this2 = this;\n\n\t\t\tif (!this.subKernelOutputVariableNames) {\n\t\t\t\treturn 'return result;';\n\t\t\t}\n\t\t\treturn 'return {\\n      result: result,\\n      ' + Object.keys(this.subKernelProperties || this.subKernelOutputVariableNames).map(function (name, i) {\n\t\t\t\treturn name + ': result_' + _this2.subKernelOutputVariableNames[i];\n\t\t\t}).join(',\\n') + '\\n    };';\n\t\t}\n\t}, {\n\t\tkey: '_mapSubKernels',\n\t\tvalue: function _mapSubKernels(fn) {\n\t\t\treturn this.subKernelOutputVariableNames === null ? [''] : this.subKernelOutputVariableNames.map(fn);\n\t\t}\n\t}]);\n\n\treturn CPUKernel;\n}(KernelBase);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar BaseFunctionNode = require('../function-node-base');\nvar utils = require('../../core/utils');\n\n/**\n * @class CPUFunctionNode\n *\n * @extends BaseFunctionNode#\n *\n * @desc [INTERNAL] Represents a single function, inside JS\n *\n * <p>This handles all the raw state, converted state, etc. Of a single function.</p>\n *\n * @prop functionName         - {String}        Name of the function\n * @prop jsFunction           - {Function}   The JS Function the node represents\n * @prop jsFunctionString     - {String}        jsFunction.toString()\n * @prop paramNames           - {String[]}  Parameter names of the function\n * @prop paramTypes           - {String[]}  Shader land parameters type assumption\n * @prop isRootKernel         - {Boolean}       Special indicator, for kernel function\n * @prop webglFunctionString  - {String}        webgl converted function string\n * @prop openglFunctionString - {String}        opengl converted function string\n * @prop calledFunctions      - {String[]}  List of all the functions called\n * @prop initVariables        - {String[]}  List of variables initialized in the function\n * @prop readVariables        - {String[]}  List of variables read operations occur\n * @prop writeVariables       - {String[]}  List of variables write operations occur\n *\n */\nmodule.exports = function (_BaseFunctionNode) {\n\t_inherits(CPUFunctionNode, _BaseFunctionNode);\n\n\tfunction CPUFunctionNode(functionName, jsFunction, options) {\n\t\t_classCallCheck(this, CPUFunctionNode);\n\n\t\tvar _this = _possibleConstructorReturn(this, (CPUFunctionNode.__proto__ || Object.getPrototypeOf(CPUFunctionNode)).call(this, functionName, jsFunction, options));\n\n\t\t_this.paramSizes = options ? options.paramSizes : [];\n\t\t_this.memberStates = [];\n\t\treturn _this;\n\t}\n\n\t_createClass(CPUFunctionNode, [{\n\t\tkey: 'pushMemberState',\n\t\tvalue: function pushMemberState(name) {\n\t\t\tthis.memberStates.push(name);\n\t\t}\n\t}, {\n\t\tkey: 'popMemberState',\n\t\tvalue: function popMemberState(name) {\n\t\t\tif (this.memberState === name) {\n\t\t\t\tthis.memberStates.pop();\n\t\t\t} else {\n\t\t\t\tthrow new Error('Cannot popMemberState ' + name + ' when in ' + this.memberState);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'generate',\n\t\tvalue: function generate() {\n\t\t\tif (this.debug) {\n\t\t\t\tconsole.log(this);\n\t\t\t}\n\t\t\tthis.functionStringArray = this.astGeneric(this.getJsAST(), []);\n\t\t\tthis.functionString = this.functionStringArray.join('').trim();\n\t\t\treturn this.functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name getFunctionPrototypeString\n   *\n   * @desc Returns the converted JS function\n   *\n   * @returns {String} function string, result is cached under this.getFunctionPrototypeString\n   *\n   */\n\n\t}, {\n\t\tkey: 'getFunctionPrototypeString',\n\t\tvalue: function getFunctionPrototypeString() {\n\t\t\tif (this.webGlFunctionPrototypeString) {\n\t\t\t\treturn this.webGlFunctionPrototypeString;\n\t\t\t}\n\t\t\treturn this.webGlFunctionPrototypeString = this.generate();\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astFunctionDeclaration\n   *\n   * @desc Parses the abstract syntax tree for to its *named function declaration*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astFunctionDeclaration',\n\t\tvalue: function astFunctionDeclaration(ast, retArr) {\n\t\t\tthis.builder.addFunction(null, utils.getAstString(this.jsFunctionString, ast));\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astFunctionPrototype\n   *\n   * @desc Parses the abstract syntax tree for to its *named function prototype*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astFunctionPrototype',\n\t\tvalue: function astFunctionPrototype(ast, retArr) {\n\t\t\t// Setup function return type and name\n\t\t\tif (this.isRootKernel || this.isSubKernel) {\n\t\t\t\treturn retArr;\n\t\t\t}\n\n\t\t\tretArr.push(this.returnType);\n\t\t\tretArr.push(' ');\n\t\t\tretArr.push(this.functionName);\n\t\t\tretArr.push('(');\n\n\t\t\t// Arguments handling\n\t\t\tfor (var i = 0; i < this.paramNames.length; ++i) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(', ');\n\t\t\t\t}\n\t\t\t\tretArr.push('user_');\n\t\t\t\tretArr.push(this.paramNames[i]);\n\t\t\t}\n\n\t\t\tretArr.push(');\\n');\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astFunctionExpression\n   *\n   * @desc Parses the abstract syntax tree for to its *named function*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astFunctionExpression',\n\t\tvalue: function astFunctionExpression(ast, retArr) {\n\n\t\t\t// Setup function return type and name\n\t\t\tif (!this.isRootKernel) {\n\t\t\t\tretArr.push('function');\n\t\t\t\tretArr.push(' ');\n\t\t\t\tretArr.push(this.functionName);\n\t\t\t\tretArr.push('(');\n\n\t\t\t\t// Arguments handling\n\t\t\t\tfor (var i = 0; i < this.paramNames.length; ++i) {\n\t\t\t\t\tvar paramName = this.paramNames[i];\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tretArr.push(', ');\n\t\t\t\t\t}\n\t\t\t\t\tretArr.push('user_');\n\t\t\t\t\tretArr.push(paramName);\n\t\t\t\t}\n\n\t\t\t\t// Function opening\n\t\t\t\tretArr.push(') {\\n');\n\t\t\t}\n\n\t\t\t// Body statement iteration\n\t\t\tfor (var _i = 0; _i < ast.body.body.length; ++_i) {\n\t\t\t\tthis.astGeneric(ast.body.body[_i], retArr);\n\t\t\t\tretArr.push('\\n');\n\t\t\t}\n\n\t\t\tif (!this.isRootKernel) {\n\t\t\t\t// Function closing\n\t\t\t\tretArr.push('}\\n');\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astReturnStatement\n   *\n   * @desc Parses the abstract syntax tree for to *return* statement\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astReturnStatement',\n\t\tvalue: function astReturnStatement(ast, retArr) {\n\t\t\tif (this.isRootKernel) {\n\t\t\t\tretArr.push('kernelResult = ');\n\t\t\t\tthis.astGeneric(ast.argument, retArr);\n\t\t\t\tretArr.push(';');\n\t\t\t} else if (this.isSubKernel) {\n\t\t\t\tretArr.push(this.functionName + 'Result = ');\n\t\t\t\tthis.astGeneric(ast.argument, retArr);\n\t\t\t\tretArr.push(';');\n\t\t\t\tretArr.push('return ' + this.functionName + 'Result;');\n\t\t\t} else {\n\t\t\t\tretArr.push('return ');\n\t\t\t\tthis.astGeneric(ast.argument, retArr);\n\t\t\t\tretArr.push(';');\n\t\t\t}\n\n\t\t\t//throw this.astErrorOutput(\n\t\t\t//\t'Non main function return, is not supported : '+this.currentFunctionNamespace,\n\t\t\t//\tast\n\t\t\t//);\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astLiteral\n   *\n   * @desc Parses the abstract syntax tree for *literal value*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astLiteral',\n\t\tvalue: function astLiteral(ast, retArr) {\n\n\t\t\t// Reject non numeric literals\n\t\t\tif (isNaN(ast.value)) {\n\t\t\t\tthrow this.astErrorOutput('Non-numeric literal not supported : ' + ast.value, ast);\n\t\t\t}\n\n\t\t\tretArr.push(ast.value);\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astBinaryExpression\n   *\n   * @desc Parses the abstract syntax tree for *binary* expression\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astBinaryExpression',\n\t\tvalue: function astBinaryExpression(ast, retArr) {\n\t\t\tretArr.push('(');\n\t\t\tthis.astGeneric(ast.left, retArr);\n\t\t\tretArr.push(ast.operator);\n\t\t\tthis.astGeneric(ast.right, retArr);\n\t\t\tretArr.push(')');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astIdentifierExpression\n   *\n   * @desc Parses the abstract syntax tree for *identifier* expression\n   *\n   * @param {Object} idtNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astIdentifierExpression',\n\t\tvalue: function astIdentifierExpression(idtNode, retArr) {\n\t\t\tif (idtNode.type !== 'Identifier') {\n\t\t\t\tthrow this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n\t\t\t}\n\n\t\t\tswitch (this.state) {\n\t\t\t\tcase 'input-index-y':\n\t\t\t\tcase 'input-index-z':\n\t\t\t\t\tretArr.push('(');\n\t\t\t}\n\n\t\t\tswitch (idtNode.name) {\n\t\t\t\tcase 'gpu_threadX':\n\t\t\t\t\tretArr.push('threadId.x');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadY':\n\t\t\t\t\tretArr.push('threadId.y');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadZ':\n\t\t\t\t\tretArr.push('threadId.z');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputX':\n\t\t\t\t\tretArr.push('uOutputDim.x');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputY':\n\t\t\t\t\tretArr.push('uOutputDim.y');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputZ':\n\t\t\t\t\tretArr.push('uOutputDim.z');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Infinity':\n\t\t\t\t\tretArr.push('Infinity');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (this.constants && this.constants.hasOwnProperty(idtNode.name)) {\n\t\t\t\t\t\tretArr.push('constants_' + idtNode.name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar userParamName = this.getUserParamName(idtNode.name);\n\t\t\t\t\t\tif (userParamName !== null) {\n\t\t\t\t\t\t\tretArr.push('user_' + userParamName);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tretArr.push('user_' + idtNode.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\tswitch (this.state) {\n\t\t\t\tcase 'input-index-y':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar size = this.paramSizes[this.paramNames.indexOf(this.memberState)];\n\t\t\t\t\t\tretArr.push(' * ' + size[0] + ')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'input-index-z':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar _size = this.paramSizes[this.paramNames.indexOf(this.memberState)];\n\t\t\t\t\t\tretArr.push(' * ' + _size[0] * _size[1] + ')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astForStatement\n   *\n   * @desc Parses the abstract syntax tree forfor *for-loop* expression\n   *\n   * @param {Object} forNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed cpu string\n   */\n\n\t}, {\n\t\tkey: 'astForStatement',\n\t\tvalue: function astForStatement(forNode, retArr) {\n\t\t\tif (forNode.type !== 'ForStatement') {\n\t\t\t\tthrow this.astErrorOutput('Invalid for statement', forNode);\n\t\t\t}\n\n\t\t\tif (forNode.test && forNode.test.type === 'BinaryExpression') {\n\t\t\t\tif ((forNode.test.right.type === 'Identifier' || forNode.test.right.type === 'Literal') && forNode.test.operator === '<' && this.isIdentifierConstant(forNode.test.right.name) === false) {\n\n\t\t\t\t\tif (!this.loopMaxIterations) {\n\t\t\t\t\t\tconsole.warn('Warning: loopMaxIterations is not set! Using default of 1000 which may result in unintended behavior.');\n\t\t\t\t\t\tconsole.warn('Set loopMaxIterations or use a for loop of fixed length to silence this message.');\n\t\t\t\t\t}\n\n\t\t\t\t\tretArr.push('for (');\n\t\t\t\t\tthis.astGeneric(forNode.init, retArr);\n\t\t\t\t\tif (retArr[retArr.length - 1] !== ';') {\n\t\t\t\t\t\tretArr.push(';');\n\t\t\t\t\t}\n\t\t\t\t\tthis.astGeneric(forNode.test.left, retArr);\n\t\t\t\t\tretArr.push(forNode.test.operator);\n\t\t\t\t\tretArr.push('LOOP_MAX');\n\t\t\t\t\tretArr.push(';');\n\t\t\t\t\tthis.astGeneric(forNode.update, retArr);\n\t\t\t\t\tretArr.push(')');\n\n\t\t\t\t\tretArr.push('{\\n');\n\t\t\t\t\tretArr.push('if (');\n\t\t\t\t\tthis.astGeneric(forNode.test.left, retArr);\n\t\t\t\t\tretArr.push(forNode.test.operator);\n\t\t\t\t\tthis.astGeneric(forNode.test.right, retArr);\n\t\t\t\t\tretArr.push(') {\\n');\n\t\t\t\t\tif (forNode.body.type === 'BlockStatement') {\n\t\t\t\t\t\tfor (var i = 0; i < forNode.body.body.length; i++) {\n\t\t\t\t\t\t\tthis.astGeneric(forNode.body.body[i], retArr);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.astGeneric(forNode.body, retArr);\n\t\t\t\t\t}\n\t\t\t\t\tretArr.push('} else {\\n');\n\t\t\t\t\tretArr.push('break;\\n');\n\t\t\t\t\tretArr.push('}\\n');\n\t\t\t\t\tretArr.push('}\\n');\n\n\t\t\t\t\treturn retArr;\n\t\t\t\t} else if (forNode.init.declarations) {\n\t\t\t\t\tvar declarations = JSON.parse(JSON.stringify(forNode.init.declarations));\n\t\t\t\t\tvar updateArgument = forNode.update.argument;\n\t\t\t\t\tif (!Array.isArray(declarations) || declarations.length < 1) {\n\t\t\t\t\t\tconsole.log(this.jsFunctionString);\n\t\t\t\t\t\tthrow new Error('Error: Incompatible for loop declaration');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (declarations.length > 1) {\n\t\t\t\t\t\tvar initArgument = null;\n\t\t\t\t\t\tfor (var _i2 = 0; _i2 < declarations.length; _i2++) {\n\t\t\t\t\t\t\tvar declaration = declarations[_i2];\n\t\t\t\t\t\t\tif (declaration.id.name === updateArgument.name) {\n\t\t\t\t\t\t\t\tinitArgument = declaration;\n\t\t\t\t\t\t\t\tdeclarations.splice(_i2, 1);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tretArr.push('var ');\n\t\t\t\t\t\t\t\tthis.astGeneric(declaration, retArr);\n\t\t\t\t\t\t\t\tretArr.push(';');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tretArr.push('for (let ');\n\t\t\t\t\t\tthis.astGeneric(initArgument, retArr);\n\t\t\t\t\t\tretArr.push(';');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tretArr.push('for (');\n\t\t\t\t\t\tthis.astGeneric(forNode.init, retArr);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.astGeneric(forNode.test, retArr);\n\t\t\t\t\tretArr.push(';');\n\t\t\t\t\tthis.astGeneric(forNode.update, retArr);\n\t\t\t\t\tretArr.push(')');\n\t\t\t\t\tthis.astGeneric(forNode.body, retArr);\n\t\t\t\t\treturn retArr;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow this.astErrorOutput('Invalid for statement', forNode);\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astWhileStatement\n   *\n   * @desc Parses the abstract syntax tree for *while* loop\n   *\n   *\n   * @param {Object} whileNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed openclgl string\n   */\n\n\t}, {\n\t\tkey: 'astWhileStatement',\n\t\tvalue: function astWhileStatement(whileNode, retArr) {\n\t\t\tif (whileNode.type !== 'WhileStatement') {\n\t\t\t\tthrow this.astErrorOutput('Invalid while statement', whileNode);\n\t\t\t}\n\n\t\t\tretArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n\t\t\tretArr.push('if (');\n\t\t\tthis.astGeneric(whileNode.test, retArr);\n\t\t\tretArr.push(') {\\n');\n\t\t\tthis.astGeneric(whileNode.body, retArr);\n\t\t\tretArr.push('} else {\\n');\n\t\t\tretArr.push('break;\\n');\n\t\t\tretArr.push('}\\n');\n\t\t\tretArr.push('}\\n');\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astWhileStatement\n   *\n   * @desc Parses the abstract syntax tree for *do while* loop\n   *\n   *\n   * @param {Object} doWhileNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed webgl string\n   */\n\n\t}, {\n\t\tkey: 'astDoWhileStatement',\n\t\tvalue: function astDoWhileStatement(doWhileNode, retArr) {\n\t\t\tif (doWhileNode.type !== 'DoWhileStatement') {\n\t\t\t\tthrow this.astErrorOutput('Invalid while statement', doWhileNode);\n\t\t\t}\n\n\t\t\tretArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n\t\t\tthis.astGeneric(doWhileNode.body, retArr);\n\t\t\tretArr.push('if (!');\n\t\t\tthis.astGeneric(doWhileNode.test, retArr);\n\t\t\tretArr.push(') {\\n');\n\t\t\tretArr.push('break;\\n');\n\t\t\tretArr.push('}\\n');\n\t\t\tretArr.push('}\\n');\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astAssignmentExpression\n   *\n   * @desc Parses the abstract syntax tree for *Assignment* Expression\n   *\n   * @param {Object} assNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astAssignmentExpression',\n\t\tvalue: function astAssignmentExpression(assNode, retArr) {\n\t\t\tthis.astGeneric(assNode.left, retArr);\n\t\t\tretArr.push(assNode.operator);\n\t\t\tthis.astGeneric(assNode.right, retArr);\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astEmptyStatement\n   *\n   * @desc Parses the abstract syntax tree for an *Empty* Statement\n   *\n   * @param {Object} eNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astEmptyStatement',\n\t\tvalue: function astEmptyStatement(eNode, retArr) {\n\t\t\t//retArr.push(';\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astBlockStatement\n   *\n   * @desc Parses the abstract syntax tree for *Block* statement\n   *\n   * @param {Object} bNode - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astBlockStatement',\n\t\tvalue: function astBlockStatement(bNode, retArr) {\n\t\t\tretArr.push('{\\n');\n\t\t\tfor (var i = 0; i < bNode.body.length; i++) {\n\t\t\t\tthis.astGeneric(bNode.body[i], retArr);\n\t\t\t}\n\t\t\tretArr.push('}\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astExpressionStatement\n   *\n   * @desc Parses the abstract syntax tree for *generic expression* statement\n   *\n   * @param {Object} esNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astExpressionStatement',\n\t\tvalue: function astExpressionStatement(esNode, retArr) {\n\t\t\tthis.astGeneric(esNode.expression, retArr);\n\t\t\tretArr.push(';');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astVariableDeclaration\n   *\n   * @desc Parses the abstract syntax tree for *Variable Declaration*\n   *\n   * @param {Object} vardecNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astVariableDeclaration',\n\t\tvalue: function astVariableDeclaration(vardecNode, retArr) {\n\t\t\tretArr.push('var ');\n\t\t\tfor (var i = 0; i < vardecNode.declarations.length; i++) {\n\t\t\t\tthis.declarations[vardecNode.declarations[i].id.name] = 'var';\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(',');\n\t\t\t\t}\n\t\t\t\tthis.astGeneric(vardecNode.declarations[i], retArr);\n\t\t\t}\n\t\t\tretArr.push(';');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astVariableDeclarator\n   *\n   * @desc Parses the abstract syntax tree for *Variable Declarator*\n   *\n   * @param {Object} ivardecNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astVariableDeclarator',\n\t\tvalue: function astVariableDeclarator(ivardecNode, retArr) {\n\t\t\tthis.astGeneric(ivardecNode.id, retArr);\n\t\t\tif (ivardecNode.init !== null) {\n\t\t\t\tretArr.push('=');\n\t\t\t\tthis.astGeneric(ivardecNode.init, retArr);\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astIfStatement\n   *\n   * @desc Parses the abstract syntax tree for *If* Statement\n   *\n   * @param {Object} ifNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astIfStatement',\n\t\tvalue: function astIfStatement(ifNode, retArr) {\n\t\t\tretArr.push('if (');\n\t\t\tthis.astGeneric(ifNode.test, retArr);\n\t\t\tretArr.push(')');\n\t\t\tif (ifNode.consequent.type === 'BlockStatement') {\n\t\t\t\tthis.astGeneric(ifNode.consequent, retArr);\n\t\t\t} else {\n\t\t\t\tretArr.push(' {\\n');\n\t\t\t\tthis.astGeneric(ifNode.consequent, retArr);\n\t\t\t\tretArr.push('\\n}\\n');\n\t\t\t}\n\n\t\t\tif (ifNode.alternate) {\n\t\t\t\tretArr.push('else ');\n\t\t\t\tif (ifNode.alternate.type === 'BlockStatement') {\n\t\t\t\t\tthis.astGeneric(ifNode.alternate, retArr);\n\t\t\t\t} else {\n\t\t\t\t\tretArr.push(' {\\n');\n\t\t\t\t\tthis.astGeneric(ifNode.alternate, retArr);\n\t\t\t\t\tretArr.push('\\n}\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astBreakStatement\n   *\n   * @desc Parses the abstract syntax tree for *Break* Statement\n   *\n   * @param {Object} brNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astBreakStatement',\n\t\tvalue: function astBreakStatement(brNode, retArr) {\n\t\t\tretArr.push('break;\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astContinueStatement\n   *\n   * @desc Parses the abstract syntax tree for *Continue* Statement\n   *\n   * @param {Object} crNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astContinueStatement',\n\t\tvalue: function astContinueStatement(crNode, retArr) {\n\t\t\tretArr.push('continue;\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astLogicalExpression\n   *\n   * @desc Parses the abstract syntax tree for *Logical* Expression\n   *\n   * @param {Object} logNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astLogicalExpression',\n\t\tvalue: function astLogicalExpression(logNode, retArr) {\n\t\t\tretArr.push('(');\n\t\t\tthis.astGeneric(logNode.left, retArr);\n\t\t\tretArr.push(logNode.operator);\n\t\t\tthis.astGeneric(logNode.right, retArr);\n\t\t\tretArr.push(')');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astUpdateExpression\n   *\n   * @desc Parses the abstract syntax tree for *Update* Expression\n   *\n   * @param {Object} uNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astUpdateExpression',\n\t\tvalue: function astUpdateExpression(uNode, retArr) {\n\t\t\tif (uNode.prefix) {\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t} else {\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astUnaryExpression\n   *\n   * @desc Parses the abstract syntax tree for *Unary* Expression\n   *\n   * @param {Object} uNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astUnaryExpression',\n\t\tvalue: function astUnaryExpression(uNode, retArr) {\n\t\t\tif (uNode.prefix) {\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t} else {\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astThisExpression\n   *\n   * @desc Parses the abstract syntax tree for *This* expression\n   *\n   * @param {Object} tNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astThisExpression',\n\t\tvalue: function astThisExpression(tNode, retArr) {\n\t\t\tretArr.push('_this');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astMemberExpression\n   *\n   * @desc Parses the abstract syntax tree for *Member* Expression\n   *\n   * @param {Object} mNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astMemberExpression',\n\t\tvalue: function astMemberExpression(mNode, retArr) {\n\t\t\tif (mNode.computed) {\n\t\t\t\tif (mNode.object.type === 'Identifier' || mNode.object.type === 'MemberExpression' && mNode.object.object.object && mNode.object.object.object.type === 'ThisExpression' && mNode.object.object.property.name === 'constants') {\n\t\t\t\t\tthis.pushState('identifier');\n\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\tthis.popState('identifier');\n\t\t\t\t\tretArr.push('[');\n\t\t\t\t\tif (this.isInput(mNode.object.name)) {\n\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t}\n\t\t\t\t\tretArr.push(']');\n\t\t\t\t} else {\n\t\t\t\t\tif (mNode.object.object) {\n\t\t\t\t\t\tif (mNode.object.object.object && this.isInput(mNode.object.object.object.name)) {\n\t\t\t\t\t\t\tthis.pushMemberState(mNode.object.object.object.name);\n\t\t\t\t\t\t\tthis.pushState('input-index-z');\n\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\tvar last = retArr.pop();\n\t\t\t\t\t\t\tretArr.push(' + ');\n\t\t\t\t\t\t\tthis.popState('input-index-z');\n\t\t\t\t\t\t\tthis.pushState('input-index');\n\t\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\t\tthis.popState('input-index');\n\t\t\t\t\t\t\tretArr.push(last);\n\t\t\t\t\t\t\tthis.popMemberState(mNode.object.object.object.name);\n\t\t\t\t\t\t} else if (this.isInput(mNode.object.object.name)) {\n\t\t\t\t\t\t\tthis.pushMemberState(mNode.object.object.name);\n\t\t\t\t\t\t\tif (!this.isState('input-index-z')) {\n\t\t\t\t\t\t\t\tthis.pushState('input-index-y');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\tvar _last = retArr.pop();\n\t\t\t\t\t\t\tretArr.push(' + ');\n\t\t\t\t\t\t\tif (!this.isState('input-index-z')) {\n\t\t\t\t\t\t\t\tthis.popState('input-index-y');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar isInputIndexZ = this.isState('input-index-z');\n\t\t\t\t\t\t\tif (isInputIndexZ) {\n\t\t\t\t\t\t\t\tthis.pushState('input-index-y');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.pushState('input-index');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\t\tif (isInputIndexZ) {\n\t\t\t\t\t\t\t\tthis.popState('input-index-y');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.popState('input-index');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tretArr.push(_last);\n\t\t\t\t\t\t\tthis.popMemberState(mNode.object.object.name);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\tvar _last2 = retArr.pop();\n\t\t\t\t\t\t\tretArr.push('][');\n\t\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\t\tretArr.push(_last2);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\tvar _last3 = retArr.pop();\n\t\t\t\t\t\tretArr.push('][');\n\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\tretArr.push(_last3);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar unrolled = this.astMemberExpressionUnroll(mNode);\n\t\t\t\tif (mNode.property.type === 'Identifier' && mNode.computed) {\n\t\t\t\t\tunrolled = 'user_' + unrolled;\n\t\t\t\t}\n\n\t\t\t\tif (unrolled.indexOf('this.constants') === 0) {\n\t\t\t\t\t// remove 'this.constants' from beginning\n\t\t\t\t\tunrolled = 'constants_' + unrolled.substring(15);\n\t\t\t\t} else if (unrolled.indexOf('this') === 0) {\n\t\t\t\t\t// Its a reference to `this`, add '_' before\n\t\t\t\t\tunrolled = '_' + unrolled;\n\t\t\t\t}\n\n\t\t\t\tswitch (this.state) {\n\t\t\t\t\tcase 'input-index-y':\n\t\t\t\t\tcase 'input-index-z':\n\t\t\t\t\t\tretArr.push('(');\n\t\t\t\t}\n\n\t\t\t\tswitch (unrolled) {\n\t\t\t\t\tcase '_this.output.x':\n\t\t\t\t\t\tretArr.push(this.output[0]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '_this.output.y':\n\t\t\t\t\t\tretArr.push(this.output[1]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '_this.output.z':\n\t\t\t\t\t\tretArr.push(this.output[2]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (mNode.object && mNode.object.name && this.declarations[mNode.object.name]) {\n\t\t\t\t\t\t\tretArr.push('user_');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tretArr.push(unrolled);\n\t\t\t\t}\n\n\t\t\t\tswitch (this.state) {\n\t\t\t\t\tcase 'input-index-y':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar size = this.paramSizes[this.paramNames.indexOf(this.memberState)];\n\t\t\t\t\t\t\tretArr.push(' * ' + size[0] + ')');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'input-index-z':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar _size2 = this.paramSizes[this.paramNames.indexOf(this.memberState)];\n\t\t\t\t\t\t\tretArr.push(' * ' + _size2[0] * _size2[1] + ')');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astSequenceExpression',\n\t\tvalue: function astSequenceExpression(sNode, retArr) {\n\t\t\tfor (var i = 0; i < sNode.expressions.length; i++) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(',');\n\t\t\t\t}\n\t\t\t\tthis.astGeneric(sNode.expressions, retArr);\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astCallExpression\n   *\n   * @desc Parses the abstract syntax tree for *call* expression\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns  {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astCallExpression',\n\t\tvalue: function astCallExpression(ast, retArr) {\n\t\t\tif (ast.callee) {\n\t\t\t\t// Get the full function call, unrolled\n\t\t\t\tvar funcName = this.astMemberExpressionUnroll(ast.callee);\n\n\t\t\t\t// Register the function into the called registry\n\t\t\t\tif (this.calledFunctions.indexOf(funcName) < 0) {\n\t\t\t\t\tthis.calledFunctions.push(funcName);\n\t\t\t\t}\n\t\t\t\tif (!this.hasOwnProperty('funcName')) {\n\t\t\t\t\tthis.calledFunctionsArguments[funcName] = [];\n\t\t\t\t}\n\n\t\t\t\tvar functionArguments = [];\n\t\t\t\tthis.calledFunctionsArguments[funcName].push(functionArguments);\n\n\t\t\t\t// Call the function\n\t\t\t\tretArr.push(funcName);\n\n\t\t\t\t// Open arguments space\n\t\t\t\tretArr.push('(');\n\n\t\t\t\t// Add the vars\n\t\t\t\tfor (var i = 0; i < ast.arguments.length; ++i) {\n\t\t\t\t\tvar argument = ast.arguments[i];\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tretArr.push(', ');\n\t\t\t\t\t}\n\t\t\t\t\tthis.astGeneric(argument, retArr);\n\t\t\t\t\tif (argument.type === 'Identifier') {\n\t\t\t\t\t\tvar paramIndex = this.paramNames.indexOf(argument.name);\n\t\t\t\t\t\tif (paramIndex === -1) {\n\t\t\t\t\t\t\tfunctionArguments.push(null);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfunctionArguments.push({\n\t\t\t\t\t\t\t\tname: argument.name,\n\t\t\t\t\t\t\t\ttype: this.paramTypes[paramIndex]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfunctionArguments.push(null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Close arguments space\n\t\t\t\tretArr.push(')');\n\n\t\t\t\treturn retArr;\n\t\t\t}\n\n\t\t\t// Failure, unknown expression\n\t\t\tthrow this.astErrorOutput('Unknown CallExpression', ast);\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astArrayExpression\n   *\n   * @desc Parses the abstract syntax tree for *Array* Expression\n   *\n   * @param {Object} arrNode - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astArrayExpression',\n\t\tvalue: function astArrayExpression(arrNode, retArr) {\n\t\t\tvar arrLen = arrNode.elements.length;\n\n\t\t\tretArr.push('[');\n\t\t\tfor (var i = 0; i < arrLen; ++i) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(', ');\n\t\t\t\t}\n\t\t\t\tvar subNode = arrNode.elements[i];\n\t\t\t\tthis.astGeneric(subNode, retArr);\n\t\t\t}\n\t\t\tretArr.push(']');\n\n\t\t\treturn retArr;\n\n\t\t\t// // Failure, unknown expression\n\t\t\t// throw this.astErrorOutput(\n\t\t\t// \t'Unknown  ArrayExpression',\n\t\t\t// \tarrNode\n\t\t\t//);\n\t\t}\n\t}, {\n\t\tkey: 'astDebuggerStatement',\n\t\tvalue: function astDebuggerStatement(arrNode, retArr) {\n\t\t\tretArr.push('debugger;');\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'memberState',\n\t\tget: function get() {\n\t\t\treturn this.memberStates[this.memberStates.length - 1];\n\t\t}\n\t}]);\n\n\treturn CPUFunctionNode;\n}(BaseFunctionNode);","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FunctionBuilderBase = require('../function-builder-base');\nvar CPUFunctionNode = require('./function-node');\n\n/**\n * @class CPUFunctionBuilder\n *\n * @extends FunctionBuilderBase\n *\n * @desc Builds functions to execute on CPU from JavaScript function Strings\n *\n */\nmodule.exports = function (_FunctionBuilderBase) {\n  _inherits(CPUFunctionBuilder, _FunctionBuilderBase);\n\n  function CPUFunctionBuilder() {\n    _classCallCheck(this, CPUFunctionBuilder);\n\n    var _this = _possibleConstructorReturn(this, (CPUFunctionBuilder.__proto__ || Object.getPrototypeOf(CPUFunctionBuilder)).call(this));\n\n    _this.Node = CPUFunctionNode;\n    return _this;\n  }\n\n  return CPUFunctionBuilder;\n}(FunctionBuilderBase);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar utils = require('../../core/utils');\nvar RunnerBase = require('../runner-base');\nvar CPUKernel = require('./kernel');\nvar CPUFunctionBuilder = require('./function-builder');\n\nmodule.exports = function (_RunnerBase) {\n\t_inherits(CPURunner, _RunnerBase);\n\n\t/**\n  * @constructor CPURunner\n  *\n  * @desc Instantiates a Runner instance for the kernel.\n  * \n  * @extends RunnerBase\n  *\n  * @param {Object} settings - Settings to instantiate properties in RunnerBase, with given values\n  *\n  */\n\n\tfunction CPURunner(settings) {\n\t\t_classCallCheck(this, CPURunner);\n\n\t\tvar _this = _possibleConstructorReturn(this, (CPURunner.__proto__ || Object.getPrototypeOf(CPURunner)).call(this, new CPUFunctionBuilder(), settings));\n\n\t\t_this.Kernel = CPUKernel;\n\t\t_this.kernel = null;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @memberOf CPURunner#\n  * @function\n  * @name getMode()\n  *\n  * Return the current mode in which gpu.js is executing.\n  * \n  * @returns {String} The current mode; \"cpu\".\n  *\n  */\n\n\n\t_createClass(CPURunner, [{\n\t\tkey: 'getMode',\n\t\tvalue: function getMode() {\n\t\t\treturn 'cpu';\n\t\t}\n\t}]);\n\n\treturn CPURunner;\n}(RunnerBase);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WebGLKernel = require('./kernel');\nvar utils = require('../../core/utils');\n\n/**\n * @class WebGLValidatorKernel\n *\n * @desc Helper class for WebGLKernel to validate texture size and dimensions.\n *\n */\nmodule.exports = function (_WebGLKernel) {\n\t_inherits(WebGLValidatorKernel, _WebGLKernel);\n\n\tfunction WebGLValidatorKernel() {\n\t\t_classCallCheck(this, WebGLValidatorKernel);\n\n\t\treturn _possibleConstructorReturn(this, (WebGLValidatorKernel.__proto__ || Object.getPrototypeOf(WebGLValidatorKernel)).apply(this, arguments));\n\t}\n\n\t_createClass(WebGLValidatorKernel, [{\n\t\tkey: 'validateOptions',\n\n\n\t\t/** \n   * @memberOf WebGLValidatorKernel#\n   * @function\n   * @name validateOptions\n   *\n   */\n\t\tvalue: function validateOptions() {\n\t\t\tthis.texSize = utils.dimToTexSize({\n\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t}, this.output, true);\n\t\t}\n\t}]);\n\n\treturn WebGLValidatorKernel;\n}(WebGLKernel);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WebGLKernel = require('./kernel');\nvar utils = require('../../core/utils');\n\n/**\n * @class WebGLValidatorKernel\n *\n * @desc Helper class for WebGLKernel to validate texture size and dimensions.\n *\n */\nmodule.exports = function (_WebGLKernel) {\n\t_inherits(WebGL2ValidatorKernel, _WebGLKernel);\n\n\tfunction WebGL2ValidatorKernel() {\n\t\t_classCallCheck(this, WebGL2ValidatorKernel);\n\n\t\treturn _possibleConstructorReturn(this, (WebGL2ValidatorKernel.__proto__ || Object.getPrototypeOf(WebGL2ValidatorKernel)).apply(this, arguments));\n\t}\n\n\t_createClass(WebGL2ValidatorKernel, [{\n\t\tkey: 'validateOptions',\n\n\n\t\t/** \n   * @memberOf WebGLValidatorKernel#\n   * @function\n   * @name validateOptions\n   *\n   */\n\t\tvalue: function validateOptions() {\n\t\t\tthis._webGl.getExtension('EXT_color_buffer_float');\n\t\t\tthis.texSize = utils.dimToTexSize({\n\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t}, this.output, true);\n\t\t}\n\t}]);\n\n\treturn WebGL2ValidatorKernel;\n}(WebGLKernel);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UtilsCore = require(\"./utils-core\");\n\n/**\n * This is a minimalistic version of GPU.js used \n * to run precompiled GPU.JS code.\n *\n * This intentionally excludes the JS AST compiller : which is 400kb alone/\n *\n * @class GPUCore\n */\nmodule.exports = function () {\n\tfunction GPUCore() {\n\t\t_classCallCheck(this, GPUCore);\n\t}\n\n\t_createClass(GPUCore, null, [{\n\t\tkey: \"validateKernelObj\",\n\n\n\t\t/**\n   * @name validateKernelObj\n   * @function\n   * @static\n   * @memberOf GPUCore\n   *\n   * @description Validates the KernelObj to comply with the defined format\n   * Note that this does only a limited sanity check, and does not  \n   * guarantee a full working validation.\n   *\n   * For the kernel object format see : <kernelObj-format>\n   *\n   * @param {Object|String} kernelObj - KernelObj used to validate\n   *\n   * @returns {Object} The validated kernel object, converted from JSON if needed\n   *\n   */\n\t\tvalue: function validateKernelObj(kernelObj) {\n\n\t\t\t// NULL validation\n\t\t\tif (kernelObj === null) {\n\t\t\t\tthrow \"KernelObj being validated is NULL\";\n\t\t\t}\n\n\t\t\t// String JSON conversion\n\t\t\tif (typeof kernelObj === \"string\") {\n\t\t\t\ttry {\n\t\t\t\t\tkernelObj = JSON.parse(kernelObj);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t\tthrow \"Failed to convert KernelObj from JSON string\";\n\t\t\t\t}\n\n\t\t\t\t// NULL validation\n\t\t\t\tif (kernelObj === null) {\n\t\t\t\t\tthrow \"Invalid (NULL) KernelObj JSON string representation\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check for kernel obj flag\n\t\t\tif (kernelObj.isKernelObj !== true) {\n\t\t\t\tthrow \"Failed missing isKernelObj flag check\";\n\t\t\t}\n\n\t\t\t// Return the validated kernelObj\n\t\t\treturn kernelObj;\n\t\t}\n\n\t\t/**\n   * @name loadKernelObj\n   * @function\n   * @static\n   * @memberOf GPUCore\n   *\n   * @description Loads the precompiled kernel object. For GPUCore this is the ONLY way to create the kernel.\n   * To generate the kernelObj use <Kernel.exportKernelObj>\n   *\n   * Note that this function calls <validateKernelObj> internally, and throws an exception if it fails.\n   *\n   * @see GPUCore.validateKernelObj\n   * @see\tKernel.exportKernelObj\n   *\n   * @param {Object} kernelObj - The precompiled kernel object\n   * @param {Object} inOpt - [Optional] the option overrides to use\n   *\n   * @returns {Function} The kernel function\n   * \n   */\n\n\t}, {\n\t\tkey: \"loadKernelObj\",\n\t\tvalue: function loadKernelObj(kernelObj, inOpt) {\n\n\t\t\t// Validates the kernelObj, throws an exception if it fails\n\t\t\tkernelObj = validateKernelObj(kernelObj);\n\t\t}\n\t}]);\n\n\treturn GPUCore;\n}();","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar utils = require('./utils');\nvar WebGLRunner = require('../backend/web-gl/runner');\nvar WebGL2Runner = require('../backend/web-gl2/runner');\nvar CPURunner = require('../backend/cpu/runner');\nvar WebGLValidatorKernel = require('../backend/web-gl/validator-kernel');\nvar WebGL2ValidatorKernel = require('../backend/web-gl2/validator-kernel');\nvar GPUCore = require(\"./gpu-core\");\n\n/**\n * Initialises the GPU.js library class which manages the webGlContext for the created functions.\n * @class\n * @extends GPUCore\n */\n\nvar GPU = function (_GPUCore) {\n\t_inherits(GPU, _GPUCore);\n\n\t/**\n  * Creates an instance of GPU.\n  * @param {any} settings - Settings to set mode, andother properties. See #GPUCore\n  * @memberOf GPU#\n  */\n\tfunction GPU(settings) {\n\t\t_classCallCheck(this, GPU);\n\n\t\tvar _this = _possibleConstructorReturn(this, (GPU.__proto__ || Object.getPrototypeOf(GPU)).call(this, settings));\n\n\t\tsettings = settings || {};\n\t\t_this._canvas = settings.canvas || null;\n\t\t_this._webGl = settings.webGl || null;\n\t\tvar mode = settings.mode;\n\t\tvar detectedMode = void 0;\n\t\tif (!utils.isWebGlSupported()) {\n\t\t\tif (mode && mode !== 'cpu') {\n\t\t\t\tthrow new Error('A requested mode of \"' + mode + '\" and is not supported');\n\t\t\t} else {\n\t\t\t\tconsole.warn('Warning: gpu not supported, falling back to cpu support');\n\t\t\t\tdetectedMode = 'cpu';\n\t\t\t}\n\t\t} else {\n\t\t\tif (_this._webGl) {\n\t\t\t\tif (typeof WebGL2RenderingContext !== 'undefined' && _this._webGl.constructor === WebGL2RenderingContext) {\n\t\t\t\t\tdetectedMode = 'webgl2';\n\t\t\t\t} else if (typeof WebGLRenderingContext !== 'undefined' && _this._webGl.constructor === WebGLRenderingContext) {\n\t\t\t\t\tdetectedMode = 'webgl';\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('unknown WebGL Context');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdetectedMode = mode || 'gpu';\n\t\t\t}\n\t\t}\n\t\t_this.kernels = [];\n\n\t\tvar runnerSettings = {\n\t\t\tcanvas: _this._canvas,\n\t\t\twebGl: _this._webGl\n\t\t};\n\n\t\tswitch (detectedMode) {\n\t\t\t// public options\n\t\t\tcase 'cpu':\n\t\t\t\t_this._runner = new CPURunner(runnerSettings);\n\t\t\t\tbreak;\n\t\t\tcase 'gpu':\n\t\t\t\tvar Runner = _this.getGPURunner();\n\t\t\t\t_this._runner = new Runner(runnerSettings);\n\t\t\t\tbreak;\n\n\t\t\t// private explicit options for testing\n\t\t\tcase 'webgl2':\n\t\t\t\t_this._runner = new WebGL2Runner(runnerSettings);\n\t\t\t\tbreak;\n\t\t\tcase 'webgl':\n\t\t\t\t_this._runner = new WebGLRunner(runnerSettings);\n\t\t\t\tbreak;\n\n\t\t\t// private explicit options for internal\n\t\t\tcase 'webgl2-validator':\n\t\t\t\t_this._runner = new WebGL2Runner(runnerSettings);\n\t\t\t\t_this._runner.Kernel = WebGL2ValidatorKernel;\n\t\t\t\tbreak;\n\t\t\tcase 'webgl-validator':\n\t\t\t\t_this._runner = new WebGLRunner(runnerSettings);\n\t\t\t\t_this._runner.Kernel = WebGLValidatorKernel;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('\"' + mode + '\" mode is not defined');\n\t\t}\n\t\treturn _this;\n\t}\n\t/**\n  *\n  * This creates a callable function object to call the kernel function with the argument parameter set\n  *\n  * @name createKernel\n  * @function\n  * @memberOf GPU##\n  *\n  * @param {Function} fn - The calling to perform the conversion\n  * @param {Object} [settings] - The parameter configuration object\n  * @property {String} settings.dimensions - Thread dimension array (Defaults to [1024])\n  * @property {String} settings.mode - CPU / GPU configuration mode (Defaults to null)\n  *\n  * The following modes are supported\n  * *'falsey'* : Attempts to build GPU mode, else fallbacks\n  * *'gpu'* : Attempts to build GPU mode, else fallbacks\n  * *'cpu'* : Forces JS fallback mode only\n  *\n  *\n  * @returns {Function} callable function to run\n  *\n  */\n\n\n\t_createClass(GPU, [{\n\t\tkey: 'createKernel',\n\t\tvalue: function createKernel(fn, settings) {\n\t\t\t//\n\t\t\t// basic parameters safety checks\n\t\t\t//\n\t\t\tif (typeof fn === 'undefined') {\n\t\t\t\tthrow 'Missing fn parameter';\n\t\t\t}\n\t\t\tif (!utils.isFunction(fn) && typeof fn !== 'string') {\n\t\t\t\tthrow 'fn parameter not a function';\n\t\t\t}\n\n\t\t\tvar mergedSettings = Object.assign({\n\t\t\t\twebGl: this._webGl,\n\t\t\t\tcanvas: this._canvas\n\t\t\t}, settings || {});\n\n\t\t\tvar kernel = this._runner.buildKernel(fn, mergedSettings);\n\n\t\t\t//if canvas didn't come from this, propagate from kernel\n\t\t\tif (!this._canvas) {\n\t\t\t\tthis._canvas = kernel.getCanvas();\n\t\t\t}\n\t\t\tif (!this._runner.canvas) {\n\t\t\t\tthis._runner.canvas = kernel.getCanvas();\n\t\t\t}\n\n\t\t\tthis.kernels.push(kernel);\n\n\t\t\treturn kernel;\n\t\t}\n\n\t\t/**\n   *\n   * Create a super kernel which executes sub kernels\n   * and saves their output to be used with the next sub kernel.\n   * This can be useful if we want to save the output on one kernel,\n   * and then use it as an input to another kernel. *Machine Learning*\n   *\n   * @name createKernelMap\n   * @function\n   * @memberOf GPU#\n   *\n   * @param {Object|Array} subKernels - Sub kernels for this kernel\n   * @param {Function} rootKernel - Root kernel\n   *\n   * @returns {Function} callable kernel function\n   *\n   * @example\n   * const megaKernel = gpu.createKernelMap({\n   *   addResult: function add(a, b) {\n   *     return a[this.thread.x] + b[this.thread.x];\n   *   },\n   *   multiplyResult: function multiply(a, b) {\n   *     return a[this.thread.x] * b[this.thread.x];\n   *   },\n   *  }, function(a, b, c) {\n   *       return multiply(add(a, b), c);\n   * });\n   *\n   * megaKernel(a, b, c);\n   *\n   * Note: You can also define subKernels as an array of functions.\n   * > [add, multiply]\n   *\n   */\n\n\t}, {\n\t\tkey: 'createKernelMap',\n\t\tvalue: function createKernelMap() {\n\t\t\tvar fn = void 0;\n\t\t\tvar settings = void 0;\n\t\t\tif (typeof arguments[arguments.length - 2] === 'function') {\n\t\t\t\tfn = arguments[arguments.length - 2];\n\t\t\t\tsettings = arguments[arguments.length - 1];\n\t\t\t} else {\n\t\t\t\tfn = arguments[arguments.length - 1];\n\t\t\t}\n\n\t\t\tif (!utils.isWebGlDrawBuffersSupported()) {\n\t\t\t\tthis._runner = new CPURunner(settings);\n\t\t\t}\n\n\t\t\tvar kernel = this.createKernel(fn, settings);\n\t\t\tif (Array.isArray(arguments[0])) {\n\t\t\t\tvar functions = arguments[0];\n\t\t\t\tfor (var i = 0; i < functions.length; i++) {\n\t\t\t\t\tkernel.addSubKernel(functions[i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar _functions = arguments[0];\n\t\t\t\tfor (var p in _functions) {\n\t\t\t\t\tif (!_functions.hasOwnProperty(p)) continue;\n\t\t\t\t\tkernel.addSubKernelProperty(p, _functions[p]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn kernel;\n\t\t}\n\n\t\t/**\n   *\n   * Combine different kernels into one super Kernel,\n   * useful to perform multiple operations inside one\n   * kernel without the penalty of data transfer between\n   * cpu and gpu.\n   *\n   * The number of kernel functions sent to this method can be variable.\n   * You can send in one, two, etc.\n   *\n   * @name combineKernels\n   * @function\n   * @memberOf GPU#\n   *\n   * @param {Function} subKernels - Kernel function(s) to combine.\n   * @param {Function} rootKernel - Root kernel to combine kernels into\n   *\n   * @example\n   * \tcombineKernels(add, multiply, function(a,b,c){\n   *\t \treturn add(multiply(a,b), c)\n   *\t})\n   *\n   * @returns {Function} Callable kernel function\n   *\n   */\n\n\t}, {\n\t\tkey: 'combineKernels',\n\t\tvalue: function combineKernels() {\n\t\t\tvar lastKernel = arguments[arguments.length - 2];\n\t\t\tvar combinedKernel = arguments[arguments.length - 1];\n\t\t\tif (this.getMode() === 'cpu') return combinedKernel;\n\n\t\t\tvar canvas = arguments[0].getCanvas();\n\t\t\tvar webGl = arguments[0].getWebGl();\n\n\t\t\tfor (var i = 0; i < arguments.length - 1; i++) {\n\t\t\t\targuments[i].setCanvas(canvas).setWebGl(webGl).setOutputToTexture(true);\n\t\t\t}\n\n\t\t\treturn function () {\n\t\t\t\tcombinedKernel.apply(null, arguments);\n\t\t\t\tvar texSize = lastKernel.texSize;\n\t\t\t\tvar gl = lastKernel.getWebGl();\n\t\t\t\tvar threadDim = lastKernel.threadDim;\n\t\t\t\tvar result = void 0;\n\t\t\t\tif (lastKernel.floatOutput) {\n\t\t\t\t\tvar w = texSize[0];\n\t\t\t\t\tvar h = Math.ceil(texSize[1] / 4);\n\t\t\t\t\tresult = new Float32Array(w * h * 4);\n\t\t\t\t\tgl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\n\t\t\t\t} else {\n\t\t\t\t\tvar bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\n\t\t\t\t\tgl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, bytes);\n\t\t\t\t\tresult = new Float32Array(bytes.buffer);\n\t\t\t\t}\n\n\t\t\t\tresult = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\n\n\t\t\t\tif (lastKernel.output.length === 1) {\n\t\t\t\t\treturn result;\n\t\t\t\t} else if (lastKernel.output.length === 2) {\n\t\t\t\t\treturn utils.splitArray(result, lastKernel.output[0]);\n\t\t\t\t} else if (lastKernel.output.length === 3) {\n\t\t\t\t\tvar cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]);\n\t\t\t\t\treturn cube.map(function (x) {\n\t\t\t\t\t\treturn utils.splitArray(x, lastKernel.output[0]);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: 'getGPURunner',\n\t\tvalue: function getGPURunner() {\n\t\t\tif (typeof WebGL2RenderingContext !== 'undefined' && utils.isWebGl2Supported()) return WebGL2Runner;\n\t\t\tif (typeof WebGLRenderingContext !== 'undefined') return WebGLRunner;\n\t\t}\n\n\t\t/**\n   *\n   * Adds additional functions, that the kernel may call.\n   *\n   * @name addFunction\n   * @function\n   * @memberOf GPU#\n   *\n   * @param {Function|String} fn - JS Function to do conversion\n   * @param {Object} options\n   *\n   * @returns {GPU} returns itself\n   *\n   */\n\n\t}, {\n\t\tkey: 'addFunction',\n\t\tvalue: function addFunction(fn, options) {\n\t\t\tthis._runner.functionBuilder.addFunction(null, fn, options);\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   *\n   * Adds additional native functions, that the kernel may call.\n   *\n   * @name addNativeFunction\n   * @function\n   * @memberOf GPU#\n   *\n   * @param {String} name - native function name, used for reverse lookup\n   * @param {String} nativeFunction - the native function implementation, as it would be defined in it's entirety\n   *\n   * @returns {GPU} returns itself\n   *\n   */\n\n\t}, {\n\t\tkey: 'addNativeFunction',\n\t\tvalue: function addNativeFunction(name, nativeFunction) {\n\t\t\tthis._runner.functionBuilder.addNativeFunction(name, nativeFunction);\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   *\n   * Return the current mode in which gpu.js is executing.\n   * @name getMode\n   * @function\n   * @memberOf GPU#\n   *\n   * @returns {String} The current mode, \"cpu\", \"webgl\", etc.\n   *\n   */\n\n\t}, {\n\t\tkey: 'getMode',\n\t\tvalue: function getMode() {\n\t\t\treturn this._runner.getMode();\n\t\t}\n\n\t\t/**\n   *\n   * Return TRUE, if browser supports WebGl AND Canvas\n   *\n   * @name get isWebGlSupported\n   * @function\n   * @memberOf GPU#\n   *\n   * Note: This function can also be called directly `GPU.isWebGlSupported()`\n   *\n   * @returns {Boolean} TRUE if browser supports webGl\n   *\n   */\n\n\t}, {\n\t\tkey: 'isWebGlSupported',\n\t\tvalue: function isWebGlSupported() {\n\t\t\treturn utils.isWebGlSupported();\n\t\t}\n\n\t\t/**\n   *\n   * Return TRUE, if system has integer division accuracy issue\n   *\n   * @name get hasIntegerDivisionAccuracyBug\n   * @function\n   * @memberOf GPU#\n   *\n   * Note: This function can also be called directly `GPU.hasIntegerDivisionAccuracyBug()`\n   *\n   * @returns {Boolean} TRUE if system has integer division accuracy issue\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'hasIntegerDivisionAccuracyBug',\n\t\tvalue: function hasIntegerDivisionAccuracyBug() {\n\t\t\treturn utils.hasIntegerDivisionAccuracyBug();\n\t\t}\n\n\t\t/**\n   *\n   * Return the canvas object bound to this gpu instance.\n   *\n   * @name getCanvas\n   * @function\n   * @memberOf GPU#\n   *\n   * @returns {Object} Canvas object if present\n   *\n   */\n\n\t}, {\n\t\tkey: 'getCanvas',\n\t\tvalue: function getCanvas() {\n\t\t\treturn this._canvas;\n\t\t}\n\n\t\t/**\n   *\n   * Return the webGl object bound to this gpu instance.\n   *\n   * @name getWebGl\n   * @function\n   * @memberOf GPU#\n   *\n   * @returns {Object} WebGl object if present\n   *\n   */\n\n\t}, {\n\t\tkey: 'getWebGl',\n\t\tvalue: function getWebGl() {\n\t\t\treturn this._webGl;\n\t\t}\n\n\t\t/**\n   *\n   * Destroys all memory associated with gpu.js & the webGl if we created it\n   *\n   * @name destroy\n   * @function\n   * @memberOf GPU#\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tvar _this2 = this;\n\n\t\t\t// perform on next runloop - for some reason we dont get lose context events \n\t\t\t// if webGl is created and destroyed in the same run loop.\n\t\t\tsetTimeout(function () {\n\t\t\t\tvar kernels = _this2.kernels;\n\n\t\t\t\tvar destroyWebGl = !_this2._webGl && kernels.length && kernels[0]._webGl;\n\t\t\t\tfor (var i = 0; i < _this2.kernels.length; i++) {\n\t\t\t\t\t_this2.kernels[i].destroy(true); // remove canvas if exists\n\t\t\t\t}\n\n\t\t\t\tif (destroyWebGl) {\n\t\t\t\t\tdestroyWebGl.OES_texture_float = null;\n\t\t\t\t\tdestroyWebGl.OES_texture_float_linear = null;\n\t\t\t\t\tdestroyWebGl.OES_element_index_uint = null;\n\t\t\t\t\tvar loseContextExt = destroyWebGl.getExtension('WEBGL_lose_context');\n\t\t\t\t\tif (loseContextExt) {\n\t\t\t\t\t\tloseContextExt.loseContext();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}\n\t}]);\n\n\treturn GPU;\n}(GPUCore);\n\n;\n\n// This ensure static methods are \"inherited\"\n// See: https://stackoverflow.com/questions/5441508/how-to-inherit-static-methods-from-base-class-in-javascript\nObject.assign(GPU, GPUCore);\n\nmodule.exports = GPU;","'use strict';\n\nvar utils = require('./utils');\nmodule.exports = function alias(name, fn) {\n\tvar fnString = fn.toString();\n\treturn new Function('return function ' + name + ' (' + utils.getParamNamesFromString(fnString).join(', ') + ') {' + utils.getFunctionBodyFromString(fnString) + '}')();\n};","'use strict';\n\nvar GPU = require('./core/gpu');\nvar alias = require('./core/alias');\nvar utils = require('./core/utils');\nvar Input = require('./core/input');\nvar Texture = require('./core/texture');\n\nvar CPUFunctionBuilder = require('./backend/cpu/function-builder');\nvar CPUFunctionNode = require('./backend/cpu/function-node');\nvar CPUKernel = require('./backend/cpu/kernel');\nvar CPURunner = require('./backend/cpu/runner');\n\nvar WebGLFunctionBuilder = require('./backend/web-gl/function-builder');\nvar WebGLFunctionNode = require('./backend/web-gl/function-node');\nvar WebGLKernel = require('./backend/web-gl/kernel');\nvar WebGLRunner = require('./backend/web-gl/runner');\n\nvar WebGL2FunctionBuilder = require('./backend/web-gl2/function-builder');\nvar WebGL2FunctionNode = require('./backend/web-gl2/function-node');\nvar WebGL2Kernel = require('./backend/web-gl2/kernel');\nvar WebGL2Runner = require('./backend/web-gl2/runner');\n\nGPU.alias = alias;\nGPU.utils = utils;\nGPU.Texture = Texture;\nGPU.Input = Input;\nGPU.input = function (value, size) {\n\treturn new Input(value, size);\n};\n\nGPU.CPUFunctionBuilder = CPUFunctionBuilder;\nGPU.CPUFunctionNode = CPUFunctionNode;\nGPU.CPUKernel = CPUKernel;\nGPU.CPURunner = CPURunner;\n\nGPU.WebGLFunctionBuilder = WebGLFunctionBuilder;\nGPU.WebGLFunctionNode = WebGLFunctionNode;\nGPU.WebGLKernel = WebGLKernel;\nGPU.WebGLRunner = WebGLRunner;\n\nGPU.WebGL2FunctionBuilder = WebGL2FunctionBuilder;\nGPU.WebGL2FunctionNode = WebGL2FunctionNode;\nGPU.WebGL2Kernel = WebGL2Kernel;\nGPU.WebGL2Runner = WebGL2Runner;\n\nif (typeof module !== 'undefined') {\n\tmodule.exports = GPU;\n}\nif (typeof window !== 'undefined') {\n\twindow.GPU = GPU;\n}\nif (typeof self !== 'undefined') {\n\tself.GPU = GPU;\n}","import GPU from 'gpu.js'\n\nfunction myMod (number, limit) {\n  if (number < 0) {\n    return number + limit\n  }\n  return (number % limit)\n}\n\nfunction myKernel (field, width, height, states) {\n  // what a mess\n  const ver = this.thread.x\n  const hor = this.thread.y\n  const element = field[hor][ver]\n  const plusOne = myMod(element + 1, states)\n\n  let next = myMod(hor - 1, width)\n  if (field[next][ver] === plusOne) {\n    return plusOne\n  }\n\n  next = myMod(hor + 1, width)\n  if (field[next][ver] === plusOne) {\n    return plusOne\n  }\n\n  next = myMod(ver - 1, height)\n  if (field[hor][next] === plusOne) {\n    return plusOne\n  }\n\n  next = myMod(ver + 1, height)\n  if (field[hor][next] === plusOne) {\n    return plusOne\n  }\n\n  return element\n}\n\nconst gpu = new GPU()\n\nexport const makeGetUpdatedField = (fieldWidth, fieldHeight) => gpu\n  .createKernel(myKernel)\n  .setOutput([fieldHeight, fieldWidth]) // more of the mess\n  .setFunctions([myMod])\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Connector, Input } from 'state-control'\nimport { DEFAULT, IDS, SPACE_CODE, STATUSES } from '../constants'\nimport style from '../common/GriffeathMachine.css'\nimport CanvasField from '../common/CanvasField'\nimport { getRandomField } from '../common/utils'\nimport { makeGetUpdatedField } from './gpu-utils'\n\nexport default class GriffeathMachine extends PureComponent {\n  static propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    states: PropTypes.number.isRequired,\n  }\n\n  static defaultProps = { ...DEFAULT }\n\n  state = {\n    width: this.props.width,\n    height: this.props.height,\n    states: this.props.states,\n    status: STATUSES.pause,\n  }\n\n  field = null\n\n  canvas = React.createRef()\n\n  componentWillMount () {\n    this.randomizeField()\n    this.handlePlay()\n    document.addEventListener('keydown', this.processKey)\n    this.updateFieldSize({})\n  }\n\n  componentWillUnmount () {\n    cancelAnimationFrame(this.requestID)\n  }\n\n  getActionName = () => (this.state.status === STATUSES.play ? STATUSES.pause : STATUSES.play)\n\n  randomizeField = () => {\n    this.field = getRandomField(this.state)\n  }\n\n  processKey = (e) => {\n    if (e.keyCode === SPACE_CODE) {\n      e.preventDefault()\n      this.handlePlay()\n    }\n  }\n\n  updateFieldSize = ({ width = this.props.width, height = this.props.height }) => {\n    this.fieldUpdater = makeGetUpdatedField(width, height)\n  }\n\n  getUpdatedField = () => {\n    const { width, height, states } = this.state\n    return this.fieldUpdater(this.field, width, height, states)\n  }\n\n  nextStep = () => {\n    try {\n      this.field = this.getUpdatedField()\n\n      if (this.state.status === STATUSES.play) {\n        this.requestID = requestAnimationFrame(this.nextStep)\n      }\n    } catch (e) {\n      cancelAnimationFrame(this.requestID)\n      this.field = getRandomField(this.state)\n      this.setState({\n        status: STATUSES.pause,\n      })\n    }\n    this.canvas.current.paint(this.field)\n  }\n\n  handleNew = () => {\n    this.randomizeField()\n    this.canvas.current.paint(this.field)\n  }\n\n  handleNext = () => {\n    this.field = this.getUpdatedField()\n    this.canvas.current.paint(this.field)\n  }\n\n  handlePlay = () => {\n    switch (this.state.status) {\n      case STATUSES.play:\n        this.setState({ status: STATUSES.pause })\n        break\n      case STATUSES.pause:\n        this.setState({ status: STATUSES.play }, this.nextStep)\n        break\n      default:\n    }\n  }\n\n  changeHandler = (name, value) => {\n    switch (name) {\n      case IDS.width:\n        this.updateFieldSize({ width: value })\n        break\n      case IDS.height:\n        this.updateFieldSize({ height: value })\n        break\n      default:\n    }\n    this.setState({ [name]: value })\n  }\n\n  fieldUpdater\n\n  render () {\n    return (\n      <div>\n        <Connector\n          state={this.state}\n          onChange={this.changeHandler}\n        >\n          <Input\n            id={IDS.width}\n            label=\"Field width\"\n            defaultNum={1}\n          />\n          <Input\n            id={IDS.height}\n            label=\"Field height\"\n            defaultNum={1}\n          />\n          <Input\n            id={IDS.states}\n            label=\"Number of states\"\n            defaultNum={1}\n          />\n        </Connector>\n        <div\n          onClick={this.handlePlay}\n          onKeyDown={this.processKey}\n          className={style.field}\n          role=\"presentation\"\n          title={this.getActionName()}\n        >\n          <CanvasField\n            width={this.state.width}\n            height={this.state.height}\n            states={this.state.states}\n            ref={this.canvas}\n          />\n        </div>\n        <p><em>Press Space or click field for play / pause</em></p>\n        <button type=\"button\" className={style.bigButton} onClick={this.handleNew}>\n          New\n        </button>\n        <button type=\"button\" className={style.bigButton} onClick={this.handlePlay}>\n          {this.getActionName()}\n        </button>\n        {this.state.status === STATUSES.pause && (\n          <button type=\"button\" className={style.bigButton} onClick={this.handleNext}>\n            Next step\n          </button>\n        )}\n      </div>\n    )\n  }\n}\n"]}