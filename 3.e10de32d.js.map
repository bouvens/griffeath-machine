{"version":3,"sources":["webpack:///./src/components/constants.js","webpack:///./src/components/common/GriffeathMachine.css?dfff","webpack:///./src/components/common/utils.js","webpack:///./src/components/original/CanvasField.jsx","webpack:///./src/components/original/GriffeathMachine.jsx"],"names":["IDS","width","height","states","status","DEFAULT","STATUSES","play","pause","SPACE_CODE","getRandomField","field","x","y","Math","floor","random","mod","number","limit","getUpdatedField","map","line","element","plusOne","CanvasField","drawPixel","h","index","props","hueToRgb","r","g","b","canvasData","data","paint","canvasContext","getImageData","putImageData","refCanvas","elem","getContext","render","React","PureComponent","GriffeathMachine","state","canvas","createRef","getActionName","randomizeField","processKey","e","keyCode","preventDefault","handlePlay","nextStep","requestID","requestAnimationFrame","cancelAnimationFrame","setState","current","handleNew","handleNext","changeHandler","name","value","componentWillMount","document","addEventListener","componentWillUnmount","style","bigButton","defaultProps"],"mappings":"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","file":"3.e10de32d.js","sourcesContent":["export const IDS = {\n  width: 'width',\n  height: 'height',\n  states: 'states',\n  status: 'status',\n}\n\nexport const DEFAULT = {\n  [IDS.width]: 700,\n  [IDS.height]: 700,\n  [IDS.states]: 16,\n}\n\nexport const STATUSES = {\n  play: 'Play',\n  pause: 'Pause',\n}\n\nexport const SPACE_CODE = 32\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"GriffeathMachine__field__2ugWL\",\"bigButton\":\"GriffeathMachine__bigButton__1GY-9\"};","export function getRandomField ({ width, height, states }) {\n  const field = []\n\n  for (let x = 0; x < width; x += 1) {\n    field[x] = []\n    for (let y = 0; y < height; y += 1) {\n      field[x][y] = Math.floor(Math.random() * states)\n    }\n  }\n\n  return field\n}\n\nconst mod = (number, limit) => (number < 0 ? number + limit : number % limit)\n\nexport const getUpdatedField = ({ field, width, height, states }) => field.map((line, x) => line.map((element, y) => {\n  const plusOne = mod(element + 1, states)\n\n  if (field[x][mod(y - 1, height)] === plusOne\n    || field[x][mod(y + 1, height)] === plusOne\n    || field[mod(x - 1, width)][y] === plusOne\n    || field[mod(x + 1, width)][y] === plusOne) {\n    return plusOne\n  }\n\n  return element\n}))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport hueToRgb from 'number-to-color/map'\n\nexport default class CanvasField extends React.PureComponent {\n  static propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    states: PropTypes.number.isRequired,\n  }\n\n  drawPixel = (x, y, h) => {\n    const index = (x + (y * this.props.width)) * 4\n    const { r, g, b } = hueToRgb(h)\n\n    this.canvasData.data[index] = r\n    this.canvasData.data[index + 1] = g\n    this.canvasData.data[index + 2] = b\n    this.canvasData.data[index + 3] = 255\n  }\n\n  paint = (field) => {\n    this.canvasData = this.canvasContext.getImageData(0, 0, this.props.width, this.props.height)\n\n    for (let x = 0; x < this.props.width; x += 1) {\n      for (let y = 0; y < this.props.height; y += 1) {\n        if (field[x]) {\n          this.drawPixel(x, y, field[x][y] / this.props.states)\n        }\n      }\n    }\n\n    this.canvasContext.putImageData(this.canvasData, 0, 0)\n  }\n\n  refCanvas = (elem) => {\n    this.canvasContext = elem && elem.getContext('2d')\n  }\n\n  canvasContext\n\n  canvasData\n\n  render () {\n    return (\n      <canvas\n        ref={this.refCanvas}\n        width={this.props.width}\n        height={this.props.height}\n      >\n        {'You are using an outdated browser without support of canvas elements.'}\n      </canvas>\n    )\n  }\n}\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Connector, Input } from 'state-control'\nimport { DEFAULT, IDS, SPACE_CODE, STATUSES } from '../constants'\nimport style from '../common/GriffeathMachine.css'\nimport { getRandomField, getUpdatedField } from '../common/utils'\nimport CanvasField from './CanvasField'\n\nexport default class GriffeathMachine extends PureComponent {\n  static propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    states: PropTypes.number.isRequired,\n  }\n\n  static defaultProps = { ...DEFAULT }\n\n  state = {\n    width: this.props.width,\n    height: this.props.height,\n    states: this.props.states,\n    status: STATUSES.pause,\n  }\n\n  field = null\n\n  canvas = React.createRef()\n\n  componentWillMount () {\n    this.randomizeField()\n    this.handlePlay()\n    document.addEventListener('keydown', this.processKey)\n  }\n\n  componentWillUnmount () {\n    cancelAnimationFrame(this.requestID)\n  }\n\n  getActionName = () => (this.state.status === STATUSES.play ? STATUSES.pause : STATUSES.play)\n\n  randomizeField = () => {\n    this.field = getRandomField(this.state)\n  }\n\n  processKey = (e) => {\n    if (e.keyCode === SPACE_CODE) {\n      e.preventDefault()\n      this.handlePlay()\n    }\n  }\n\n  nextStep = () => {\n    try {\n      this.field = getUpdatedField({ ...this.state, field: this.field })\n\n      if (this.state.status === STATUSES.play) {\n        this.requestID = requestAnimationFrame(this.nextStep)\n      }\n    } catch (e) {\n      cancelAnimationFrame(this.requestID)\n      this.field = getRandomField(this.state)\n      this.setState({\n        status: STATUSES.pause,\n      })\n    }\n    this.canvas.current.paint(this.field)\n  }\n\n  handleNew = () => {\n    this.randomizeField()\n    this.canvas.current.paint(this.field)\n  }\n\n  handleNext = () => {\n    this.field = getUpdatedField({ ...this.state, field: this.field })\n    this.canvas.current.paint(this.field)\n  }\n\n  handlePlay = () => {\n    switch (this.state.status) {\n      case STATUSES.play:\n        this.setState({ status: STATUSES.pause })\n        break\n      case STATUSES.pause:\n        this.setState({ status: STATUSES.play }, this.nextStep)\n        break\n      default:\n    }\n  }\n\n  changeHandler = (name, value) => {\n    this.setState({ [name]: value })\n  }\n\n  render () {\n    return (\n      <div>\n        <Connector\n          state={this.state}\n          onChange={this.changeHandler}\n        >\n          <Input\n            id={IDS.width}\n            label=\"Field width\"\n            defaultNum={1}\n          />\n          <Input\n            id={IDS.height}\n            label=\"Field height\"\n            defaultNum={1}\n          />\n          <Input\n            id={IDS.states}\n            label=\"Number of states\"\n            defaultNum={1}\n          />\n        </Connector>\n        <div\n          onClick={this.handlePlay}\n          onKeyDown={this.processKey}\n          className={style.field}\n          role=\"presentation\"\n          title={this.getActionName()}\n        >\n          <CanvasField\n            width={this.state.width}\n            height={this.state.height}\n            field={this.field}\n            states={this.state.states}\n            ref={this.canvas}\n          />\n        </div>\n        <p><em>Press Space or click field for play / pause</em></p>\n        <button type=\"button\" className={style.bigButton} onClick={this.handleNew}>\n          New\n        </button>\n        <button type=\"button\" className={style.bigButton} onClick={this.handlePlay}>\n          {this.getActionName()}\n        </button>\n        {this.state.status === STATUSES.pause && (\n          <button type=\"button\" className={style.bigButton} onClick={this.handleNext}>\n            Next step\n          </button>\n        )}\n      </div>\n    )\n  }\n}\n"],"sourceRoot":""}