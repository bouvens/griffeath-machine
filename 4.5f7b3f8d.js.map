{"version":3,"sources":["webpack:///./src/components/constants.js","webpack:///./src/components/common/GriffeathMachine.css?dfff","webpack:///./src/components/gpu/utils.js","webpack:///./src/components/gpu/CanvasField.jsx","webpack:///./src/components/gpu/gpu.js","webpack:///./src/components/gpu/GriffeathMachine.jsx"],"names":["IDS","width","height","states","status","DEFAULT","STATUSES","play","pause","SPACE_CODE","getRandomField","field","x","y","Math","floor","random","mapNumToRGB","h","h2rgb","initT","t","r","g","b","round","colorMapping","DEFAULT_COLOR","getColor","length","i","CanvasField","drawPixel","index","props","uInt32Array","paint","Uint32Array","canvasData","ImageData","Uint8ClampedArray","buffer","canvasContext","putImageData","refCanvas","elem","getContext","render","React","PureComponent","myMod","number","limit","myKernel","ver","thread","hor","element","plusOne","next","gpu","GPU","makeGetUpdatedField","fieldWidth","fieldHeight","createKernel","setOutput","setFunctions","GriffeathMachine","state","canvas","createRef","getActionName","randomizeField","processKey","e","keyCode","preventDefault","handlePlay","updateFieldSize","fieldUpdater","getUpdatedField","nextStep","requestID","requestAnimationFrame","cancelAnimationFrame","setState","current","handleNew","handleNext","changeHandler","name","value","componentWillMount","document","addEventListener","componentWillUnmount","style","bigButton","defaultProps"],"mappings":"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","file":"4.5f7b3f8d.js","sourcesContent":["export const IDS = {\n  width: 'width',\n  height: 'height',\n  states: 'states',\n  status: 'status',\n}\n\nexport const DEFAULT = {\n  [IDS.width]: 700,\n  [IDS.height]: 700,\n  [IDS.states]: 16,\n}\n\nexport const STATUSES = {\n  play: 'Play',\n  pause: 'Pause',\n}\n\nexport const SPACE_CODE = 32\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"GriffeathMachine__field__2ugWL\",\"bigButton\":\"GriffeathMachine__bigButton__1GY-9\"};","export function getRandomField ({ width, height, states }) {\n  const field = []\n\n  for (let x = 0; x < width; x += 1) {\n    field[x] = []\n    for (let y = 0; y < height; y += 1) {\n      field[x][y] = Math.floor(Math.random() * states)\n    }\n  }\n\n  return field\n}\n\nexport function mapNumToRGB (h) {\n  const h2rgb = (initT) => {\n    const t = initT < 0 ? initT + 1 : initT % 1\n\n    if (t < 1 / 6) {\n      return 6 * t\n    }\n    if (t < 1 / 2) {\n      return 1\n    }\n    if (t < 2 / 3) {\n      return ((2 / 3) - t) * 6\n    }\n\n    return 0\n  }\n\n  const r = h2rgb(h + (1 / 3))\n  const g = h2rgb(h)\n  const b = h2rgb(h - (1 / 3))\n\n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255),\n  }\n}\n\nconst colorMapping = []\nconst DEFAULT_COLOR = { r: 0, g: 0, b: 0 }\n\nexport function getColor (h, states) {\n  if (colorMapping.length !== states) {\n    colorMapping.length = states\n    for (let i = 0; i < states; i += 1) {\n      colorMapping[i] = mapNumToRGB(i / states)\n    }\n  }\n  return colorMapping[h] || DEFAULT_COLOR\n}\n","/* eslint-disable no-bitwise */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { getColor } from './utils'\n\nexport default class CanvasField extends React.PureComponent {\n  static propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    states: PropTypes.number.isRequired,\n  }\n\n  drawPixel = (x, y, h, states) => {\n    const index = x + (y * this.props.width)\n    const { r, g, b } = getColor(h, states)\n\n    this.uInt32Array[index] = (255 << 24) | (b << 16) | (g << 8) | r\n  }\n\n  paint = (field) => {\n    const { width, height, states } = this.props\n\n    this.uInt32Array = new Uint32Array(width * height)\n\n    for (let x = 0; x < width; x += 1) {\n      for (let y = 0; y < height; y += 1) {\n        if (field[x]) {\n          this.drawPixel(x, y, field[x][y], states)\n        }\n      }\n    }\n\n    const canvasData = new ImageData(new Uint8ClampedArray(this.uInt32Array.buffer), width, height)\n    this.canvasContext.putImageData(canvasData, 0, 0)\n  }\n\n  refCanvas = (elem) => {\n    this.canvasContext = elem && elem.getContext('2d')\n  }\n\n  canvasContext\n\n  uInt32Array\n\n  render () {\n    return (\n      <canvas\n        ref={this.refCanvas}\n        width={this.props.width}\n        height={this.props.height}\n      >\n        {'You are using an outdated browser without support of canvas elements.'}\n      </canvas>\n    )\n  }\n}\n","import GPU from 'gpu.js'\r\n\r\nfunction myMod (number, limit) {\r\n  if (number < 0) {\r\n    return number + limit\r\n  }\r\n  return (number % limit)\r\n}\r\n\r\nfunction myKernel (field, width, height, states) {\r\n  // what a mess\r\n  const ver = this.thread.x\r\n  const hor = this.thread.y\r\n  const element = field[hor][ver]\r\n  const plusOne = myMod(element + 1, states)\r\n\r\n  let next = myMod(hor - 1, width)\r\n  if (field[next][ver] === plusOne) {\r\n    return plusOne\r\n  }\r\n\r\n  next = myMod(hor + 1, width)\r\n  if (field[next][ver] === plusOne) {\r\n    return plusOne\r\n  }\r\n\r\n  next = myMod(ver - 1, height)\r\n  if (field[hor][next] === plusOne) {\r\n    return plusOne\r\n  }\r\n\r\n  next = myMod(ver + 1, height)\r\n  if (field[hor][next] === plusOne) {\r\n    return plusOne\r\n  }\r\n\r\n  return element\r\n}\r\n\r\nconst gpu = new GPU()\r\n\r\nexport const makeGetUpdatedField = (fieldWidth, fieldHeight) => gpu\r\n  .createKernel(myKernel)\r\n  .setOutput([fieldHeight, fieldWidth]) // more of the mess\r\n  .setFunctions([myMod])\r\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Connector, Input } from 'state-control'\nimport { DEFAULT, IDS, SPACE_CODE, STATUSES } from '../constants'\nimport style from '../common/GriffeathMachine.css'\nimport { getRandomField} from './utils'\nimport CanvasField from './CanvasField'\nimport { makeGetUpdatedField } from './gpu'\n\nexport default class GriffeathMachine extends PureComponent {\n  static propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    states: PropTypes.number.isRequired,\n  }\n\n  static defaultProps = { ...DEFAULT }\n\n  state = {\n    width: this.props.width,\n    height: this.props.height,\n    states: this.props.states,\n    status: STATUSES.pause,\n  }\n\n  field = null\n\n  canvas = React.createRef()\n\n  componentWillMount () {\n    this.randomizeField()\n    this.handlePlay()\n    document.addEventListener('keydown', this.processKey)\n    this.updateFieldSize({})\n  }\n\n  componentWillUnmount () {\n    cancelAnimationFrame(this.requestID)\n  }\n\n  getActionName = () => (this.state.status === STATUSES.play ? STATUSES.pause : STATUSES.play)\n\n  randomizeField = () => {\n    this.field = getRandomField(this.state)\n  }\n\n  processKey = (e) => {\n    if (e.keyCode === SPACE_CODE) {\n      e.preventDefault()\n      this.handlePlay()\n    }\n  }\n\n  updateFieldSize = ({ width = this.props.width, height = this.props.height }) => {\n    this.fieldUpdater = makeGetUpdatedField(width, height)\n  }\n\n  getUpdatedField = () => {\n    const { width, height, states } = this.state\n    return this.fieldUpdater(this.field, width, height, states)\n  }\n\n  nextStep = () => {\n    try {\n      this.field = this.getUpdatedField()\n\n      if (this.state.status === STATUSES.play) {\n        this.requestID = requestAnimationFrame(this.nextStep)\n      }\n    } catch (e) {\n      cancelAnimationFrame(this.requestID)\n      this.field = getRandomField(this.state)\n      this.setState({\n        status: STATUSES.pause,\n      })\n    }\n    this.canvas.current.paint(this.field)\n  }\n\n  handleNew = () => {\n    this.randomizeField()\n    this.canvas.current.paint(this.field)\n  }\n\n  handleNext = () => {\n    this.field = this.getUpdatedField()\n    this.canvas.current.paint(this.field)\n  }\n\n  handlePlay = () => {\n    switch (this.state.status) {\n      case STATUSES.play:\n        this.setState({ status: STATUSES.pause })\n        break\n      case STATUSES.pause:\n        this.setState({ status: STATUSES.play }, this.nextStep)\n        break\n      default:\n    }\n  }\n\n  changeHandler = (name, value) => {\n    switch (name) {\n      case IDS.width:\n        this.updateFieldSize({ width: value })\n        break\n      case IDS.height:\n        this.updateFieldSize({ height: value })\n        break\n      default:\n    }\n    this.setState({ [name]: value })\n  }\n\n  fieldUpdater\n\n  render () {\n    return (\n      <div>\n        <Connector\n          state={this.state}\n          onChange={this.changeHandler}\n        >\n          <Input\n            id={IDS.width}\n            label=\"Field width\"\n            defaultNum={1}\n          />\n          <Input\n            id={IDS.height}\n            label=\"Field height\"\n            defaultNum={1}\n          />\n          <Input\n            id={IDS.states}\n            label=\"Number of states\"\n            defaultNum={1}\n          />\n        </Connector>\n        <div\n          onClick={this.handlePlay}\n          onKeyDown={this.processKey}\n          className={style.field}\n          role=\"presentation\"\n          title={this.getActionName()}\n        >\n          <CanvasField\n            width={this.state.width}\n            height={this.state.height}\n            states={this.state.states}\n            ref={this.canvas}\n          />\n        </div>\n        <p><em>Press Space or click field for play / pause</em></p>\n        <button type=\"button\" className={style.bigButton} onClick={this.handleNew}>\n          New\n        </button>\n        <button type=\"button\" className={style.bigButton} onClick={this.handlePlay}>\n          {this.getActionName()}\n        </button>\n        {this.state.status === STATUSES.pause && (\n          <button type=\"button\" className={style.bigButton} onClick={this.handleNext}>\n            Next step\n          </button>\n        )}\n      </div>\n    )\n  }\n}\n"],"sourceRoot":""}